2024-07-11 15:07:15,880[yyyy-mm-dd HH-MM-SS] DEBUG  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2024-07-11 15:07:15,885[yyyy-mm-dd HH-MM-SS] TRACE  Starting createEntityManagerFactory for persistenceUnitName libPU
2024-07-11 15:07:15,888[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : libPU
2024-07-11 15:07:15,930[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to parse persistence.xml file : file:/D:/dinesh/Dinesh/javaprogs/LPU2024/libHib2/target/classes/META-INF/persistence.xml
2024-07-11 15:07:16,024[yyyy-mm-dd HH-MM-SS] TRACE  JAR URL from URL Entry: file:/D:/dinesh/Dinesh/javaprogs/LPU2024/libHib2/target/classes/META-INF/persistence.xml >> file:/D:/dinesh/Dinesh/javaprogs/LPU2024/libHib2/target/classes/
2024-07-11 15:07:16,039[yyyy-mm-dd HH-MM-SS] TRACE  Persistence unit name from persistence.xml : libPU
2024-07-11 15:07:16,041[yyyy-mm-dd HH-MM-SS] DEBUG  Located and parsed 1 persistence units; checking each
2024-07-11 15:07:16,042[yyyy-mm-dd HH-MM-SS] DEBUG  Checking persistence-unit [name=libPU, explicit-provider=null] against incoming persistence unit name [libPU]
2024-07-11 15:07:16,042[yyyy-mm-dd HH-MM-SS] DEBUG  No PersistenceProvider explicitly requested, assuming Hibernate
2024-07-11 15:07:16,043[yyyy-mm-dd HH-MM-SS] TRACE  Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
2024-07-11 15:07:16,054[yyyy-mm-dd HH-MM-SS] DEBUG  PersistenceUnitInfo [
	name: libPU
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/dinesh/Dinesh/javaprogs/LPU2024/libHib2/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.model.Book]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: password
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/lpu24
		hibernate.dialect: org.hibernate.dialect.MySQL57Dialect
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2024-07-11 15:07:16,061[yyyy-mm-dd HH-MM-SS] DEBUG  Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-07-11 15:07:16,066[yyyy-mm-dd HH-MM-SS] DEBUG  Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-07-11 15:07:16,074[yyyy-mm-dd HH-MM-SS] DEBUG  Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-11 15:07:16,157[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
2024-07-11 15:07:16,158[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2024-07-11 15:07:16,160[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
2024-07-11 15:07:16,160[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2024-07-11 15:07:16,160[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2024-07-11 15:07:16,164[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
2024-07-11 15:07:16,165[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
2024-07-11 15:07:16,166[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
2024-07-11 15:07:16,167[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
2024-07-11 15:07:16,168[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
2024-07-11 15:07:16,168[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
2024-07-11 15:07:16,169[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
2024-07-11 15:07:16,170[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
2024-07-11 15:07:16,171[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
2024-07-11 15:07:16,171[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
2024-07-11 15:07:16,223[yyyy-mm-dd HH-MM-SS] INFO   HHH000412: Hibernate ORM core version 5.6.15.Final
2024-07-11 15:07:16,224[yyyy-mm-dd HH-MM-SS] DEBUG  HHH000206: hibernate.properties not found
2024-07-11 15:07:16,436[yyyy-mm-dd HH-MM-SS] DEBUG  Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-07-11 15:07:16,444[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
2024-07-11 15:07:16,449[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.cache.spi.RegionFactory]
2024-07-11 15:07:16,451[yyyy-mm-dd HH-MM-SS] DEBUG  Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-11 15:07:16,452[yyyy-mm-dd HH-MM-SS] DEBUG  Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-07-11 15:07:16,473[yyyy-mm-dd HH-MM-SS] INFO   HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-11 15:07:16,677[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration boolean -> org.hibernate.type.BooleanType@17046283
2024-07-11 15:07:16,677[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration boolean -> org.hibernate.type.BooleanType@17046283
2024-07-11 15:07:16,677[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@17046283
2024-07-11 15:07:16,678[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5a63f509
2024-07-11 15:07:16,679[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration true_false -> org.hibernate.type.TrueFalseType@e056f20
2024-07-11 15:07:16,680[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration yes_no -> org.hibernate.type.YesNoType@10e41621
2024-07-11 15:07:16,684[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration byte -> org.hibernate.type.ByteType@a9cd3b1
2024-07-11 15:07:16,684[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration byte -> org.hibernate.type.ByteType@a9cd3b1
2024-07-11 15:07:16,684[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@a9cd3b1
2024-07-11 15:07:16,685[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration character -> org.hibernate.type.CharacterType@6a400542
2024-07-11 15:07:16,686[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration char -> org.hibernate.type.CharacterType@6a400542
2024-07-11 15:07:16,686[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a400542
2024-07-11 15:07:16,687[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration short -> org.hibernate.type.ShortType@6a28ffa4
2024-07-11 15:07:16,688[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration short -> org.hibernate.type.ShortType@6a28ffa4
2024-07-11 15:07:16,688[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6a28ffa4
2024-07-11 15:07:16,689[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration integer -> org.hibernate.type.IntegerType@30ee2816
2024-07-11 15:07:16,690[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration int -> org.hibernate.type.IntegerType@30ee2816
2024-07-11 15:07:16,690[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@30ee2816
2024-07-11 15:07:16,692[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration long -> org.hibernate.type.LongType@1139b2f3
2024-07-11 15:07:16,692[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration long -> org.hibernate.type.LongType@1139b2f3
2024-07-11 15:07:16,692[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Long -> org.hibernate.type.LongType@1139b2f3
2024-07-11 15:07:16,694[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration float -> org.hibernate.type.FloatType@50a638b5
2024-07-11 15:07:16,694[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration float -> org.hibernate.type.FloatType@50a638b5
2024-07-11 15:07:16,694[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50a638b5
2024-07-11 15:07:16,696[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration double -> org.hibernate.type.DoubleType@1725dc0f
2024-07-11 15:07:16,696[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration double -> org.hibernate.type.DoubleType@1725dc0f
2024-07-11 15:07:16,697[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1725dc0f
2024-07-11 15:07:16,699[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@41e36e46
2024-07-11 15:07:16,699[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@41e36e46
2024-07-11 15:07:16,700[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2145b572
2024-07-11 15:07:16,700[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2145b572
2024-07-11 15:07:16,701[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration string -> org.hibernate.type.StringType@1cbbffcd
2024-07-11 15:07:16,701[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.String -> org.hibernate.type.StringType@1cbbffcd
2024-07-11 15:07:16,703[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d51f06e
2024-07-11 15:07:16,704[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3427b02d
2024-07-11 15:07:16,705[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration url -> org.hibernate.type.UrlType@c33b74f
2024-07-11 15:07:16,705[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.net.URL -> org.hibernate.type.UrlType@c33b74f
2024-07-11 15:07:16,707[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration Duration -> org.hibernate.type.DurationType@68999068
2024-07-11 15:07:16,707[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.Duration -> org.hibernate.type.DurationType@68999068
2024-07-11 15:07:16,721[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration Instant -> org.hibernate.type.InstantType@43195e57
2024-07-11 15:07:16,721[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43195e57
2024-07-11 15:07:16,723[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6e171cd7
2024-07-11 15:07:16,723[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6e171cd7
2024-07-11 15:07:16,724[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration LocalDate -> org.hibernate.type.LocalDateType@123ef382
2024-07-11 15:07:16,724[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@123ef382
2024-07-11 15:07:16,726[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7334aada
2024-07-11 15:07:16,726[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7334aada
2024-07-11 15:07:16,727[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52e6fdee
2024-07-11 15:07:16,727[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@52e6fdee
2024-07-11 15:07:16,730[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15ff3e9e
2024-07-11 15:07:16,730[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15ff3e9e
2024-07-11 15:07:16,734[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44ebcd03
2024-07-11 15:07:16,735[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44ebcd03
2024-07-11 15:07:16,736[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration date -> org.hibernate.type.DateType@359f7cdf
2024-07-11 15:07:16,736[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.Date -> org.hibernate.type.DateType@359f7cdf
2024-07-11 15:07:16,738[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration time -> org.hibernate.type.TimeType@6b927fb
2024-07-11 15:07:16,738[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b927fb
2024-07-11 15:07:16,740[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration timestamp -> org.hibernate.type.TimestampType@7b9a4292
2024-07-11 15:07:16,740[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7b9a4292
2024-07-11 15:07:16,740[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7b9a4292
2024-07-11 15:07:16,741[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6379eb
2024-07-11 15:07:16,742[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration calendar -> org.hibernate.type.CalendarType@1aa7ecca
2024-07-11 15:07:16,743[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1aa7ecca
2024-07-11 15:07:16,743[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1aa7ecca
2024-07-11 15:07:16,744[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ec7ffd3
2024-07-11 15:07:16,746[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6d763516
2024-07-11 15:07:16,747[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration locale -> org.hibernate.type.LocaleType@245b4bdc
2024-07-11 15:07:16,748[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@245b4bdc
2024-07-11 15:07:16,749[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration currency -> org.hibernate.type.CurrencyType@16293aa2
2024-07-11 15:07:16,749[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@16293aa2
2024-07-11 15:07:16,749[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration timezone -> org.hibernate.type.TimeZoneType@399f45b1
2024-07-11 15:07:16,751[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@399f45b1
2024-07-11 15:07:16,752[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration class -> org.hibernate.type.ClassType@35cabb2a
2024-07-11 15:07:16,752[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Class -> org.hibernate.type.ClassType@35cabb2a
2024-07-11 15:07:16,753[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16d04d3d
2024-07-11 15:07:16,753[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16d04d3d
2024-07-11 15:07:16,754[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@36902638
2024-07-11 15:07:16,755[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration binary -> org.hibernate.type.BinaryType@3febb011
2024-07-11 15:07:16,755[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration byte[] -> org.hibernate.type.BinaryType@3febb011
2024-07-11 15:07:16,755[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration [B -> org.hibernate.type.BinaryType@3febb011
2024-07-11 15:07:16,757[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f3b84b8
2024-07-11 15:07:16,757[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f3b84b8
2024-07-11 15:07:16,757[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f3b84b8
2024-07-11 15:07:16,759[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration row_version -> org.hibernate.type.RowVersionType@1623b78d
2024-07-11 15:07:16,760[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration image -> org.hibernate.type.ImageType@4550bb58
2024-07-11 15:07:16,761[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration characters -> org.hibernate.type.CharArrayType@6069db50
2024-07-11 15:07:16,761[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration char[] -> org.hibernate.type.CharArrayType@6069db50
2024-07-11 15:07:16,761[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration [C -> org.hibernate.type.CharArrayType@6069db50
2024-07-11 15:07:16,763[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@67c27493
2024-07-11 15:07:16,763[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@67c27493
2024-07-11 15:07:16,763[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@67c27493
2024-07-11 15:07:16,765[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration text -> org.hibernate.type.TextType@5b8dfcc1
2024-07-11 15:07:16,765[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration ntext -> org.hibernate.type.NTextType@35e2d654
2024-07-11 15:07:16,768[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration blob -> org.hibernate.type.BlobType@42a48628
2024-07-11 15:07:16,768[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@42a48628
2024-07-11 15:07:16,768[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1283bb96
2024-07-11 15:07:16,769[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration clob -> org.hibernate.type.ClobType@49e53c76
2024-07-11 15:07:16,770[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@49e53c76
2024-07-11 15:07:16,771[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration nclob -> org.hibernate.type.NClobType@799f10e1
2024-07-11 15:07:16,771[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@799f10e1
2024-07-11 15:07:16,772[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3023df74
2024-07-11 15:07:16,772[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a65fe7c
2024-07-11 15:07:16,774[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration serializable -> org.hibernate.type.SerializableType@6f1de4c7
2024-07-11 15:07:16,778[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration object -> org.hibernate.type.ObjectType@55182842
2024-07-11 15:07:16,778[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@55182842
2024-07-11 15:07:16,781[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5656be13
2024-07-11 15:07:16,781[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4218d6a3
2024-07-11 15:07:16,781[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@76505305
2024-07-11 15:07:16,781[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@14cd1699
2024-07-11 15:07:16,781[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@77888435
2024-07-11 15:07:16,782[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@73a1e9a9
2024-07-11 15:07:16,782[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@71d44a3
2024-07-11 15:07:16,783[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7b98f307
2024-07-11 15:07:16,796[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
2024-07-11 15:07:16,800[yyyy-mm-dd HH-MM-SS] DEBUG  Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@22ff4249] into BootstrapContext; was [null]
2024-07-11 15:07:16,801[yyyy-mm-dd HH-MM-SS] DEBUG  Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2d1ef81a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4c402120]
2024-07-11 15:07:16,871[yyyy-mm-dd HH-MM-SS] DEBUG  Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2024-07-11 15:07:16,871[yyyy-mm-dd HH-MM-SS] DEBUG  ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2024-07-11 15:07:16,880[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
2024-07-11 15:07:16,882[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-11 15:07:16,883[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-11 15:07:16,884[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 15:07:16,884[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 15:07:16,884[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-11 15:07:16,885[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-11 15:07:16,886[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-11 15:07:16,887[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 15:07:16,888[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-07-11 15:07:16,888[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-11 15:07:16,889[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-11 15:07:16,890[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-07-11 15:07:16,890[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 15:07:16,891[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-11 15:07:16,891[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2024-07-11 15:07:16,891[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
2024-07-11 15:07:16,892[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
2024-07-11 15:07:16,894[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2024-07-11 15:07:16,897[yyyy-mm-dd HH-MM-SS] WARN   HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-07-11 15:07:16,904[yyyy-mm-dd HH-MM-SS] INFO   HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/lpu24]
2024-07-11 15:07:16,905[yyyy-mm-dd HH-MM-SS] INFO   HHH10001001: Connection properties: {user=root, password=password}
2024-07-11 15:07:16,905[yyyy-mm-dd HH-MM-SS] INFO   HHH10001003: Autocommit mode: false
2024-07-11 15:07:16,908[yyyy-mm-dd HH-MM-SS] DEBUG  Initializing Connection pool with 1 Connections
2024-07-11 15:07:16,909[yyyy-mm-dd HH-MM-SS] INFO   HHH000115: Hibernate connection pool size: 20 (min=1)
2024-07-11 15:07:17,599[yyyy-mm-dd HH-MM-SS] DEBUG  Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2024-07-11 15:07:17,599[yyyy-mm-dd HH-MM-SS] DEBUG  Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
2024-07-11 15:07:17,599[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC version : 4.2
2024-07-11 15:07:17,612[yyyy-mm-dd HH-MM-SS] INFO   HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2024-07-11 15:07:17,625[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-11 15:07:17,626[yyyy-mm-dd HH-MM-SS] DEBUG  IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-11 15:07:17,632[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [lpu24]
2024-07-11 15:07:17,632[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,639[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
2024-07-11 15:07:17,641[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
2024-07-11 15:07:17,646[yyyy-mm-dd HH-MM-SS] DEBUG  Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d1dee39] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48d5f34e]
2024-07-11 15:07:17,693[yyyy-mm-dd HH-MM-SS] DEBUG  Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-11 15:07:17,708[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Player
2024-07-11 15:07:17,722[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:07:17,723[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:07:17,728[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Player
2024-07-11 15:07:17,728[yyyy-mm-dd HH-MM-SS] TRACE  Import: Player -> com.model.Player
2024-07-11 15:07:17,728[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Player -> com.model.Player
2024-07-11 15:07:17,729[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Player]
2024-07-11 15:07:17,731[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Player]
2024-07-11 15:07:17,733[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Player on table Player
2024-07-11 15:07:17,759[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Player.playerid
2024-07-11 15:07:17,767[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerid]
2024-07-11 15:07:17,767[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerid]
2024-07-11 15:07:17,767[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=playerid, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,769[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Player] is safe
2024-07-11 15:07:17,769[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Player
2024-07-11 15:07:17,770[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property playerid with lazy=false
2024-07-11 15:07:17,771[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Player:playerid]
2024-07-11 15:07:17,774[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for playerid
2024-07-11 15:07:17,776[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerid]
2024-07-11 15:07:17,776[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerid]
2024-07-11 15:07:17,776[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerid]
2024-07-11 15:07:17,777[yyyy-mm-dd HH-MM-SS] DEBUG  Building property playerid
2024-07-11 15:07:17,781[yyyy-mm-dd HH-MM-SS] TRACE  Cascading playerid with null
2024-07-11 15:07:17,783[yyyy-mm-dd HH-MM-SS] TRACE  Add sequence generator with name: playerseq
2024-07-11 15:07:17,784[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(playerid)]), playerid, org.hibernate.id.enhanced.SequenceStyleGenerator, playerseq, ...)
2024-07-11 15:07:17,785[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on playerid
2024-07-11 15:07:17,786[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Player.kit
2024-07-11 15:07:17,788[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2024-07-11 15:07:17,788[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit]
2024-07-11 15:07:17,788[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit]
2024-07-11 15:07:17,788[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=kit, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,791[yyyy-mm-dd HH-MM-SS] TRACE  Fetching kit with JOIN
2024-07-11 15:07:17,793[yyyy-mm-dd HH-MM-SS] DEBUG  Building property kit
2024-07-11 15:07:17,793[yyyy-mm-dd HH-MM-SS] TRACE  Cascading kit with none
2024-07-11 15:07:17,793[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Player.name
2024-07-11 15:07:17,794[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,794[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,794[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,794[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:07:17,795[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Player:name]
2024-07-11 15:07:17,795[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:07:17,795[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,796[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,796[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,797[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:07:17,797[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:07:17,797[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Player.team
2024-07-11 15:07:17,798[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:07:17,798[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='teamid', referencedColumn='', mappedBy=''}
2024-07-11 15:07:17,798[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [team]
2024-07-11 15:07:17,798[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [team]
2024-07-11 15:07:17,799[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=team, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,799[yyyy-mm-dd HH-MM-SS] DEBUG  Building property team
2024-07-11 15:07:17,800[yyyy-mm-dd HH-MM-SS] TRACE  Cascading team with none
2024-07-11 15:07:17,807[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Department
2024-07-11 15:07:17,807[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:07:17,807[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:07:17,807[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Department
2024-07-11 15:07:17,807[yyyy-mm-dd HH-MM-SS] TRACE  Import: Department -> com.model.Department
2024-07-11 15:07:17,807[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Department -> com.model.Department
2024-07-11 15:07:17,807[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Department]
2024-07-11 15:07:17,807[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Department]
2024-07-11 15:07:17,808[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Department on table Department
2024-07-11 15:07:17,812[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Department.depid
2024-07-11 15:07:17,812[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:07:17,812[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:07:17,813[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=depid, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,813[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Department] is safe
2024-07-11 15:07:17,813[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Department
2024-07-11 15:07:17,813[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property depid with lazy=false
2024-07-11 15:07:17,813[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Department:depid]
2024-07-11 15:07:17,813[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for depid
2024-07-11 15:07:17,813[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:07:17,813[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:07:17,813[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:07:17,813[yyyy-mm-dd HH-MM-SS] DEBUG  Building property depid
2024-07-11 15:07:17,813[yyyy-mm-dd HH-MM-SS] TRACE  Cascading depid with null
2024-07-11 15:07:17,814[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(depid)]), depid, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2024-07-11 15:07:17,814[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on depid
2024-07-11 15:07:17,814[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Department.employees
2024-07-11 15:07:17,814[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
2024-07-11 15:07:17,814[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [employees]
2024-07-11 15:07:17,814[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [employees]
2024-07-11 15:07:17,815[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=employees, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,817[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=null, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,824[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [element]
2024-07-11 15:07:17,824[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [element]
2024-07-11 15:07:17,824[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=element, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,825[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [employees_KEY]
2024-07-11 15:07:17,825[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,826[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [employees_KEY]
2024-07-11 15:07:17,826[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
2024-07-11 15:07:17,826[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
2024-07-11 15:07:17,827[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
2024-07-11 15:07:17,827[yyyy-mm-dd HH-MM-SS] DEBUG  Collection role: com.model.Department.employees
2024-07-11 15:07:17,829[yyyy-mm-dd HH-MM-SS] DEBUG  Building property employees
2024-07-11 15:07:17,829[yyyy-mm-dd HH-MM-SS] TRACE  Cascading employees with none
2024-07-11 15:07:17,829[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Department.establishdate
2024-07-11 15:07:17,829[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [establishdate]
2024-07-11 15:07:17,829[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [establishdate]
2024-07-11 15:07:17,829[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=establishdate, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,829[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property establishdate with lazy=false
2024-07-11 15:07:17,830[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Department:establishdate]
2024-07-11 15:07:17,830[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for establishdate
2024-07-11 15:07:17,830[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [establishdate]
2024-07-11 15:07:17,830[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [establishdate]
2024-07-11 15:07:17,830[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [establishdate]
2024-07-11 15:07:17,830[yyyy-mm-dd HH-MM-SS] DEBUG  Building property establishdate
2024-07-11 15:07:17,832[yyyy-mm-dd HH-MM-SS] TRACE  Cascading establishdate with null
2024-07-11 15:07:17,832[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Department.name
2024-07-11 15:07:17,832[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,832[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,832[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,832[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:07:17,833[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Department:name]
2024-07-11 15:07:17,833[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:07:17,833[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,833[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,833[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,833[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:07:17,833[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:07:17,834[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Project
2024-07-11 15:07:17,835[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:07:17,835[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:07:17,835[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Project
2024-07-11 15:07:17,835[yyyy-mm-dd HH-MM-SS] TRACE  Import: Project -> com.model.Project
2024-07-11 15:07:17,835[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Project -> com.model.Project
2024-07-11 15:07:17,835[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Project]
2024-07-11 15:07:17,835[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Project]
2024-07-11 15:07:17,836[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Project on table Project
2024-07-11 15:07:17,836[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Project.projid
2024-07-11 15:07:17,836[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:07:17,838[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:07:17,838[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Project), mappingColumn=projid, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,838[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Project] is safe
2024-07-11 15:07:17,838[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Project
2024-07-11 15:07:17,838[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property projid with lazy=false
2024-07-11 15:07:17,838[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Project:projid]
2024-07-11 15:07:17,838[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for projid
2024-07-11 15:07:17,838[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:07:17,838[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:07:17,838[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:07:17,838[yyyy-mm-dd HH-MM-SS] DEBUG  Building property projid
2024-07-11 15:07:17,839[yyyy-mm-dd HH-MM-SS] TRACE  Cascading projid with null
2024-07-11 15:07:17,839[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(projid)]), projid, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2024-07-11 15:07:17,839[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on projid
2024-07-11 15:07:17,839[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Project.amount
2024-07-11 15:07:17,839[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [amount]
2024-07-11 15:07:17,839[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [amount]
2024-07-11 15:07:17,840[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Project), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,840[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property amount with lazy=false
2024-07-11 15:07:17,840[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Project:amount]
2024-07-11 15:07:17,840[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for amount
2024-07-11 15:07:17,840[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [amount]
2024-07-11 15:07:17,840[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [amount]
2024-07-11 15:07:17,840[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [amount]
2024-07-11 15:07:17,840[yyyy-mm-dd HH-MM-SS] DEBUG  Building property amount
2024-07-11 15:07:17,840[yyyy-mm-dd HH-MM-SS] TRACE  Cascading amount with null
2024-07-11 15:07:17,840[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Project.title
2024-07-11 15:07:17,841[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:07:17,841[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:07:17,841[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Project), mappingColumn=title, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,841[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property title with lazy=false
2024-07-11 15:07:17,841[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Project:title]
2024-07-11 15:07:17,841[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for title
2024-07-11 15:07:17,841[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:07:17,841[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:07:17,841[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:07:17,841[yyyy-mm-dd HH-MM-SS] DEBUG  Building property title
2024-07-11 15:07:17,841[yyyy-mm-dd HH-MM-SS] TRACE  Cascading title with null
2024-07-11 15:07:17,842[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Book
2024-07-11 15:07:17,842[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:07:17,842[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:07:17,842[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Book
2024-07-11 15:07:17,842[yyyy-mm-dd HH-MM-SS] TRACE  Import: Book -> com.model.Book
2024-07-11 15:07:17,842[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Book -> com.model.Book
2024-07-11 15:07:17,842[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Book]
2024-07-11 15:07:17,842[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Book]
2024-07-11 15:07:17,842[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Book on table Book
2024-07-11 15:07:17,845[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.bid
2024-07-11 15:07:17,845[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [bid]
2024-07-11 15:07:17,845[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [bid]
2024-07-11 15:07:17,846[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=bid, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,846[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Book] is safe
2024-07-11 15:07:17,846[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Book
2024-07-11 15:07:17,846[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property bid with lazy=false
2024-07-11 15:07:17,846[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:bid]
2024-07-11 15:07:17,846[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for bid
2024-07-11 15:07:17,847[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [bid]
2024-07-11 15:07:17,847[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [bid]
2024-07-11 15:07:17,847[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [bid]
2024-07-11 15:07:17,847[yyyy-mm-dd HH-MM-SS] DEBUG  Building property bid
2024-07-11 15:07:17,847[yyyy-mm-dd HH-MM-SS] TRACE  Cascading bid with null
2024-07-11 15:07:17,847[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(bid)]), bid, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2024-07-11 15:07:17,848[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on bid
2024-07-11 15:07:17,848[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.author
2024-07-11 15:07:17,848[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [author]
2024-07-11 15:07:17,848[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [author]
2024-07-11 15:07:17,849[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,849[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property author with lazy=false
2024-07-11 15:07:17,849[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:author]
2024-07-11 15:07:17,849[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for author
2024-07-11 15:07:17,849[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [author]
2024-07-11 15:07:17,849[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [author]
2024-07-11 15:07:17,850[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [author]
2024-07-11 15:07:17,850[yyyy-mm-dd HH-MM-SS] DEBUG  Building property author
2024-07-11 15:07:17,850[yyyy-mm-dd HH-MM-SS] TRACE  Cascading author with null
2024-07-11 15:07:17,850[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.bookTypeid
2024-07-11 15:07:17,850[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [booktypeid]
2024-07-11 15:07:17,850[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [booktypeid]
2024-07-11 15:07:17,851[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=booktypeid, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,851[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property bookTypeid with lazy=false
2024-07-11 15:07:17,851[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:bookTypeid]
2024-07-11 15:07:17,851[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for bookTypeid
2024-07-11 15:07:17,851[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [booktypeid]
2024-07-11 15:07:17,851[yyyy-mm-dd HH-MM-SS] DEBUG  Building property bookTypeid
2024-07-11 15:07:17,851[yyyy-mm-dd HH-MM-SS] TRACE  Cascading bookTypeid with null
2024-07-11 15:07:17,851[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.isid
2024-07-11 15:07:17,853[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [isid]
2024-07-11 15:07:17,853[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [isid]
2024-07-11 15:07:17,853[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=isid, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,853[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property isid with lazy=false
2024-07-11 15:07:17,853[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:isid]
2024-07-11 15:07:17,854[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for isid
2024-07-11 15:07:17,854[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [isid]
2024-07-11 15:07:17,854[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [isid]
2024-07-11 15:07:17,854[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [isid]
2024-07-11 15:07:17,854[yyyy-mm-dd HH-MM-SS] DEBUG  Building property isid
2024-07-11 15:07:17,854[yyyy-mm-dd HH-MM-SS] TRACE  Cascading isid with null
2024-07-11 15:07:17,854[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.publisher
2024-07-11 15:07:17,854[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [publisher]
2024-07-11 15:07:17,854[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [publisher]
2024-07-11 15:07:17,854[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=publisher, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property publisher with lazy=false
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:publisher]
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for publisher
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [publisher]
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [publisher]
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [publisher]
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] DEBUG  Building property publisher
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] TRACE  Cascading publisher with null
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.title
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property title with lazy=false
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:title]
2024-07-11 15:07:17,855[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for title
2024-07-11 15:07:17,856[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:07:17,856[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:07:17,856[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:07:17,856[yyyy-mm-dd HH-MM-SS] DEBUG  Building property title
2024-07-11 15:07:17,856[yyyy-mm-dd HH-MM-SS] TRACE  Cascading title with null
2024-07-11 15:07:17,856[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.PlayerKit
2024-07-11 15:07:17,856[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:07:17,856[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:07:17,857[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name PlayerKit
2024-07-11 15:07:17,857[yyyy-mm-dd HH-MM-SS] TRACE  Import: PlayerKit -> com.model.PlayerKit
2024-07-11 15:07:17,857[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.PlayerKit -> com.model.PlayerKit
2024-07-11 15:07:17,857[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerkit]
2024-07-11 15:07:17,857[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerkit]
2024-07-11 15:07:17,857[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.PlayerKit on table playerkit
2024-07-11 15:07:17,858[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.PlayerKit.kitid
2024-07-11 15:07:17,859[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:07:17,859[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:07:17,859[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(playerkit), mappingColumn=kitid, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,860[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.PlayerKit] is safe
2024-07-11 15:07:17,860[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.PlayerKit
2024-07-11 15:07:17,860[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property kitid with lazy=false
2024-07-11 15:07:17,860[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.PlayerKit:kitid]
2024-07-11 15:07:17,861[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for kitid
2024-07-11 15:07:17,861[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:07:17,861[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:07:17,861[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:07:17,861[yyyy-mm-dd HH-MM-SS] DEBUG  Building property kitid
2024-07-11 15:07:17,861[yyyy-mm-dd HH-MM-SS] TRACE  Cascading kitid with null
2024-07-11 15:07:17,861[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(kitid)]), kitid, identity, , ...)
2024-07-11 15:07:17,861[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on kitid
2024-07-11 15:07:17,862[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.PlayerKit.numBats
2024-07-11 15:07:17,862[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numbats]
2024-07-11 15:07:17,862[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numbats]
2024-07-11 15:07:17,862[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(playerkit), mappingColumn=numbats, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,863[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property numBats with lazy=false
2024-07-11 15:07:17,863[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.PlayerKit:numBats]
2024-07-11 15:07:17,863[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for numBats
2024-07-11 15:07:17,863[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numbats]
2024-07-11 15:07:17,863[yyyy-mm-dd HH-MM-SS] DEBUG  Building property numBats
2024-07-11 15:07:17,863[yyyy-mm-dd HH-MM-SS] TRACE  Cascading numBats with null
2024-07-11 15:07:17,864[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Team
2024-07-11 15:07:17,864[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:07:17,865[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:07:17,865[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Team
2024-07-11 15:07:17,865[yyyy-mm-dd HH-MM-SS] TRACE  Import: Team -> com.model.Team
2024-07-11 15:07:17,865[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Team -> com.model.Team
2024-07-11 15:07:17,865[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Team]
2024-07-11 15:07:17,865[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Team]
2024-07-11 15:07:17,865[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Team on table Team
2024-07-11 15:07:17,866[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Team.teamid
2024-07-11 15:07:17,866[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:07:17,866[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:07:17,866[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Team), mappingColumn=teamid, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,867[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Team] is safe
2024-07-11 15:07:17,867[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Team
2024-07-11 15:07:17,867[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property teamid with lazy=false
2024-07-11 15:07:17,867[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Team:teamid]
2024-07-11 15:07:17,867[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for teamid
2024-07-11 15:07:17,868[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:07:17,868[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:07:17,868[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:07:17,868[yyyy-mm-dd HH-MM-SS] DEBUG  Building property teamid
2024-07-11 15:07:17,868[yyyy-mm-dd HH-MM-SS] TRACE  Cascading teamid with null
2024-07-11 15:07:17,868[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamid)]), teamid, assigned, , ...)
2024-07-11 15:07:17,869[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on teamid
2024-07-11 15:07:17,869[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Team.name
2024-07-11 15:07:17,869[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,869[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,869[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Team), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,869[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:07:17,869[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Team:name]
2024-07-11 15:07:17,869[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:07:17,869[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,869[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,871[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,871[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:07:17,871[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:07:17,871[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Parking
2024-07-11 15:07:17,872[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:07:17,872[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:07:17,872[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Parking
2024-07-11 15:07:17,872[yyyy-mm-dd HH-MM-SS] TRACE  Import: Parking -> com.model.Parking
2024-07-11 15:07:17,872[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Parking -> com.model.Parking
2024-07-11 15:07:17,873[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Parking]
2024-07-11 15:07:17,873[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Parking]
2024-07-11 15:07:17,873[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Parking on table Parking
2024-07-11 15:07:17,874[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Parking.parkingId
2024-07-11 15:07:17,874[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:07:17,874[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:07:17,874[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Parking), mappingColumn=parkingid, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,875[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Parking] is safe
2024-07-11 15:07:17,875[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Parking
2024-07-11 15:07:17,875[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property parkingId with lazy=false
2024-07-11 15:07:17,875[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Parking:parkingId]
2024-07-11 15:07:17,875[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for parkingId
2024-07-11 15:07:17,875[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:07:17,876[yyyy-mm-dd HH-MM-SS] DEBUG  Building property parkingId
2024-07-11 15:07:17,876[yyyy-mm-dd HH-MM-SS] TRACE  Cascading parkingId with null
2024-07-11 15:07:17,876[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(parkingid)]), parkingId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2024-07-11 15:07:17,876[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on parkingId
2024-07-11 15:07:17,876[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Parking.floornum
2024-07-11 15:07:17,876[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [floornum]
2024-07-11 15:07:17,877[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [floornum]
2024-07-11 15:07:17,877[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Parking), mappingColumn=floornum, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,877[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property floornum with lazy=false
2024-07-11 15:07:17,877[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Parking:floornum]
2024-07-11 15:07:17,877[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for floornum
2024-07-11 15:07:17,877[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [floornum]
2024-07-11 15:07:17,877[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [floornum]
2024-07-11 15:07:17,878[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [floornum]
2024-07-11 15:07:17,878[yyyy-mm-dd HH-MM-SS] DEBUG  Building property floornum
2024-07-11 15:07:17,878[yyyy-mm-dd HH-MM-SS] TRACE  Cascading floornum with null
2024-07-11 15:07:17,878[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Customer
2024-07-11 15:07:17,879[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:07:17,879[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:07:17,879[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Customer
2024-07-11 15:07:17,879[yyyy-mm-dd HH-MM-SS] TRACE  Import: Customer -> com.model.Customer
2024-07-11 15:07:17,879[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Customer -> com.model.Customer
2024-07-11 15:07:17,879[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Customer]
2024-07-11 15:07:17,880[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Customer]
2024-07-11 15:07:17,880[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Customer on table Customer
2024-07-11 15:07:17,880[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.custid
2024-07-11 15:07:17,881[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [custid]
2024-07-11 15:07:17,881[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [custid]
2024-07-11 15:07:17,881[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=custid, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,881[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Customer] is safe
2024-07-11 15:07:17,881[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Customer
2024-07-11 15:07:17,881[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property custid with lazy=false
2024-07-11 15:07:17,882[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:custid]
2024-07-11 15:07:17,882[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for custid
2024-07-11 15:07:17,882[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [custid]
2024-07-11 15:07:17,882[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [custid]
2024-07-11 15:07:17,882[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [custid]
2024-07-11 15:07:17,882[yyyy-mm-dd HH-MM-SS] DEBUG  Building property custid
2024-07-11 15:07:17,882[yyyy-mm-dd HH-MM-SS] TRACE  Cascading custid with null
2024-07-11 15:07:17,883[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(custid)]), custid, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2024-07-11 15:07:17,883[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on custid
2024-07-11 15:07:17,883[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.address
2024-07-11 15:07:17,883[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [address]
2024-07-11 15:07:17,883[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [address]
2024-07-11 15:07:17,883[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,884[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property address with lazy=false
2024-07-11 15:07:17,884[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:address]
2024-07-11 15:07:17,884[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for address
2024-07-11 15:07:17,884[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [address]
2024-07-11 15:07:17,884[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [address]
2024-07-11 15:07:17,884[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [address]
2024-07-11 15:07:17,884[yyyy-mm-dd HH-MM-SS] DEBUG  Building property address
2024-07-11 15:07:17,885[yyyy-mm-dd HH-MM-SS] TRACE  Cascading address with null
2024-07-11 15:07:17,885[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.dob
2024-07-11 15:07:17,885[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:07:17,885[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:07:17,885[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=dob, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,885[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property dob with lazy=false
2024-07-11 15:07:17,885[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:dob]
2024-07-11 15:07:17,886[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for dob
2024-07-11 15:07:17,886[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:07:17,886[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:07:17,886[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:07:17,886[yyyy-mm-dd HH-MM-SS] DEBUG  Building property dob
2024-07-11 15:07:17,886[yyyy-mm-dd HH-MM-SS] TRACE  Cascading dob with null
2024-07-11 15:07:17,886[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.email
2024-07-11 15:07:17,887[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:07:17,887[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:07:17,887[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,887[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property email with lazy=false
2024-07-11 15:07:17,887[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:email]
2024-07-11 15:07:17,887[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for email
2024-07-11 15:07:17,888[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:07:17,888[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:07:17,888[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:07:17,888[yyyy-mm-dd HH-MM-SS] DEBUG  Building property email
2024-07-11 15:07:17,888[yyyy-mm-dd HH-MM-SS] TRACE  Cascading email with null
2024-07-11 15:07:17,888[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.name
2024-07-11 15:07:17,888[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,889[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,889[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,889[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:07:17,889[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:name]
2024-07-11 15:07:17,889[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:07:17,889[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,889[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,890[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,890[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:07:17,890[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:07:17,890[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.phone
2024-07-11 15:07:17,890[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [phone]
2024-07-11 15:07:17,890[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [phone]
2024-07-11 15:07:17,890[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,891[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property phone with lazy=false
2024-07-11 15:07:17,891[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:phone]
2024-07-11 15:07:17,891[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for phone
2024-07-11 15:07:17,891[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [phone]
2024-07-11 15:07:17,891[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [phone]
2024-07-11 15:07:17,891[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [phone]
2024-07-11 15:07:17,891[yyyy-mm-dd HH-MM-SS] DEBUG  Building property phone
2024-07-11 15:07:17,891[yyyy-mm-dd HH-MM-SS] TRACE  Cascading phone with null
2024-07-11 15:07:17,892[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Student
2024-07-11 15:07:17,892[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:07:17,892[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:07:17,892[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Student
2024-07-11 15:07:17,893[yyyy-mm-dd HH-MM-SS] TRACE  Import: Student -> com.model.Student
2024-07-11 15:07:17,893[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Student -> com.model.Student
2024-07-11 15:07:17,893[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Student]
2024-07-11 15:07:17,893[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Student]
2024-07-11 15:07:17,893[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Student on table Student
2024-07-11 15:07:17,894[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.roll
2024-07-11 15:07:17,894[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [roll]
2024-07-11 15:07:17,895[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [roll]
2024-07-11 15:07:17,895[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=roll, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,895[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Student] is safe
2024-07-11 15:07:17,895[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Student
2024-07-11 15:07:17,895[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property roll with lazy=false
2024-07-11 15:07:17,895[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:roll]
2024-07-11 15:07:17,895[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for roll
2024-07-11 15:07:17,895[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [roll]
2024-07-11 15:07:17,895[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [roll]
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [roll]
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] DEBUG  Building property roll
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] TRACE  Cascading roll with null
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(roll)]), roll, assigned, , ...)
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on roll
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.branch
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [branch]
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [branch]
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=branch, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property branch with lazy=false
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:branch]
2024-07-11 15:07:17,896[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for branch
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [branch]
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [branch]
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [branch]
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] DEBUG  Building property branch
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Cascading branch with null
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.dob
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=dob, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property dob with lazy=false
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:dob]
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for dob
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] DEBUG  Building property dob
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Cascading dob with null
2024-07-11 15:07:17,897[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.email
2024-07-11 15:07:17,899[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:07:17,899[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:07:17,899[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=email, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,899[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property email with lazy=false
2024-07-11 15:07:17,899[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:email]
2024-07-11 15:07:17,899[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for email
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] DEBUG  Building property email
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] TRACE  Cascading email with null
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.name
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:name]
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:07:17,900[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,901[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,901[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,901[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:07:17,901[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:07:17,901[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.numBooks
2024-07-11 15:07:17,901[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numBooks]
2024-07-11 15:07:17,901[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numBooks]
2024-07-11 15:07:17,901[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=numBooks, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,901[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property numBooks with lazy=false
2024-07-11 15:07:17,901[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:numBooks]
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for numBooks
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numBooks]
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numBooks]
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numBooks]
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] DEBUG  Building property numBooks
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] TRACE  Cascading numBooks with null
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.password
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [password]
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [password]
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=password, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property password with lazy=false
2024-07-11 15:07:17,902[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:password]
2024-07-11 15:07:17,904[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for password
2024-07-11 15:07:17,904[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [password]
2024-07-11 15:07:17,904[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [password]
2024-07-11 15:07:17,904[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [password]
2024-07-11 15:07:17,904[yyyy-mm-dd HH-MM-SS] DEBUG  Building property password
2024-07-11 15:07:17,904[yyyy-mm-dd HH-MM-SS] TRACE  Cascading password with null
2024-07-11 15:07:17,904[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Employee
2024-07-11 15:07:17,905[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:07:17,905[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:07:17,905[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Employee
2024-07-11 15:07:17,905[yyyy-mm-dd HH-MM-SS] TRACE  Import: Employee -> com.model.Employee
2024-07-11 15:07:17,905[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Employee -> com.model.Employee
2024-07-11 15:07:17,905[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee]
2024-07-11 15:07:17,905[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee]
2024-07-11 15:07:17,905[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Employee on table Employee
2024-07-11 15:07:17,908[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Employee.empid
2024-07-11 15:07:17,908[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:07:17,908[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:07:17,910[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=empid, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,910[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Employee] is safe
2024-07-11 15:07:17,910[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Employee
2024-07-11 15:07:17,910[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property empid with lazy=false
2024-07-11 15:07:17,911[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Employee:empid]
2024-07-11 15:07:17,911[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for empid
2024-07-11 15:07:17,911[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:07:17,911[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:07:17,911[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:07:17,911[yyyy-mm-dd HH-MM-SS] DEBUG  Building property empid
2024-07-11 15:07:17,911[yyyy-mm-dd HH-MM-SS] TRACE  Cascading empid with null
2024-07-11 15:07:17,912[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(empid)]), empid, assigned, , ...)
2024-07-11 15:07:17,912[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on empid
2024-07-11 15:07:17,912[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Employee.department
2024-07-11 15:07:17,912[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:07:17,912[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='depid', referencedColumn='', mappedBy=''}
2024-07-11 15:07:17,913[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [department]
2024-07-11 15:07:17,913[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [department]
2024-07-11 15:07:17,913[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=department, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,913[yyyy-mm-dd HH-MM-SS] DEBUG  Building property department
2024-07-11 15:07:17,913[yyyy-mm-dd HH-MM-SS] TRACE  Cascading department with none
2024-07-11 15:07:17,913[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Employee.name
2024-07-11 15:07:17,914[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,914[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,914[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,914[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:07:17,915[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Employee:name]
2024-07-11 15:07:17,915[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:07:17,915[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,915[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,915[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:07:17,915[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:07:17,916[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:07:17,916[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Employee.parking
2024-07-11 15:07:17,916[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2024-07-11 15:07:17,916[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking]
2024-07-11 15:07:17,916[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking]
2024-07-11 15:07:17,917[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=parking, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,917[yyyy-mm-dd HH-MM-SS] TRACE  Fetching parking with JOIN
2024-07-11 15:07:17,918[yyyy-mm-dd HH-MM-SS] DEBUG  Building property parking
2024-07-11 15:07:17,918[yyyy-mm-dd HH-MM-SS] TRACE  Cascading parking with none
2024-07-11 15:07:17,918[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Employee.projects
2024-07-11 15:07:17,918[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,919[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [element]
2024-07-11 15:07:17,919[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [element]
2024-07-11 15:07:17,919[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,920[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_KEY]
2024-07-11 15:07:17,920[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=projects_KEY, insertable=true, updatable=true, unique=false}
2024-07-11 15:07:17,920[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_KEY]
2024-07-11 15:07:17,920[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='projects_KEY', referencedColumn='null', mappedBy='null'}
2024-07-11 15:07:17,920[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2024-07-11 15:07:17,920[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2024-07-11 15:07:17,921[yyyy-mm-dd HH-MM-SS] DEBUG  Collection role: com.model.Employee.projects
2024-07-11 15:07:17,921[yyyy-mm-dd HH-MM-SS] DEBUG  Building property projects
2024-07-11 15:07:17,921[yyyy-mm-dd HH-MM-SS] TRACE  Cascading projects with none
2024-07-11 15:07:17,923[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for playerid
2024-07-11 15:07:17,923[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:07:17,923[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for depid
2024-07-11 15:07:17,923[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for establishdate
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for projid
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for amount
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for title
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for bid
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for author
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for bookTypeid
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for isid
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for publisher
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for title
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for kitid
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for numBats
2024-07-11 15:07:17,924[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for teamid
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for parkingId
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for floornum
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for custid
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for address
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for dob
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for email
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for phone
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for roll
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for branch
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for dob
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for email
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:07:17,925[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for numBooks
2024-07-11 15:07:17,926[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for password
2024-07-11 15:07:17,926[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for empid
2024-07-11 15:07:17,926[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:07:17,926[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:07:17,927[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerkit]
2024-07-11 15:07:17,928[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:07:17,928[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:07:17,928[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:07:17,928[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:07:17,928[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:07:17,928[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:07:17,933[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:07:17,933[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,934[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:07:17,934[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:07:17,934[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:07:17,934[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,934[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:07:17,934[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:07:17,934[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:07:17,935[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Parking]
2024-07-11 15:07:17,935[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:07:17,935[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:07:17,935[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:07:17,935[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:07:17,935[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:07:17,935[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:07:17,936[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [playerid] to be non-null as it is part of the primary key for table [player]
2024-07-11 15:07:17,936[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [depid] to be non-null as it is part of the primary key for table [department]
2024-07-11 15:07:17,936[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [projid] to be non-null as it is part of the primary key for table [project]
2024-07-11 15:07:17,937[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [bid] to be non-null as it is part of the primary key for table [book]
2024-07-11 15:07:17,937[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [kitid] to be non-null as it is part of the primary key for table [playerkit]
2024-07-11 15:07:17,937[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [teamid] to be non-null as it is part of the primary key for table [team]
2024-07-11 15:07:17,937[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [parkingid] to be non-null as it is part of the primary key for table [parking]
2024-07-11 15:07:17,937[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [custid] to be non-null as it is part of the primary key for table [customer]
2024-07-11 15:07:17,937[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [roll] to be non-null as it is part of the primary key for table [student]
2024-07-11 15:07:17,937[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [empid] to be non-null as it is part of the primary key for table [employee]
2024-07-11 15:07:17,937[yyyy-mm-dd HH-MM-SS] DEBUG  Second pass for collection: com.model.Employee.projects
2024-07-11 15:07:17,937[yyyy-mm-dd HH-MM-SS] DEBUG  Binding as ManyToMany: com.model.Employee.projects
2024-07-11 15:07:17,937[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee]
2024-07-11 15:07:17,939[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_Project]
2024-07-11 15:07:17,942[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_Project]
2024-07-11 15:07:17,942[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_Project]
2024-07-11 15:07:17,943[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:07:17,945[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee]
2024-07-11 15:07:17,946[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:07:17,946[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:07:17,947[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:07:17,948[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:07:17,948[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:07:17,949[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:07:17,950[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:07:17,950[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Project]
2024-07-11 15:07:17,951[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:07:17,951[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:07:17,951[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:07:17,951[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:07:17,951[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:07:17,951[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:07:17,952[yyyy-mm-dd HH-MM-SS] DEBUG  Mapped collection key: Employee_empid, element: projects_projid
2024-07-11 15:07:17,953[yyyy-mm-dd HH-MM-SS] DEBUG  Second pass for collection: com.model.Department.employees
2024-07-11 15:07:17,953[yyyy-mm-dd HH-MM-SS] DEBUG  Binding a OneToMany: com.model.Department.employees through a foreign key
2024-07-11 15:07:17,953[yyyy-mm-dd HH-MM-SS] DEBUG  Mapping collection: com.model.Department.employees -> Employee
2024-07-11 15:07:17,954[yyyy-mm-dd HH-MM-SS] DEBUG  Retrieving property com.model.Employee.department
2024-07-11 15:07:17,954[yyyy-mm-dd HH-MM-SS] DEBUG  Mapped collection key: depid, one-to-many: com.model.Employee
2024-07-11 15:07:17,954[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Department
2024-07-11 15:07:17,955[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:07:17,956[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FKl21kmltdswtwc20m9mswk0277]
2024-07-11 15:07:17,956[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Parking
2024-07-11 15:07:17,957[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:07:17,957[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FK7xxsqiwpk3gvswne2ot9bqons]
2024-07-11 15:07:17,957[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Project
2024-07-11 15:07:17,957[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:07:17,957[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FKln3lnuhgjegemxn3f47xn8f81]
2024-07-11 15:07:17,957[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Employee
2024-07-11 15:07:17,957[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:07:17,957[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FKf1arixt13d4nd7ldbboh84mtm]
2024-07-11 15:07:17,959[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.PlayerKit
2024-07-11 15:07:17,959[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:07:17,959[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FKjibiec3sb0hmpjsskosq70q74]
2024-07-11 15:07:17,959[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Team
2024-07-11 15:07:17,959[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:07:17,959[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FKo9195nqev57km5n1vt8q51ded]
2024-07-11 15:07:17,960[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Department
2024-07-11 15:07:17,960[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:07:17,960[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Parking
2024-07-11 15:07:17,961[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:07:17,961[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Project
2024-07-11 15:07:17,961[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:07:17,961[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Employee
2024-07-11 15:07:17,961[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:07:17,961[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.PlayerKit
2024-07-11 15:07:17,961[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:07:17,961[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Team
2024-07-11 15:07:17,961[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:07:17,963[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,963[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,964[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerseq]
2024-07-11 15:07:17,969[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:07:17,973[yyyy-mm-dd HH-MM-SS] TRACE  Creating pooled optimizer with [incrementSize=50; returnClass=java.lang.Integer]
2024-07-11 15:07:17,976[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,976[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,976[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [hibernate_sequence]
2024-07-11 15:07:17,976[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:07:17,976[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,977[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,977[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [hibernate_sequence]
2024-07-11 15:07:17,977[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:07:17,977[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,977[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,977[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [hibernate_sequence]
2024-07-11 15:07:17,977[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:07:17,979[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,979[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,979[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [hibernate_sequence]
2024-07-11 15:07:17,979[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:07:17,980[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,980[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:17,980[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [hibernate_sequence]
2024-07-11 15:07:17,980[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:07:17,983[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
2024-07-11 15:07:18,000[yyyy-mm-dd HH-MM-SS] TRACE  Interpreting BatchFetchStyle from setting : null
2024-07-11 15:07:18,004[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
2024-07-11 15:07:18,012[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
2024-07-11 15:07:18,029[yyyy-mm-dd HH-MM-SS] DEBUG  Building session factory
2024-07-11 15:07:18,030[yyyy-mm-dd HH-MM-SS] DEBUG  SessionFactory name : null
2024-07-11 15:07:18,031[yyyy-mm-dd HH-MM-SS] DEBUG  Automatic flush during beforeCompletion(): enabled
2024-07-11 15:07:18,031[yyyy-mm-dd HH-MM-SS] DEBUG  Automatic session close at end of transaction: disabled
2024-07-11 15:07:18,031[yyyy-mm-dd HH-MM-SS] DEBUG  Statistics: disabled
2024-07-11 15:07:18,031[yyyy-mm-dd HH-MM-SS] DEBUG  Deleted entity synthetic identifier rollback: disabled
2024-07-11 15:07:18,031[yyyy-mm-dd HH-MM-SS] DEBUG  Default entity-mode: pojo
2024-07-11 15:07:18,031[yyyy-mm-dd HH-MM-SS] DEBUG  Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-07-11 15:07:18,031[yyyy-mm-dd HH-MM-SS] DEBUG  Allow initialization of lazy state outside session : disabled
2024-07-11 15:07:18,031[yyyy-mm-dd HH-MM-SS] DEBUG  Using BatchFetchStyle : LEGACY
2024-07-11 15:07:18,031[yyyy-mm-dd HH-MM-SS] DEBUG  Default batch fetch size: -1
2024-07-11 15:07:18,031[yyyy-mm-dd HH-MM-SS] DEBUG  Maximum outer join fetch depth: 2
2024-07-11 15:07:18,031[yyyy-mm-dd HH-MM-SS] DEBUG  Default null ordering: NONE
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Order SQL updates by primary key: disabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Order SQL inserts for batching: disabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  multi-tenancy strategy : NONE
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  JTA Track by Thread: enabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Query language substitutions: {}
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Named query checking : enabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Second-level cache: disabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Second-level query cache: disabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Second-level query cache factory: null
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Second-level cache region prefix: null
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Optimize second-level cache for minimal puts: disabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Structured second-level cache entries: disabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Second-level cache direct-reference entries: disabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Automatic eviction of collection cache: disabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC batch size: 15
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC batch updates for versioned data: enabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Scrollable result sets: enabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  Wrap result sets: disabled
2024-07-11 15:07:18,032[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC3 getGeneratedKeys(): enabled
2024-07-11 15:07:18,033[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC result set fetch size: null
2024-07-11 15:07:18,033[yyyy-mm-dd HH-MM-SS] DEBUG  Connection release mode: AFTER_TRANSACTION
2024-07-11 15:07:18,033[yyyy-mm-dd HH-MM-SS] DEBUG  Generate SQL with comments: disabled
2024-07-11 15:07:18,033[yyyy-mm-dd HH-MM-SS] DEBUG  JPA compliance - query : disabled
2024-07-11 15:07:18,033[yyyy-mm-dd HH-MM-SS] DEBUG  JPA compliance - closed-handling : disabled
2024-07-11 15:07:18,033[yyyy-mm-dd HH-MM-SS] DEBUG  JPA compliance - lists : disabled
2024-07-11 15:07:18,033[yyyy-mm-dd HH-MM-SS] DEBUG  JPA compliance - transactions : disabled
2024-07-11 15:07:18,033[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
2024-07-11 15:07:18,108[yyyy-mm-dd HH-MM-SS] DEBUG  EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 15:07:18,109[yyyy-mm-dd HH-MM-SS] DEBUG  EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 15:07:18,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:18,111[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
2024-07-11 15:07:18,127[yyyy-mm-dd HH-MM-SS] DEBUG  Session factory constructed with filter configurations : {}
2024-07-11 15:07:18,128[yyyy-mm-dd HH-MM-SS] DEBUG  Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL57Dialect, java.class.path=D:\dinesh\Dinesh\javaprogs\LPU2024\libHib2\target\classes;C:\Users\Dinesh\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\Dinesh\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\Dinesh\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\Dinesh\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Dinesh\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Dinesh\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\Dinesh\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Dinesh\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Dinesh\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Dinesh\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Dinesh\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Dinesh\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Dinesh\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Dinesh\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Dinesh\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Dinesh\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Dinesh\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Dinesh\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Dinesh\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/lpu24, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, jakarta.persistence.jdbc.password=****, user.country=GB, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_301\jre\bin, sun.java.command=libraryHib.Main, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Dinesh, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_301\jre, file.separator=\, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=libPU, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=Dinesh, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/lpu24, file.encoding=Cp1252, hibernate.ejb.persistenceUnitName=libPU, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Dinesh\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=D:\dinesh\Dinesh\javaprogs\LPU2024\libHib2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/lpu24, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2e8ab815, java.library.path=C:\Program Files\Java\jdk1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;E:/Softwares/Eclipse/eclipse-jee-2021-09-R-win32-x86_64/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.2.v20210721-1149/jre/bin/server;E:/Softwares/Eclipse/eclipse-jee-2021-09-R-win32-x86_64/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.2.v20210721-1149/jre/bin;C:\Program Files\Java\jdk-11.0.12\bin;C:\Program Files\Java\jdk1.8.0_301\bin;E:\Softwares\Oracle\Oracle21c\app\21c\dbhomeXE\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Windows\System32\cmd.exe;E:\Softwares\Notepad++\npp.8.1.9.portable.x64;E:\Softwares\Maven\apache-maven-3.8.3\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files\PuTTY\;C:\Program Files\MongoDB\Server\5.0\bin;E:\Softwares\NodeJS\node-v20.10.0-win-x64;C:\Program Files\Amazon\AWSCLIV2\;E:\Softwares\Eclipse\eclipse-jee-2021-09-R-win32-x86_64\eclipse\;E:\Softwares\confluent\confluent-community-7.2.0\confluent-7.2.0\bin\windows;F:\Kubernetes\Minikube;C:\Program Files\Docker\cli-plugins;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;E:\Softwares\GIT\PortableGit\bin;C:\WINDOWS\system32\config\systemprofile\.krew\bin;C:\ProgramData\chocolatey\bin;E:\Softwares\intellij\IntelliJ IDEA Community Edition 2022.1.3\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;E:\Softwares\CODE-BLOCKS\installation\MinGW\bin;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Windows\Microsoft.NET\Framework\v4.0.30319;E:\Softwares\VSCode\VSCode-win32-x64-1.79.2;E:\Softwares\Oracle\oracle sqldeveloper\sqldeveloper-22.2.0.173.2018-x64\sqldeveloper;E:\Softwares\Postgres\PostgresHome\bin;F:\Program Files\VisualSVN Server\bin;C:\Windows\System32\cmd.exe;F:\Program Files\TortoiseSVN\bin;C:\Windows\System32\cmd.exe;E:\Softwares\Ant\apache-ant-1.10.14\bin;C:\Program Files\GitHub CLI\;C:\Users\Dinesh\AppData\Local\Microsoft\WindowsApps;C:\Users\Dinesh\AppData\Local\Programs\Git\cmd;C:\Program Files\Google\Chrome\Application\;E:\Softwares\Kafka\kafka_2.12-3.0.0\bin\windows;C:\Users\Dinesh\AppData\Local\GitHubDesktop\bin;;E:\Softwares\Eclipse\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0}
2024-07-11 15:07:18,134[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
2024-07-11 15:07:18,142[yyyy-mm-dd HH-MM-SS] DEBUG  Skipping JACC integration as it was not enabled
2024-07-11 15:07:18,147[yyyy-mm-dd HH-MM-SS] DEBUG  Instantiated session factory
2024-07-11 15:07:18,147[yyyy-mm-dd HH-MM-SS] DEBUG  Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d1dee39] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5af9926a]
2024-07-11 15:07:18,160[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
2024-07-11 15:07:18,162[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
2024-07-11 15:07:18,192[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
2024-07-11 15:07:18,215[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#kit` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,223[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#kit` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,223[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,224[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,224[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Player] is safe
2024-07-11 15:07:18,224[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Player
2024-07-11 15:07:18,230[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.bytecode.spi.ProxyFactoryFactory]
2024-07-11 15:07:18,457[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#kit` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,457[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,457[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#kit` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,457[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,459[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.kitid], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.teamid], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit], existing type = [org.hibernate.type.ManyToOneType(com.model.PlayerKit)], incoming type = [org.hibernate.type.ManyToOneType(com.model.PlayerKit)]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.kitid], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.kitid], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(com.model.Team)], incoming type = [org.hibernate.type.ManyToOneType(com.model.Team)]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.teamid], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,460[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.teamid], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,465[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Department] is safe
2024-07-11 15:07:18,465[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Department
2024-07-11 15:07:18,481[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [employees], existing type = [org.hibernate.type.BagType(com.model.Department.employees)], incoming type = [org.hibernate.type.BagType(com.model.Department.employees)]
2024-07-11 15:07:18,481[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [establishdate], existing type = [org.hibernate.type.DateType@359f7cdf], incoming type = [org.hibernate.type.DateType@359f7cdf]
2024-07-11 15:07:18,481[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,481[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Project] is safe
2024-07-11 15:07:18,481[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Project
2024-07-11 15:07:18,495[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [amount], existing type = [org.hibernate.type.DoubleType@1725dc0f], incoming type = [org.hibernate.type.DoubleType@1725dc0f]
2024-07-11 15:07:18,495[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,495[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Book] is safe
2024-07-11 15:07:18,495[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Book
2024-07-11 15:07:18,513[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [author], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,514[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [bookTypeid], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,514[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [isid], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,514[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [publisher], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,514[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,514[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.PlayerKit] is safe
2024-07-11 15:07:18,514[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.PlayerKit
2024-07-11 15:07:18,525[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [numBats], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,525[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Team] is safe
2024-07-11 15:07:18,525[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Team
2024-07-11 15:07:18,532[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,532[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Parking] is safe
2024-07-11 15:07:18,533[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Parking
2024-07-11 15:07:18,545[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [floornum], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,545[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Customer] is safe
2024-07-11 15:07:18,545[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Customer
2024-07-11 15:07:18,552[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [address], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,552[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [dob], existing type = [org.hibernate.type.DateType@359f7cdf], incoming type = [org.hibernate.type.DateType@359f7cdf]
2024-07-11 15:07:18,553[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,553[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,553[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [phone], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,553[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Student] is safe
2024-07-11 15:07:18,553[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Student
2024-07-11 15:07:18,571[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [branch], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,571[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [dob], existing type = [org.hibernate.type.DateType@359f7cdf], incoming type = [org.hibernate.type.DateType@359f7cdf]
2024-07-11 15:07:18,571[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,571[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,571[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [numBooks], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,571[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [password], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,572[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,572[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,572[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#parking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,572[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#parking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,572[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Employee] is safe
2024-07-11 15:07:18,572[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Employee
2024-07-11 15:07:18,588[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,589[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#parking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,589[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,589[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#parking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:07:18,590[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,590[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.depid], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,590[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,590[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.parkingId], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,590[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department], existing type = [org.hibernate.type.ManyToOneType(com.model.Department)], incoming type = [org.hibernate.type.ManyToOneType(com.model.Department)]
2024-07-11 15:07:18,590[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,591[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,591[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.depid], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,591[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.depid], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,591[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@1cbbffcd], incoming type = [org.hibernate.type.StringType@1cbbffcd]
2024-07-11 15:07:18,591[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking], existing type = [org.hibernate.type.ManyToOneType(com.model.Parking)], incoming type = [org.hibernate.type.ManyToOneType(com.model.Parking)]
2024-07-11 15:07:18,591[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,591[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.id], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,591[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.parkingId], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,591[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.parkingId], existing type = [org.hibernate.type.IntegerType@30ee2816], incoming type = [org.hibernate.type.IntegerType@30ee2816]
2024-07-11 15:07:18,591[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [projects], existing type = [org.hibernate.type.BagType(com.model.Employee.projects)], incoming type = [org.hibernate.type.BagType(com.model.Employee.projects)]
2024-07-11 15:07:18,605[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for collection: com.model.Employee.projects
2024-07-11 15:07:18,605[yyyy-mm-dd HH-MM-SS] DEBUG   Row insert: insert into Employee_Project (Employee_empid, projects_projid) values (?, ?)
2024-07-11 15:07:18,605[yyyy-mm-dd HH-MM-SS] DEBUG   Row update: update Employee_Project set projects_projid=? where Employee_empid=? and projects_projid=?
2024-07-11 15:07:18,605[yyyy-mm-dd HH-MM-SS] DEBUG   Row delete: delete from Employee_Project where Employee_empid=? and projects_projid=?
2024-07-11 15:07:18,605[yyyy-mm-dd HH-MM-SS] DEBUG   One-shot delete: delete from Employee_Project where Employee_empid=?
2024-07-11 15:07:18,606[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for collection: com.model.Department.employees
2024-07-11 15:07:18,607[yyyy-mm-dd HH-MM-SS] DEBUG   Row insert: update Employee set depid=? where empid=?
2024-07-11 15:07:18,607[yyyy-mm-dd HH-MM-SS] DEBUG   Row update: update Employee set  where empid=?
2024-07-11 15:07:18,607[yyyy-mm-dd HH-MM-SS] DEBUG   Row delete: update Employee set depid=null where depid=? and empid=?
2024-07-11 15:07:18,607[yyyy-mm-dd HH-MM-SS] DEBUG   One-shot delete: update Employee set depid=null where depid=?
2024-07-11 15:07:18,610[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Player
2024-07-11 15:07:18,611[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select playerid from Player where playerid =?
2024-07-11 15:07:18,611[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select player_.playerid, player_.kit_kitid as kit_kiti3_6_, player_.name as name2_6_, player_.teamid as teamid4_6_ from Player player_ where player_.playerid=?
2024-07-11 15:07:18,611[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Player (kit_kitid, name, teamid, playerid) values (?, ?, ?, ?)
2024-07-11 15:07:18,611[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Player set kit_kitid=?, name=?, teamid=? where playerid=?
2024-07-11 15:07:18,611[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Player where playerid=?
2024-07-11 15:07:18,635[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Player
2024-07-11 15:07:18,641[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58294867]
2024-07-11 15:07:18,642[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3fa76c61
2024-07-11 15:07:18,643[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Player, columns={playerid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3fa76c61
2024-07-11 15:07:18,643[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Player
2024-07-11 15:07:18,643[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : kit
2024-07-11 15:07:18,645[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=kit, type=com.model.PlayerKit [non-identifier,association])
2024-07-11 15:07:18,650[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba33e2c]
2024-07-11 15:07:18,652[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@de88ac6
2024-07-11 15:07:18,652[yyyy-mm-dd HH-MM-SS] TRACE  .... Registering AssociationKey : AssociationKey(table=Player, columns={kit_kitid}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@de88ac6
2024-07-11 15:07:18,653[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting entity identifier : com.model.PlayerKit
2024-07-11 15:07:18,653[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : kit.numBats
2024-07-11 15:07:18,653[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=numBats, type=integer [non-identifier])
2024-07-11 15:07:18,653[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=numBats, type=integer [non-identifier])
2024-07-11 15:07:18,654[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@de88ac6
2024-07-11 15:07:18,654[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=kit, type=com.model.PlayerKit [non-identifier,association])
2024-07-11 15:07:18,654[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:07:18,654[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,654[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,654[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : team
2024-07-11 15:07:18,654[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=team, type=com.model.Team [non-identifier,association])
2024-07-11 15:07:18,655[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bca7664]
2024-07-11 15:07:18,655[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@105b693d
2024-07-11 15:07:18,655[yyyy-mm-dd HH-MM-SS] TRACE  .... Registering AssociationKey : AssociationKey(table=Player, columns={teamid}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@105b693d
2024-07-11 15:07:18,655[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting entity identifier : com.model.Team
2024-07-11 15:07:18,655[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : team.name
2024-07-11 15:07:18,655[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,655[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,655[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@105b693d
2024-07-11 15:07:18,656[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=team, type=com.model.Team [non-identifier,association])
2024-07-11 15:07:18,656[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3fa76c61
2024-07-11 15:07:18,656[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Player
2024-07-11 15:07:18,656[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,672[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,679[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Player)
    - Returns
       - EntityReturnImpl(entity=com.model.Player, querySpaceUid=<gen:0>, path=com.model.Player)
          - EntityAttributeFetchImpl(entity=com.model.PlayerKit, querySpaceUid=<gen:1>, path=com.model.Player.kit)
          - EntityAttributeFetchImpl(entity=com.model.Team, querySpaceUid=<gen:2>, path=com.model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {playerid1_6_0_}
          - JOIN (JoinDefinedByMetadata(kit)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.model.PlayerKit)
                - SQL table alias mapping - playerkit1_
                - alias suffix - 1_
                - suffixed key columns - {kitid1_7_1_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.model.Team)
                - SQL table alias mapping - team2_
                - alias suffix - 2_
                - suffixed key columns - {teamid1_10_2_}

2024-07-11 15:07:18,682[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Player [NONE]: select player0_.playerid as playerid1_6_0_, player0_.kit_kitid as kit_kiti3_6_0_, player0_.name as name2_6_0_, player0_.teamid as teamid4_6_0_, playerkit1_.kitid as kitid1_7_1_, playerkit1_.numbats as numbats2_7_1_, team2_.teamid as teamid1_10_2_, team2_.name as name2_10_2_ from Player player0_ left outer join playerkit playerkit1_ on player0_.kit_kitid=playerkit1_.kitid left outer join Team team2_ on player0_.teamid=team2_.teamid where player0_.playerid=?
2024-07-11 15:07:18,683[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Department
2024-07-11 15:07:18,683[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select depid from Department where depid =?
2024-07-11 15:07:18,683[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select department_.depid, department_.establishdate as establis2_2_, department_.name as name3_2_ from Department department_ where department_.depid=?
2024-07-11 15:07:18,683[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Department (establishdate, name, depid) values (?, ?, ?)
2024-07-11 15:07:18,683[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Department set establishdate=?, name=? where depid=?
2024-07-11 15:07:18,683[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Department where depid=?
2024-07-11 15:07:18,683[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Department
2024-07-11 15:07:18,683[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d37f1c]
2024-07-11 15:07:18,683[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@69d6a7cd
2024-07-11 15:07:18,684[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Department, columns={depid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@69d6a7cd
2024-07-11 15:07:18,684[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Department
2024-07-11 15:07:18,684[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : employees
2024-07-11 15:07:18,684[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=employees, type=java.util.Collection(com.model.Department.employees) [non-identifier,association])
2024-07-11 15:07:18,685[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3047254d]
2024-07-11 15:07:18,687[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a2b2322]
2024-07-11 15:07:18,688[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=employees, type=java.util.Collection(com.model.Department.employees) [non-identifier,association])
2024-07-11 15:07:18,689[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : establishdate
2024-07-11 15:07:18,689[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=establishdate, type=date [non-identifier])
2024-07-11 15:07:18,689[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=establishdate, type=date [non-identifier])
2024-07-11 15:07:18,689[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:07:18,690[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,690[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,690[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@69d6a7cd
2024-07-11 15:07:18,690[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Department
2024-07-11 15:07:18,690[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,690[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,691[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.model.Department, querySpaceUid=<gen:0>, path=com.model.Department)
          - CollectionAttributeFetchImpl(collection=com.model.Department.employees, querySpaceUid=<gen:1>, path=com.model.Department.employees)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.model.Employee, querySpaceUid=<gen:2>, path=com.model.Department.employees.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {depid1_2_0_}

2024-07-11 15:07:18,692[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Department [NONE]: select department0_.depid as depid1_2_0_, department0_.establishdate as establis2_2_0_, department0_.name as name3_2_0_ from Department department0_ where department0_.depid=?
2024-07-11 15:07:18,692[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Project
2024-07-11 15:07:18,692[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select projid from Project where projid =?
2024-07-11 15:07:18,693[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select project_.projid, project_.amount as amount2_8_, project_.title as title3_8_ from Project project_ where project_.projid=?
2024-07-11 15:07:18,693[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Project (amount, title, projid) values (?, ?, ?)
2024-07-11 15:07:18,693[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Project set amount=?, title=? where projid=?
2024-07-11 15:07:18,693[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Project where projid=?
2024-07-11 15:07:18,693[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Project
2024-07-11 15:07:18,693[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6e0f32]
2024-07-11 15:07:18,694[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f3f0fae
2024-07-11 15:07:18,694[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Project, columns={projid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f3f0fae
2024-07-11 15:07:18,694[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Project
2024-07-11 15:07:18,694[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : amount
2024-07-11 15:07:18,694[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=amount, type=double [non-identifier])
2024-07-11 15:07:18,695[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=amount, type=double [non-identifier])
2024-07-11 15:07:18,695[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : title
2024-07-11 15:07:18,695[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=title, type=string [non-identifier])
2024-07-11 15:07:18,695[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
2024-07-11 15:07:18,696[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f3f0fae
2024-07-11 15:07:18,696[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Project
2024-07-11 15:07:18,696[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,696[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,696[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Project)
    - Returns
       - EntityReturnImpl(entity=com.model.Project, querySpaceUid=<gen:0>, path=com.model.Project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {projid1_8_0_}

2024-07-11 15:07:18,697[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Project [NONE]: select project0_.projid as projid1_8_0_, project0_.amount as amount2_8_0_, project0_.title as title3_8_0_ from Project project0_ where project0_.projid=?
2024-07-11 15:07:18,697[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Book
2024-07-11 15:07:18,697[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select bid from Book where bid =?
2024-07-11 15:07:18,697[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select book_.bid, book_.author as author2_0_, book_.booktypeid as booktype3_0_, book_.isid as isid4_0_, book_.publisher as publishe5_0_, book_.title as title6_0_ from Book book_ where book_.bid=?
2024-07-11 15:07:18,698[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Book (author, booktypeid, isid, publisher, title, bid) values (?, ?, ?, ?, ?, ?)
2024-07-11 15:07:18,698[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Book set author=?, booktypeid=?, isid=?, publisher=?, title=? where bid=?
2024-07-11 15:07:18,698[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Book where bid=?
2024-07-11 15:07:18,698[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Book
2024-07-11 15:07:18,698[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a66d45]
2024-07-11 15:07:18,699[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1f966492
2024-07-11 15:07:18,699[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Book, columns={bid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1f966492
2024-07-11 15:07:18,699[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Book
2024-07-11 15:07:18,700[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : author
2024-07-11 15:07:18,700[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=author, type=string [non-identifier])
2024-07-11 15:07:18,700[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=author, type=string [non-identifier])
2024-07-11 15:07:18,701[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : bookTypeid
2024-07-11 15:07:18,701[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=bookTypeid, type=integer [non-identifier])
2024-07-11 15:07:18,701[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=bookTypeid, type=integer [non-identifier])
2024-07-11 15:07:18,701[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : isid
2024-07-11 15:07:18,701[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=isid, type=integer [non-identifier])
2024-07-11 15:07:18,701[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=isid, type=integer [non-identifier])
2024-07-11 15:07:18,701[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : publisher
2024-07-11 15:07:18,701[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=publisher, type=string [non-identifier])
2024-07-11 15:07:18,701[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=publisher, type=string [non-identifier])
2024-07-11 15:07:18,701[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : title
2024-07-11 15:07:18,702[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=title, type=string [non-identifier])
2024-07-11 15:07:18,702[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
2024-07-11 15:07:18,702[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1f966492
2024-07-11 15:07:18,702[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Book
2024-07-11 15:07:18,702[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,702[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,703[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Book)
    - Returns
       - EntityReturnImpl(entity=com.model.Book, querySpaceUid=<gen:0>, path=com.model.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {bid1_0_0_}

2024-07-11 15:07:18,703[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Book [NONE]: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=?
2024-07-11 15:07:18,707[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.PlayerKit
2024-07-11 15:07:18,707[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select kitid from playerkit where kitid =?
2024-07-11 15:07:18,707[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select playerkit_.kitid, playerkit_.numbats as numbats2_7_ from playerkit playerkit_ where playerkit_.kitid=?
2024-07-11 15:07:18,707[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into playerkit (numbats, kitid) values (?, ?)
2024-07-11 15:07:18,707[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update playerkit set numbats=? where kitid=?
2024-07-11 15:07:18,707[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from playerkit where kitid=?
2024-07-11 15:07:18,708[yyyy-mm-dd HH-MM-SS] DEBUG   Identity insert: insert into playerkit (numbats) values (?)
2024-07-11 15:07:18,708[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.PlayerKit
2024-07-11 15:07:18,708[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50f40653]
2024-07-11 15:07:18,708[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@50a3d0f6
2024-07-11 15:07:18,709[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=playerkit, columns={kitid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@50a3d0f6
2024-07-11 15:07:18,709[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.PlayerKit
2024-07-11 15:07:18,709[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : numBats
2024-07-11 15:07:18,709[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=numBats, type=integer [non-identifier])
2024-07-11 15:07:18,710[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=numBats, type=integer [non-identifier])
2024-07-11 15:07:18,710[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@50a3d0f6
2024-07-11 15:07:18,710[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.PlayerKit
2024-07-11 15:07:18,710[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,710[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,711[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.PlayerKit)
    - Returns
       - EntityReturnImpl(entity=com.model.PlayerKit, querySpaceUid=<gen:0>, path=com.model.PlayerKit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.PlayerKit)
          - SQL table alias mapping - playerkit0_
          - alias suffix - 0_
          - suffixed key columns - {kitid1_7_0_}

2024-07-11 15:07:18,711[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.PlayerKit [NONE]: select playerkit0_.kitid as kitid1_7_0_, playerkit0_.numbats as numbats2_7_0_ from playerkit playerkit0_ where playerkit0_.kitid=?
2024-07-11 15:07:18,712[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Team
2024-07-11 15:07:18,712[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select teamid from Team where teamid =?
2024-07-11 15:07:18,712[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select team_.teamid, team_.name as name2_10_ from Team team_ where team_.teamid=?
2024-07-11 15:07:18,712[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Team (name, teamid) values (?, ?)
2024-07-11 15:07:18,713[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Team set name=? where teamid=?
2024-07-11 15:07:18,713[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Team where teamid=?
2024-07-11 15:07:18,713[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Team
2024-07-11 15:07:18,713[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e57b5e9]
2024-07-11 15:07:18,713[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1abc9f14
2024-07-11 15:07:18,713[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Team, columns={teamid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1abc9f14
2024-07-11 15:07:18,714[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Team
2024-07-11 15:07:18,714[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:07:18,714[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,714[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,714[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1abc9f14
2024-07-11 15:07:18,714[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Team
2024-07-11 15:07:18,714[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,714[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,715[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Team)
    - Returns
       - EntityReturnImpl(entity=com.model.Team, querySpaceUid=<gen:0>, path=com.model.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamid1_10_0_}

2024-07-11 15:07:18,715[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Team [NONE]: select team0_.teamid as teamid1_10_0_, team0_.name as name2_10_0_ from Team team0_ where team0_.teamid=?
2024-07-11 15:07:18,716[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Parking
2024-07-11 15:07:18,716[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select parkingid from Parking where parkingid =?
2024-07-11 15:07:18,716[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select parking_.parkingid, parking_.floornum as floornum2_5_ from Parking parking_ where parking_.parkingid=?
2024-07-11 15:07:18,716[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Parking (floornum, parkingid) values (?, ?)
2024-07-11 15:07:18,716[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Parking set floornum=? where parkingid=?
2024-07-11 15:07:18,716[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Parking where parkingid=?
2024-07-11 15:07:18,717[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Parking
2024-07-11 15:07:18,717[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a0ac48e]
2024-07-11 15:07:18,717[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24e08d59
2024-07-11 15:07:18,717[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Parking, columns={parkingid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24e08d59
2024-07-11 15:07:18,717[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Parking
2024-07-11 15:07:18,717[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : floornum
2024-07-11 15:07:18,718[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:07:18,718[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:07:18,718[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24e08d59
2024-07-11 15:07:18,718[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Parking
2024-07-11 15:07:18,718[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,718[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,719[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Parking)
    - Returns
       - EntityReturnImpl(entity=com.model.Parking, querySpaceUid=<gen:0>, path=com.model.Parking)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Parking)
          - SQL table alias mapping - parking0_
          - alias suffix - 0_
          - suffixed key columns - {parkingi1_5_0_}

2024-07-11 15:07:18,719[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Parking [NONE]: select parking0_.parkingid as parkingi1_5_0_, parking0_.floornum as floornum2_5_0_ from Parking parking0_ where parking0_.parkingid=?
2024-07-11 15:07:18,720[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Customer
2024-07-11 15:07:18,720[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select custid from Customer where custid =?
2024-07-11 15:07:18,720[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select customer_.custid, customer_.address as address2_1_, customer_.dob as dob3_1_, customer_.email as email4_1_, customer_.name as name5_1_, customer_.phone as phone6_1_ from Customer customer_ where customer_.custid=?
2024-07-11 15:07:18,720[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Customer (address, dob, email, name, phone, custid) values (?, ?, ?, ?, ?, ?)
2024-07-11 15:07:18,720[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Customer set address=?, dob=?, email=?, name=?, phone=? where custid=?
2024-07-11 15:07:18,720[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Customer where custid=?
2024-07-11 15:07:18,721[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Customer
2024-07-11 15:07:18,721[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77cb9cd1]
2024-07-11 15:07:18,721[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@971e903
2024-07-11 15:07:18,721[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Customer, columns={custid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@971e903
2024-07-11 15:07:18,722[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Customer
2024-07-11 15:07:18,722[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : address
2024-07-11 15:07:18,722[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=address, type=string [non-identifier])
2024-07-11 15:07:18,722[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
2024-07-11 15:07:18,722[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : dob
2024-07-11 15:07:18,722[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=dob, type=date [non-identifier])
2024-07-11 15:07:18,722[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=dob, type=date [non-identifier])
2024-07-11 15:07:18,723[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : email
2024-07-11 15:07:18,723[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=email, type=string [non-identifier])
2024-07-11 15:07:18,723[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
2024-07-11 15:07:18,723[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:07:18,723[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,723[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,723[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : phone
2024-07-11 15:07:18,723[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=phone, type=string [non-identifier])
2024-07-11 15:07:18,723[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=phone, type=string [non-identifier])
2024-07-11 15:07:18,724[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@971e903
2024-07-11 15:07:18,724[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Customer
2024-07-11 15:07:18,724[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,724[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,725[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.model.Customer, querySpaceUid=<gen:0>, path=com.model.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {custid1_1_0_}

2024-07-11 15:07:18,725[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Customer [NONE]: select customer0_.custid as custid1_1_0_, customer0_.address as address2_1_0_, customer0_.dob as dob3_1_0_, customer0_.email as email4_1_0_, customer0_.name as name5_1_0_, customer0_.phone as phone6_1_0_ from Customer customer0_ where customer0_.custid=?
2024-07-11 15:07:18,726[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Student
2024-07-11 15:07:18,726[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select roll from Student where roll =?
2024-07-11 15:07:18,726[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select student_.roll, student_.branch as branch2_9_, student_.dob as dob3_9_, student_.email as email4_9_, student_.name as name5_9_, student_.numBooks as numbooks6_9_, student_.password as password7_9_ from Student student_ where student_.roll=?
2024-07-11 15:07:18,726[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Student (branch, dob, email, name, numBooks, password, roll) values (?, ?, ?, ?, ?, ?, ?)
2024-07-11 15:07:18,726[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Student set branch=?, dob=?, email=?, name=?, numBooks=?, password=? where roll=?
2024-07-11 15:07:18,726[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Student where roll=?
2024-07-11 15:07:18,726[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Student
2024-07-11 15:07:18,727[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35636217]
2024-07-11 15:07:18,727[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1549bba7
2024-07-11 15:07:18,727[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Student, columns={roll}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1549bba7
2024-07-11 15:07:18,727[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Student
2024-07-11 15:07:18,727[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : branch
2024-07-11 15:07:18,727[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=branch, type=string [non-identifier])
2024-07-11 15:07:18,727[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=branch, type=string [non-identifier])
2024-07-11 15:07:18,727[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : dob
2024-07-11 15:07:18,728[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=dob, type=date [non-identifier])
2024-07-11 15:07:18,728[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=dob, type=date [non-identifier])
2024-07-11 15:07:18,728[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : email
2024-07-11 15:07:18,728[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=email, type=string [non-identifier])
2024-07-11 15:07:18,728[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
2024-07-11 15:07:18,728[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:07:18,728[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,728[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,728[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : numBooks
2024-07-11 15:07:18,728[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=numBooks, type=integer [non-identifier])
2024-07-11 15:07:18,729[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=numBooks, type=integer [non-identifier])
2024-07-11 15:07:18,729[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : password
2024-07-11 15:07:18,729[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=password, type=string [non-identifier])
2024-07-11 15:07:18,729[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
2024-07-11 15:07:18,729[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1549bba7
2024-07-11 15:07:18,729[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Student
2024-07-11 15:07:18,729[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,730[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,730[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.model.Student, querySpaceUid=<gen:0>, path=com.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {roll1_9_0_}

2024-07-11 15:07:18,730[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Student [NONE]: select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=?
2024-07-11 15:07:18,731[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Employee
2024-07-11 15:07:18,731[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select empid from Employee where empid =?
2024-07-11 15:07:18,731[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select employee_.empid, employee_.depid as depid3_3_, employee_.name as name2_3_, employee_.parking_parkingid as parking_4_3_ from Employee employee_ where employee_.empid=?
2024-07-11 15:07:18,731[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Employee (depid, name, parking_parkingid, empid) values (?, ?, ?, ?)
2024-07-11 15:07:18,731[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Employee set depid=?, name=?, parking_parkingid=? where empid=?
2024-07-11 15:07:18,731[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Employee where empid=?
2024-07-11 15:07:18,731[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Employee
2024-07-11 15:07:18,731[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4f80cb]
2024-07-11 15:07:18,731[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38704ff0
2024-07-11 15:07:18,732[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Employee, columns={empid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38704ff0
2024-07-11 15:07:18,732[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Employee
2024-07-11 15:07:18,732[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : department
2024-07-11 15:07:18,732[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=department, type=com.model.Department [non-identifier,association])
2024-07-11 15:07:18,732[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ade133]
2024-07-11 15:07:18,732[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4e61e4c2
2024-07-11 15:07:18,732[yyyy-mm-dd HH-MM-SS] TRACE  .... Registering AssociationKey : AssociationKey(table=Employee, columns={depid}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4e61e4c2
2024-07-11 15:07:18,733[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting entity identifier : com.model.Department
2024-07-11 15:07:18,733[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : department.employees
2024-07-11 15:07:18,733[yyyy-mm-dd HH-MM-SS] DEBUG  Property path deemed to be circular : department.employees
2024-07-11 15:07:18,733[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : department.establishdate
2024-07-11 15:07:18,733[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=establishdate, type=date [non-identifier])
2024-07-11 15:07:18,733[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=establishdate, type=date [non-identifier])
2024-07-11 15:07:18,733[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : department.name
2024-07-11 15:07:18,733[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,733[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,733[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4e61e4c2
2024-07-11 15:07:18,734[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=department, type=com.model.Department [non-identifier,association])
2024-07-11 15:07:18,734[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:07:18,734[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,734[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,734[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : parking
2024-07-11 15:07:18,734[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=parking, type=com.model.Parking [non-identifier,association])
2024-07-11 15:07:18,734[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6a6c1d]
2024-07-11 15:07:18,734[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@36dfbdaf
2024-07-11 15:07:18,735[yyyy-mm-dd HH-MM-SS] TRACE  .... Registering AssociationKey : AssociationKey(table=Employee, columns={parking_parkingid}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@36dfbdaf
2024-07-11 15:07:18,735[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting entity identifier : com.model.Parking
2024-07-11 15:07:18,735[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : parking.floornum
2024-07-11 15:07:18,735[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:07:18,735[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:07:18,735[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@36dfbdaf
2024-07-11 15:07:18,735[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=parking, type=com.model.Parking [non-identifier,association])
2024-07-11 15:07:18,735[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : projects
2024-07-11 15:07:18,735[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=projects, type=java.util.Collection(com.model.Employee.projects) [non-identifier,association])
2024-07-11 15:07:18,736[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f82663e]
2024-07-11 15:07:18,736[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e04ccf8]
2024-07-11 15:07:18,736[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=projects, type=java.util.Collection(com.model.Employee.projects) [non-identifier,association])
2024-07-11 15:07:18,736[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38704ff0
2024-07-11 15:07:18,736[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Employee
2024-07-11 15:07:18,736[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,736[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,737[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Employee)
    - Returns
       - EntityReturnImpl(entity=com.model.Employee, querySpaceUid=<gen:0>, path=com.model.Employee)
          - EntityAttributeFetchImpl(entity=com.model.Department, querySpaceUid=<gen:1>, path=com.model.Employee.department)
          - EntityAttributeFetchImpl(entity=com.model.Parking, querySpaceUid=<gen:2>, path=com.model.Employee.parking)
          - CollectionAttributeFetchImpl(collection=com.model.Employee.projects, querySpaceUid=<gen:3>, path=com.model.Employee.projects)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.model.Project, querySpaceUid=<gen:4>, path=com.model.Employee.projects.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {empid1_3_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.model.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {depid1_2_1_}
          - JOIN (JoinDefinedByMetadata(parking)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.model.Parking)
                - SQL table alias mapping - parking2_
                - alias suffix - 2_
                - suffixed key columns - {parkingi1_5_2_}

2024-07-11 15:07:18,737[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Employee [NONE]: select employee0_.empid as empid1_3_0_, employee0_.depid as depid3_3_0_, employee0_.name as name2_3_0_, employee0_.parking_parkingid as parking_4_3_0_, department1_.depid as depid1_2_1_, department1_.establishdate as establis2_2_1_, department1_.name as name3_2_1_, parking2_.parkingid as parkingi1_5_2_, parking2_.floornum as floornum2_5_2_ from Employee employee0_ left outer join Department department1_ on employee0_.depid=department1_.depid left outer join Parking parking2_ on employee0_.parking_parkingid=parking2_.parkingid where employee0_.empid=?
2024-07-11 15:07:18,740[yyyy-mm-dd HH-MM-SS] TRACE   Starting root collection : com.model.Employee.projects
2024-07-11 15:07:18,741[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f387978]
2024-07-11 15:07:18,741[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cb2651f]
2024-07-11 15:07:18,741[yyyy-mm-dd HH-MM-SS] TRACE  Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4441d567
2024-07-11 15:07:18,741[yyyy-mm-dd HH-MM-SS] TRACE   Registering AssociationKey : AssociationKey(table=Employee_Project, columns={Employee_empid}) -> null
2024-07-11 15:07:18,742[yyyy-mm-dd HH-MM-SS] TRACE   Starting collection element graph : com.model.Employee.projects
2024-07-11 15:07:18,742[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@48535004
2024-07-11 15:07:18,742[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Employee_Project, columns={projects_projid}) -> org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@48535004
2024-07-11 15:07:18,742[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Project
2024-07-11 15:07:18,742[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : amount
2024-07-11 15:07:18,742[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=amount, type=double [non-identifier])
2024-07-11 15:07:18,743[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=amount, type=double [non-identifier])
2024-07-11 15:07:18,743[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : title
2024-07-11 15:07:18,743[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=title, type=string [non-identifier])
2024-07-11 15:07:18,743[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
2024-07-11 15:07:18,743[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@48535004
2024-07-11 15:07:18,743[yyyy-mm-dd HH-MM-SS] TRACE   Finished collection element graph : com.model.Employee.projects
2024-07-11 15:07:18,743[yyyy-mm-dd HH-MM-SS] TRACE  Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4441d567
2024-07-11 15:07:18,743[yyyy-mm-dd HH-MM-SS] TRACE   Finished root collection : com.model.Employee.projects
2024-07-11 15:07:18,743[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,746[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,746[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(collection=com.model.Employee.projects)
    - Returns
       - CollectionReturnImpl(collection=com.model.Employee.projects, querySpaceUid=<gen:0>, path=[com.model.Employee.projects])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.model.Project, querySpaceUid=<gen:1>, path=[com.model.Employee.projects].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.model.Employee.projects)
          - SQL table alias mapping - projects0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - projid1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.model.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {projid1_8_1_}

2024-07-11 15:07:18,747[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for collection com.model.Employee.projects: select projects0_.Employee_empid as employee1_4_0_, projects0_.projects_projid as projects2_4_0_, project1_.projid as projid1_8_1_, project1_.amount as amount2_8_1_, project1_.title as title3_8_1_ from Employee_Project projects0_ inner join Project project1_ on projects0_.projects_projid=project1_.projid where projects0_.Employee_empid=?
2024-07-11 15:07:18,747[yyyy-mm-dd HH-MM-SS] TRACE   Starting root collection : com.model.Department.employees
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14bf57b2]
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d9aec8]
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] TRACE  Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@14379273
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] TRACE   Registering AssociationKey : AssociationKey(table=Employee, columns={depid}) -> null
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] TRACE   Starting collection element graph : com.model.Department.employees
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@7918c7f8
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Employee
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : department
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] DEBUG  Property path deemed to be circular : department
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : parking
2024-07-11 15:07:18,748[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=parking, type=com.model.Parking [non-identifier,association])
2024-07-11 15:07:18,750[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17740dae]
2024-07-11 15:07:18,750[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1c504e66
2024-07-11 15:07:18,750[yyyy-mm-dd HH-MM-SS] TRACE  .... Registering AssociationKey : AssociationKey(table=Employee, columns={parking_parkingid}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1c504e66
2024-07-11 15:07:18,750[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting entity identifier : com.model.Parking
2024-07-11 15:07:18,750[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : parking.floornum
2024-07-11 15:07:18,750[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:07:18,750[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:07:18,750[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1c504e66
2024-07-11 15:07:18,750[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=parking, type=com.model.Parking [non-identifier,association])
2024-07-11 15:07:18,750[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : projects
2024-07-11 15:07:18,750[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=projects, type=java.util.Collection(com.model.Employee.projects) [non-identifier,association])
2024-07-11 15:07:18,751[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@345cf395]
2024-07-11 15:07:18,751[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc4d5e1]
2024-07-11 15:07:18,751[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=projects, type=java.util.Collection(com.model.Employee.projects) [non-identifier,association])
2024-07-11 15:07:18,751[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@7918c7f8
2024-07-11 15:07:18,751[yyyy-mm-dd HH-MM-SS] TRACE   Finished collection element graph : com.model.Department.employees
2024-07-11 15:07:18,751[yyyy-mm-dd HH-MM-SS] TRACE  Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@14379273
2024-07-11 15:07:18,751[yyyy-mm-dd HH-MM-SS] TRACE   Finished root collection : com.model.Department.employees
2024-07-11 15:07:18,751[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:07:18,752[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:07:18,753[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(collection=com.model.Department.employees)
    - Returns
       - CollectionReturnImpl(collection=com.model.Department.employees, querySpaceUid=<gen:0>, path=[com.model.Department.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.model.Employee, querySpaceUid=<gen:1>, path=[com.model.Department.employees].<elements>)
             - EntityAttributeFetchImpl(entity=com.model.Parking, querySpaceUid=<gen:2>, path=[com.model.Department.employees].<elements>.parking)
             - CollectionAttributeFetchImpl(collection=com.model.Employee.projects, querySpaceUid=<gen:3>, path=[com.model.Department.employees].<elements>.projects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.model.Project, querySpaceUid=<gen:4>, path=[com.model.Department.employees].<elements>.projects.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.model.Department.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {depid3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - empid1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.model.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {empid1_3_1_}
                - JOIN (JoinDefinedByMetadata(parking)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.model.Parking)
                      - SQL table alias mapping - parking1_
                      - alias suffix - 2_
                      - suffixed key columns - {parkingi1_5_2_}

2024-07-11 15:07:18,753[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for collection com.model.Department.employees: select employees0_.depid as depid3_3_0_, employees0_.empid as empid1_3_0_, employees0_.empid as empid1_3_1_, employees0_.depid as depid3_3_1_, employees0_.name as name2_3_1_, employees0_.parking_parkingid as parking_4_3_1_, parking1_.parkingid as parkingi1_5_2_, parking1_.floornum as floornum2_5_2_ from Employee employees0_ left outer join Parking parking1_ on employees0_.parking_parkingid=parking1_.parkingid where employees0_.depid=?
2024-07-11 15:07:18,766[yyyy-mm-dd HH-MM-SS] TRACE  Wrapping up metadata context...
2024-07-11 15:07:18,767[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Player]
2024-07-11 15:07:18,767[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Player.playerid]
2024-07-11 15:07:18,767[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [playerid]
2024-07-11 15:07:18,768[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Player.playerid]
2024-07-11 15:07:18,768[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,771[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Player.kit]
2024-07-11 15:07:18,772[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [kit]
2024-07-11 15:07:18,772[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [com.model.PlayerKit com.model.Player.kit]
2024-07-11 15:07:18,772[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=com.model.PlayerKit, class=org.hibernate.type.ManyToOneType]
2024-07-11 15:07:18,772[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Player.name]
2024-07-11 15:07:18,772[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:07:18,772[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Player.name]
2024-07-11 15:07:18,772[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,772[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Player.team]
2024-07-11 15:07:18,772[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [team]
2024-07-11 15:07:18,772[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [com.model.Team com.model.Player.team]
2024-07-11 15:07:18,772[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=com.model.Team, class=org.hibernate.type.ManyToOneType]
2024-07-11 15:07:18,773[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Player]
2024-07-11 15:07:18,773[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Department]
2024-07-11 15:07:18,773[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Department.depid]
2024-07-11 15:07:18,773[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [depid]
2024-07-11 15:07:18,773[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Department.depid]
2024-07-11 15:07:18,773[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,773[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Department.employees]
2024-07-11 15:07:18,773[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [employees]
2024-07-11 15:07:18,773[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.util.List com.model.Department.employees]
2024-07-11 15:07:18,773[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=java.util.Collection(com.model.Department.employees), class=org.hibernate.type.BagType]
2024-07-11 15:07:18,777[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Department.establishdate]
2024-07-11 15:07:18,777[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [establishdate]
2024-07-11 15:07:18,777[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.sql.Date com.model.Department.establishdate]
2024-07-11 15:07:18,777[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=date, class=org.hibernate.type.DateType]
2024-07-11 15:07:18,777[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Department.name]
2024-07-11 15:07:18,777[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Department.name]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Department]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Project]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Project.projid]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [projid]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Project.projid]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Project.amount]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [amount]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.Double com.model.Project.amount]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=double, class=org.hibernate.type.DoubleType]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Project.title]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [title]
2024-07-11 15:07:18,778[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Project.title]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Project]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Book]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Book.bid]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [bid]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Book.bid]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Book.author]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [author]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Book.author]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Book.bookTypeid]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [bookTypeid]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Book.bookTypeid]
2024-07-11 15:07:18,779[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Book.isid]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [isid]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Book.isid]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Book.publisher]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [publisher]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Book.publisher]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Book.title]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [title]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Book.title]
2024-07-11 15:07:18,780[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Book]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.PlayerKit]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [PlayerKit.kitid]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [kitid]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.PlayerKit.kitid]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [PlayerKit.numBats]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [numBats]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.Integer com.model.PlayerKit.numBats]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.PlayerKit]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Team]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Team.teamid]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [teamid]
2024-07-11 15:07:18,781[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Team.teamid]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Team.name]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.String com.model.Team.name]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Team]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Parking]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Parking.parkingId]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [parkingId]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Parking.parkingId]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Parking.floornum]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [floornum]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Parking.floornum]
2024-07-11 15:07:18,783[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Parking]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Customer]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Customer.custid]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [custid]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [int com.model.Customer.custid]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Customer.address]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [address]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.String com.model.Customer.address]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Customer.dob]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [dob]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.sql.Date com.model.Customer.dob]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=date, class=org.hibernate.type.DateType]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Customer.email]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [email]
2024-07-11 15:07:18,784[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.String com.model.Customer.email]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Customer.name]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.String com.model.Customer.name]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Customer.phone]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [phone]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.String com.model.Customer.phone]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Customer]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Student]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Student.roll]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [roll]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Student.roll]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.branch]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [branch]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Student.branch]
2024-07-11 15:07:18,785[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.dob]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [dob]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.sql.Date com.model.Student.dob]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=date, class=org.hibernate.type.DateType]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.email]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [email]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Student.email]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.name]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Student.name]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,786[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.numBooks]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [numBooks]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Student.numBooks]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.password]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [password]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Student.password]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Student]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Employee]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Employee.empid]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [empid]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Employee.empid]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Employee.department]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [department]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [com.model.Department com.model.Employee.department]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=com.model.Department, class=org.hibernate.type.ManyToOneType]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Employee.name]
2024-07-11 15:07:18,787[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:07:18,788[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Employee.name]
2024-07-11 15:07:18,788[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:07:18,788[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Employee.parking]
2024-07-11 15:07:18,788[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [parking]
2024-07-11 15:07:18,788[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [com.model.Parking com.model.Employee.parking]
2024-07-11 15:07:18,788[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=com.model.Parking, class=org.hibernate.type.ManyToOneType]
2024-07-11 15:07:18,788[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Employee.projects]
2024-07-11 15:07:18,788[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [projects]
2024-07-11 15:07:18,788[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.util.List com.model.Employee.projects]
2024-07-11 15:07:18,788[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=java.util.Collection(com.model.Employee.projects), class=org.hibernate.type.BagType]
2024-07-11 15:07:18,789[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Employee]
2024-07-11 15:07:18,800[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
2024-07-11 15:07:18,813[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:07:18,830[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:07:18,830[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [lpu24] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,835[yyyy-mm-dd HH-MM-SS] INFO   HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@31da3d60] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-07-11 15:07:18,961[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Book]
2024-07-11 15:07:18,961[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Book] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [bid]
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [bid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [author]
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [author] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [booktypeid]
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [booktypeid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [isid]
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [isid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [publisher]
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [publisher] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [title]
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [title] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Book
2024-07-11 15:07:18,962[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Customer]
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Customer] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [custid]
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [custid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [address]
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [dob]
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [dob] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [email]
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [email] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [phone]
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [phone] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Customer
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Department]
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Department] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [depid]
2024-07-11 15:07:18,963[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [depid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [establishdate]
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [establishdate] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Department
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee]
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [empid]
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [empid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [depid]
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [depid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [parking_parkingid]
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [parking_parkingid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Employee
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee_Project]
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee_Project] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee_empid]
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee_empid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,964[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [projects_projid]
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [projects_projid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Employee_Project
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [hibernate_sequence]
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [hibernate_sequence] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [next_val]
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [next_val] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : hibernate_sequence
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Parking]
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Parking] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [parkingid]
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [parkingid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [floornum]
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [floornum] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,966[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Parking
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Player]
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Player] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerid]
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [kit_kitid]
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [kit_kitid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [teamid]
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [teamid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Player
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerkit]
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerkit] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [kitid]
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [kitid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [numbats]
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [numbats] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : playerkit
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerseq]
2024-07-11 15:07:18,967[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerseq] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [next_val]
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [next_val] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : playerseq
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Project]
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Project] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [projid]
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [projid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [amount]
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [amount] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [title]
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [title] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Project
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Student]
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Student] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [roll]
2024-07-11 15:07:18,968[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [roll] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [branch]
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [branch] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [dob]
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [dob] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [email]
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [email] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [numBooks]
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [numBooks] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [password]
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [password] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Student
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Team]
2024-07-11 15:07:18,969[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Team] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,970[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [teamid]
2024-07-11 15:07:18,970[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [teamid] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,970[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:07:18,970[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,970[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Team
2024-07-11 15:07:18,970[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Book]
2024-07-11 15:07:18,970[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Book] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,971[yyyy-mm-dd HH-MM-SS] TRACE  Interpreting UniqueConstraintSchemaUpdateStrategy from setting : null
2024-07-11 15:07:18,971[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Customer]
2024-07-11 15:07:18,971[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Customer] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,971[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Department]
2024-07-11 15:07:18,971[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Department] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,971[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee]
2024-07-11 15:07:18,971[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,971[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee_Project]
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee_Project] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [hibernate_sequence]
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [hibernate_sequence] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Parking]
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Parking] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Player]
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Player] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerkit]
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerkit] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerseq]
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerseq] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Project]
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Project] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,972[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Student]
2024-07-11 15:07:18,973[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Student] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,973[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Team]
2024-07-11 15:07:18,973[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Team] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,973[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Book]
2024-07-11 15:07:18,973[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Book] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,973[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Customer]
2024-07-11 15:07:18,973[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Customer] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,973[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Department]
2024-07-11 15:07:18,973[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Department] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,973[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee]
2024-07-11 15:07:18,973[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee] in lower case for use in DatabaseMetaData
2024-07-11 15:07:18,998[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:07:18,998[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [department]
2024-07-11 15:07:19,032[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [depid]
2024-07-11 15:07:19,033[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [depid]
2024-07-11 15:07:19,033[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:07:19,034[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [parking]
2024-07-11 15:07:19,041[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [parking_parkingid]
2024-07-11 15:07:19,041[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [parkingid]
2024-07-11 15:07:19,045[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee_Project]
2024-07-11 15:07:19,045[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee_Project] in lower case for use in DatabaseMetaData
2024-07-11 15:07:19,053[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:07:19,054[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [employee]
2024-07-11 15:07:19,059[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee_empid]
2024-07-11 15:07:19,061[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [empid]
2024-07-11 15:07:19,061[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:07:19,061[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [project]
2024-07-11 15:07:19,068[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [projects_projid]
2024-07-11 15:07:19,068[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [projid]
2024-07-11 15:07:19,068[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [hibernate_sequence]
2024-07-11 15:07:19,069[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [hibernate_sequence] in lower case for use in DatabaseMetaData
2024-07-11 15:07:19,069[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Parking]
2024-07-11 15:07:19,069[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Parking] in lower case for use in DatabaseMetaData
2024-07-11 15:07:19,069[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Player]
2024-07-11 15:07:19,069[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Player] in lower case for use in DatabaseMetaData
2024-07-11 15:07:19,077[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:07:19,077[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerkit]
2024-07-11 15:07:19,085[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [kit_kitid]
2024-07-11 15:07:19,086[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [kitid]
2024-07-11 15:07:19,086[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:07:19,086[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [team]
2024-07-11 15:07:19,092[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [teamid]
2024-07-11 15:07:19,093[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [teamid]
2024-07-11 15:07:19,093[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerkit]
2024-07-11 15:07:19,093[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerkit] in lower case for use in DatabaseMetaData
2024-07-11 15:07:19,093[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerseq]
2024-07-11 15:07:19,093[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerseq] in lower case for use in DatabaseMetaData
2024-07-11 15:07:19,093[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Project]
2024-07-11 15:07:19,093[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Project] in lower case for use in DatabaseMetaData
2024-07-11 15:07:19,093[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Student]
2024-07-11 15:07:19,093[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Student] in lower case for use in DatabaseMetaData
2024-07-11 15:07:19,093[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Team]
2024-07-11 15:07:19,093[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Team] in lower case for use in DatabaseMetaData
2024-07-11 15:07:19,094[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
2024-07-11 15:07:19,095[yyyy-mm-dd HH-MM-SS] DEBUG  No JtaPlatform was specified, checking resolver
2024-07-11 15:07:19,095[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
2024-07-11 15:07:19,095[yyyy-mm-dd HH-MM-SS] DEBUG  No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-07-11 15:07:19,100[yyyy-mm-dd HH-MM-SS] DEBUG  Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-11 15:07:19,100[yyyy-mm-dd HH-MM-SS] INFO   HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-11 15:07:19,108[yyyy-mm-dd HH-MM-SS] DEBUG  EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 15:07:19,109[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.hql.spi.QueryTranslatorFactory]
2024-07-11 15:07:19,110[yyyy-mm-dd HH-MM-SS] DEBUG  QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@34819867
2024-07-11 15:07:19,117[yyyy-mm-dd HH-MM-SS] DEBUG  Checking 0 named HQL queries
2024-07-11 15:07:19,117[yyyy-mm-dd HH-MM-SS] DEBUG  Checking 0 named SQL queries
2024-07-11 15:07:19,117[yyyy-mm-dd HH-MM-SS] TRACE  Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5af9926a] for TypeConfiguration
2024-07-11 15:07:19,119[yyyy-mm-dd HH-MM-SS] DEBUG  Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@162b3d47
2024-07-11 15:07:19,120[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
2024-07-11 15:07:19,122[yyyy-mm-dd HH-MM-SS] DEBUG  Registering SessionFactory: b1cc8a60-ecbb-458f-9d01-804870612dd4 (<unnamed>)
2024-07-11 15:07:19,122[yyyy-mm-dd HH-MM-SS] DEBUG  Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-11 15:07:19,123[yyyy-mm-dd HH-MM-SS] TRACE  Opening Hibernate Session.  tenant=null
2024-07-11 15:07:19,189[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
2024-07-11 15:07:19,195[yyyy-mm-dd HH-MM-SS] DEBUG  Statistics initialized [enabled=false]
2024-07-11 15:07:19,200[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.jmx.spi.JmxService]
2024-07-11 15:07:19,202[yyyy-mm-dd HH-MM-SS] TRACE  Opened Session [09892121-9e6c-4b14-bad2-206068a1ea23] at timestamp: 1720690639157
2024-07-11 15:07:19,207[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Book#101]
2024-07-11 15:07:19,207[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Book#101]
2024-07-11 15:07:19,209[yyyy-mm-dd HH-MM-SS] TRACE  Object not resolved in any cache: [com.model.Book#101]
2024-07-11 15:07:19,209[yyyy-mm-dd HH-MM-SS] TRACE  Fetching entity: [com.model.Book#101]
2024-07-11 15:07:19,213[yyyy-mm-dd HH-MM-SS] DEBUG  select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=?
2024-07-11 15:07:19,215[yyyy-mm-dd HH-MM-SS] TRACE  Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:07:19,216[yyyy-mm-dd HH-MM-SS] TRACE  Registering last query statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:07:19,219[yyyy-mm-dd HH-MM-SS] TRACE  binding parameter [1] as [INTEGER] - [101]
2024-07-11 15:07:19,219[yyyy-mm-dd HH-MM-SS] TRACE  Bound [2] parameters total
2024-07-11 15:07:19,237[yyyy-mm-dd HH-MM-SS] TRACE  Registering result set [com.mysql.cj.jdbc.result.ResultSetImpl@23706db8]
2024-07-11 15:07:19,239[yyyy-mm-dd HH-MM-SS] TRACE  Processing result set
2024-07-11 15:07:19,239[yyyy-mm-dd HH-MM-SS] TRACE  Starting ResultSet row #0
2024-07-11 15:07:19,240[yyyy-mm-dd HH-MM-SS] DEBUG  On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-07-11 15:07:19,242[yyyy-mm-dd HH-MM-SS] TRACE  hydrating entity state
2024-07-11 15:07:19,242[yyyy-mm-dd HH-MM-SS] TRACE  Initializing object from ResultSet: [com.model.Book#101]
2024-07-11 15:07:19,247[yyyy-mm-dd HH-MM-SS] TRACE  Hydrating entity: [com.model.Book#101]
2024-07-11 15:07:19,247[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([author2_0_0_] : [VARCHAR]) - [Ritchie]
2024-07-11 15:07:19,248[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([booktype3_0_0_] : [INTEGER]) - [1]
2024-07-11 15:07:19,248[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([isid4_0_0_] : [INTEGER]) - [0]
2024-07-11 15:07:19,248[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([publishe5_0_0_] : [VARCHAR]) - [Pearson]
2024-07-11 15:07:19,248[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([title6_0_0_] : [VARCHAR]) - [C]
2024-07-11 15:07:19,249[yyyy-mm-dd HH-MM-SS] TRACE  Done processing result set (1 rows)
2024-07-11 15:07:19,250[yyyy-mm-dd HH-MM-SS] TRACE  Total objects hydrated: 1
2024-07-11 15:07:19,252[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving attributes for [com.model.Book#101]
2024-07-11 15:07:19,253[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `author` : value = Ritchie
2024-07-11 15:07:19,253[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`author`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,253[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `bookTypeid` : value = 1
2024-07-11 15:07:19,254[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`bookTypeid`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,254[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `isid` : value = 0
2024-07-11 15:07:19,254[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`isid`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,254[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `publisher` : value = Pearson
2024-07-11 15:07:19,254[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`publisher`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,254[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `title` : value = C
2024-07-11 15:07:19,254[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`title`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,320[yyyy-mm-dd HH-MM-SS] DEBUG  Done materializing entity [com.model.Book#101]
2024-07-11 15:07:19,321[yyyy-mm-dd HH-MM-SS] TRACE  Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
2024-07-11 15:07:19,322[yyyy-mm-dd HH-MM-SS] TRACE  Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=101]
2024-07-11 15:07:19,322[yyyy-mm-dd HH-MM-SS] TRACE  Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@23706db8]
2024-07-11 15:07:19,323[yyyy-mm-dd HH-MM-SS] TRACE  Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=101]
2024-07-11 15:07:19,323[yyyy-mm-dd HH-MM-SS] TRACE  Starting after statement execution processing [AFTER_TRANSACTION]
2024-07-11 15:07:19,323[yyyy-mm-dd HH-MM-SS] TRACE  Initializing non-lazy collections
2024-07-11 15:07:19,323[yyyy-mm-dd HH-MM-SS] DEBUG  Done entity load : com.model.Book#101
2024-07-11 15:07:19,323[yyyy-mm-dd HH-MM-SS] TRACE  LogicalConnection#afterTransaction
2024-07-11 15:07:19,323[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:07:19,323[yyyy-mm-dd HH-MM-SS] DEBUG  Initiating JDBC connection release from afterTransaction
2024-07-11 15:07:19,323[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:07:19,325[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Book#102]
2024-07-11 15:07:19,325[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Book#102]
2024-07-11 15:07:19,325[yyyy-mm-dd HH-MM-SS] TRACE  Object not resolved in any cache: [com.model.Book#102]
2024-07-11 15:07:19,325[yyyy-mm-dd HH-MM-SS] TRACE  Fetching entity: [com.model.Book#102]
2024-07-11 15:07:19,325[yyyy-mm-dd HH-MM-SS] DEBUG  select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=?
2024-07-11 15:07:19,326[yyyy-mm-dd HH-MM-SS] TRACE  Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:07:19,326[yyyy-mm-dd HH-MM-SS] TRACE  Registering last query statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:07:19,326[yyyy-mm-dd HH-MM-SS] TRACE  binding parameter [1] as [INTEGER] - [102]
2024-07-11 15:07:19,326[yyyy-mm-dd HH-MM-SS] TRACE  Bound [2] parameters total
2024-07-11 15:07:19,327[yyyy-mm-dd HH-MM-SS] TRACE  Registering result set [com.mysql.cj.jdbc.result.ResultSetImpl@7a0f244f]
2024-07-11 15:07:19,328[yyyy-mm-dd HH-MM-SS] TRACE  Processing result set
2024-07-11 15:07:19,328[yyyy-mm-dd HH-MM-SS] TRACE  Starting ResultSet row #0
2024-07-11 15:07:19,328[yyyy-mm-dd HH-MM-SS] DEBUG  On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-07-11 15:07:19,328[yyyy-mm-dd HH-MM-SS] TRACE  hydrating entity state
2024-07-11 15:07:19,328[yyyy-mm-dd HH-MM-SS] TRACE  Initializing object from ResultSet: [com.model.Book#102]
2024-07-11 15:07:19,328[yyyy-mm-dd HH-MM-SS] TRACE  Hydrating entity: [com.model.Book#102]
2024-07-11 15:07:19,328[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([author2_0_0_] : [VARCHAR]) - [Ritchie]
2024-07-11 15:07:19,329[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([booktype3_0_0_] : [INTEGER]) - [1]
2024-07-11 15:07:19,329[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([isid4_0_0_] : [INTEGER]) - [0]
2024-07-11 15:07:19,329[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([publishe5_0_0_] : [VARCHAR]) - [Pearson]
2024-07-11 15:07:19,329[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([title6_0_0_] : [VARCHAR]) - [C]
2024-07-11 15:07:19,329[yyyy-mm-dd HH-MM-SS] TRACE  Done processing result set (1 rows)
2024-07-11 15:07:19,329[yyyy-mm-dd HH-MM-SS] TRACE  Total objects hydrated: 1
2024-07-11 15:07:19,329[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving attributes for [com.model.Book#102]
2024-07-11 15:07:19,329[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `author` : value = Ritchie
2024-07-11 15:07:19,329[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`author`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,329[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `bookTypeid` : value = 1
2024-07-11 15:07:19,329[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`bookTypeid`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `isid` : value = 0
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`isid`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `publisher` : value = Pearson
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`publisher`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `title` : value = C
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`title`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] DEBUG  Done materializing entity [com.model.Book#102]
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] TRACE  Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] TRACE  Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=102]
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] TRACE  Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7a0f244f]
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] TRACE  Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=102]
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] TRACE  Starting after statement execution processing [AFTER_TRANSACTION]
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] TRACE  Initializing non-lazy collections
2024-07-11 15:07:19,330[yyyy-mm-dd HH-MM-SS] DEBUG  Done entity load : com.model.Book#102
2024-07-11 15:07:19,331[yyyy-mm-dd HH-MM-SS] TRACE  LogicalConnection#afterTransaction
2024-07-11 15:07:19,331[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:07:19,331[yyyy-mm-dd HH-MM-SS] DEBUG  Initiating JDBC connection release from afterTransaction
2024-07-11 15:07:19,331[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:07:19,332[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Book#103]
2024-07-11 15:07:19,332[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Book#103]
2024-07-11 15:07:19,332[yyyy-mm-dd HH-MM-SS] TRACE  Object not resolved in any cache: [com.model.Book#103]
2024-07-11 15:07:19,332[yyyy-mm-dd HH-MM-SS] TRACE  Fetching entity: [com.model.Book#103]
2024-07-11 15:07:19,332[yyyy-mm-dd HH-MM-SS] DEBUG  select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=?
2024-07-11 15:07:19,333[yyyy-mm-dd HH-MM-SS] TRACE  Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:07:19,333[yyyy-mm-dd HH-MM-SS] TRACE  Registering last query statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:07:19,333[yyyy-mm-dd HH-MM-SS] TRACE  binding parameter [1] as [INTEGER] - [103]
2024-07-11 15:07:19,334[yyyy-mm-dd HH-MM-SS] TRACE  Bound [2] parameters total
2024-07-11 15:07:19,336[yyyy-mm-dd HH-MM-SS] TRACE  Registering result set [com.mysql.cj.jdbc.result.ResultSetImpl@7f08caf]
2024-07-11 15:07:19,336[yyyy-mm-dd HH-MM-SS] TRACE  Processing result set
2024-07-11 15:07:19,336[yyyy-mm-dd HH-MM-SS] TRACE  Starting ResultSet row #0
2024-07-11 15:07:19,336[yyyy-mm-dd HH-MM-SS] DEBUG  On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-07-11 15:07:19,336[yyyy-mm-dd HH-MM-SS] TRACE  hydrating entity state
2024-07-11 15:07:19,336[yyyy-mm-dd HH-MM-SS] TRACE  Initializing object from ResultSet: [com.model.Book#103]
2024-07-11 15:07:19,336[yyyy-mm-dd HH-MM-SS] TRACE  Hydrating entity: [com.model.Book#103]
2024-07-11 15:07:19,336[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([author2_0_0_] : [VARCHAR]) - [Herbert]
2024-07-11 15:07:19,336[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([booktype3_0_0_] : [INTEGER]) - [2]
2024-07-11 15:07:19,336[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([isid4_0_0_] : [INTEGER]) - [0]
2024-07-11 15:07:19,336[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([publishe5_0_0_] : [VARCHAR]) - [McGraw Hill]
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([title6_0_0_] : [VARCHAR]) - [Java Complete Ref]
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] TRACE  Done processing result set (1 rows)
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] TRACE  Total objects hydrated: 1
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving attributes for [com.model.Book#103]
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `author` : value = Herbert
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`author`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `bookTypeid` : value = 2
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`bookTypeid`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `isid` : value = 0
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`isid`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `publisher` : value = McGraw Hill
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`publisher`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `title` : value = Java Complete Ref
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`title`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,337[yyyy-mm-dd HH-MM-SS] DEBUG  Done materializing entity [com.model.Book#103]
2024-07-11 15:07:19,338[yyyy-mm-dd HH-MM-SS] TRACE  Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
2024-07-11 15:07:19,338[yyyy-mm-dd HH-MM-SS] TRACE  Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=103]
2024-07-11 15:07:19,338[yyyy-mm-dd HH-MM-SS] TRACE  Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7f08caf]
2024-07-11 15:07:19,338[yyyy-mm-dd HH-MM-SS] TRACE  Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=103]
2024-07-11 15:07:19,338[yyyy-mm-dd HH-MM-SS] TRACE  Starting after statement execution processing [AFTER_TRANSACTION]
2024-07-11 15:07:19,338[yyyy-mm-dd HH-MM-SS] TRACE  Initializing non-lazy collections
2024-07-11 15:07:19,338[yyyy-mm-dd HH-MM-SS] DEBUG  Done entity load : com.model.Book#103
2024-07-11 15:07:19,338[yyyy-mm-dd HH-MM-SS] TRACE  LogicalConnection#afterTransaction
2024-07-11 15:07:19,338[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:07:19,338[yyyy-mm-dd HH-MM-SS] DEBUG  Initiating JDBC connection release from afterTransaction
2024-07-11 15:07:19,338[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:07:19,339[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Book#101]
2024-07-11 15:07:19,339[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Book#101]
2024-07-11 15:07:19,339[yyyy-mm-dd HH-MM-SS] TRACE  LogicalConnection#afterTransaction
2024-07-11 15:07:19,340[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:07:19,340[yyyy-mm-dd HH-MM-SS] DEBUG  Initiating JDBC connection release from afterTransaction
2024-07-11 15:07:19,340[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Student#2401]
2024-07-11 15:07:19,340[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Student#2401]
2024-07-11 15:07:19,340[yyyy-mm-dd HH-MM-SS] TRACE  Object not resolved in any cache: [com.model.Student#2401]
2024-07-11 15:07:19,340[yyyy-mm-dd HH-MM-SS] TRACE  Fetching entity: [com.model.Student#2401]
2024-07-11 15:07:19,340[yyyy-mm-dd HH-MM-SS] DEBUG  select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=?
2024-07-11 15:07:19,341[yyyy-mm-dd HH-MM-SS] TRACE  Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=** NOT SPECIFIED **]
2024-07-11 15:07:19,341[yyyy-mm-dd HH-MM-SS] TRACE  Registering last query statement [com.mysql.cj.jdbc.ClientPreparedStatement: select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=** NOT SPECIFIED **]
2024-07-11 15:07:19,341[yyyy-mm-dd HH-MM-SS] TRACE  binding parameter [1] as [INTEGER] - [2401]
2024-07-11 15:07:19,341[yyyy-mm-dd HH-MM-SS] TRACE  Bound [2] parameters total
2024-07-11 15:07:19,355[yyyy-mm-dd HH-MM-SS] TRACE  Registering result set [com.mysql.cj.jdbc.result.ResultSetImpl@24b4d544]
2024-07-11 15:07:19,356[yyyy-mm-dd HH-MM-SS] TRACE  Processing result set
2024-07-11 15:07:19,356[yyyy-mm-dd HH-MM-SS] TRACE  Starting ResultSet row #0
2024-07-11 15:07:19,356[yyyy-mm-dd HH-MM-SS] DEBUG  On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-07-11 15:07:19,357[yyyy-mm-dd HH-MM-SS] TRACE  hydrating entity state
2024-07-11 15:07:19,357[yyyy-mm-dd HH-MM-SS] TRACE  Initializing object from ResultSet: [com.model.Student#2401]
2024-07-11 15:07:19,357[yyyy-mm-dd HH-MM-SS] TRACE  Hydrating entity: [com.model.Student#2401]
2024-07-11 15:07:19,358[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([branch2_9_0_] : [VARCHAR]) - [cse]
2024-07-11 15:07:19,359[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([dob3_9_0_] : [DATE]) - [2014-01-01]
2024-07-11 15:07:19,359[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([email4_9_0_] : [VARCHAR]) - [akash@gmail.com]
2024-07-11 15:07:19,360[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([name5_9_0_] : [VARCHAR]) - [Akash Missing]
2024-07-11 15:07:19,360[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([numbooks6_9_0_] : [INTEGER]) - [0]
2024-07-11 15:07:19,360[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([password7_9_0_] : [VARCHAR]) - [mypass]
2024-07-11 15:07:19,360[yyyy-mm-dd HH-MM-SS] TRACE  Done processing result set (1 rows)
2024-07-11 15:07:19,360[yyyy-mm-dd HH-MM-SS] TRACE  Total objects hydrated: 1
2024-07-11 15:07:19,360[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving attributes for [com.model.Student#2401]
2024-07-11 15:07:19,360[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `branch` : value = cse
2024-07-11 15:07:19,361[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`branch`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,361[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `dob` : value = 2014-01-01
2024-07-11 15:07:19,361[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`dob`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,361[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `email` : value = akash@gmail.com
2024-07-11 15:07:19,361[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`email`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,361[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `name` : value = Akash Missing
2024-07-11 15:07:19,361[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`name`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,361[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `numBooks` : value = 0
2024-07-11 15:07:19,361[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`numBooks`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,361[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `password` : value = mypass
2024-07-11 15:07:19,362[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`password`)  - enhanced for lazy-loading? - false
2024-07-11 15:07:19,362[yyyy-mm-dd HH-MM-SS] DEBUG  Done materializing entity [com.model.Student#2401]
2024-07-11 15:07:19,362[yyyy-mm-dd HH-MM-SS] TRACE  Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
2024-07-11 15:07:19,362[yyyy-mm-dd HH-MM-SS] TRACE  Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=2401]
2024-07-11 15:07:19,362[yyyy-mm-dd HH-MM-SS] TRACE  Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@24b4d544]
2024-07-11 15:07:19,362[yyyy-mm-dd HH-MM-SS] TRACE  Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=2401]
2024-07-11 15:07:19,363[yyyy-mm-dd HH-MM-SS] TRACE  Starting after statement execution processing [AFTER_TRANSACTION]
2024-07-11 15:07:19,363[yyyy-mm-dd HH-MM-SS] TRACE  Initializing non-lazy collections
2024-07-11 15:07:19,363[yyyy-mm-dd HH-MM-SS] DEBUG  Done entity load : com.model.Student#2401
2024-07-11 15:07:19,363[yyyy-mm-dd HH-MM-SS] TRACE  LogicalConnection#afterTransaction
2024-07-11 15:07:19,363[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:07:19,363[yyyy-mm-dd HH-MM-SS] DEBUG  Initiating JDBC connection release from afterTransaction
2024-07-11 15:07:19,363[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:07:19,366[yyyy-mm-dd HH-MM-SS] DEBUG  On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 15:07:19,366[yyyy-mm-dd HH-MM-SS] DEBUG  begin
2024-07-11 15:07:19,367[yyyy-mm-dd HH-MM-SS] TRACE  Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2024-07-11 15:07:19,367[yyyy-mm-dd HH-MM-SS] TRACE  Transaction begun via JDBC Connection.setAutoCommit(false)
2024-07-11 15:07:19,368[yyyy-mm-dd HH-MM-SS] TRACE  ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2024-07-11 15:07:19,368[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Book#114]
2024-07-11 15:07:19,368[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Book#114]
2024-07-11 15:07:19,369[yyyy-mm-dd HH-MM-SS] TRACE  Object not resolved in any cache: [com.model.Book#114]
2024-07-11 15:07:19,369[yyyy-mm-dd HH-MM-SS] TRACE  Fetching entity: [com.model.Book#114]
2024-07-11 15:07:19,369[yyyy-mm-dd HH-MM-SS] DEBUG  select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=?
2024-07-11 15:07:19,369[yyyy-mm-dd HH-MM-SS] TRACE  Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:07:19,369[yyyy-mm-dd HH-MM-SS] TRACE  Registering last query statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:07:19,369[yyyy-mm-dd HH-MM-SS] TRACE  binding parameter [1] as [INTEGER] - [114]
2024-07-11 15:07:19,369[yyyy-mm-dd HH-MM-SS] TRACE  Bound [2] parameters total
2024-07-11 15:07:19,371[yyyy-mm-dd HH-MM-SS] TRACE  Registering result set [com.mysql.cj.jdbc.result.ResultSetImpl@53a665ad]
2024-07-11 15:07:19,371[yyyy-mm-dd HH-MM-SS] TRACE  Processing result set
2024-07-11 15:07:19,371[yyyy-mm-dd HH-MM-SS] TRACE  Done processing result set (0 rows)
2024-07-11 15:07:19,371[yyyy-mm-dd HH-MM-SS] TRACE  Total objects hydrated: 0
2024-07-11 15:07:19,371[yyyy-mm-dd HH-MM-SS] TRACE  Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
2024-07-11 15:07:19,372[yyyy-mm-dd HH-MM-SS] TRACE  Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=114]
2024-07-11 15:07:19,372[yyyy-mm-dd HH-MM-SS] TRACE  Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@53a665ad]
2024-07-11 15:07:19,372[yyyy-mm-dd HH-MM-SS] TRACE  Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=114]
2024-07-11 15:07:19,372[yyyy-mm-dd HH-MM-SS] TRACE  Starting after statement execution processing [AFTER_TRANSACTION]
2024-07-11 15:07:19,372[yyyy-mm-dd HH-MM-SS] TRACE  Initializing non-lazy collections
2024-07-11 15:07:19,372[yyyy-mm-dd HH-MM-SS] DEBUG  Done entity load : com.model.Book#114
2024-07-11 15:07:19,376[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:428)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.SessionImpl.remove(SessionImpl.java:3369)
	at libraryHib.Main.main(Main.java:38)
2024-07-11 15:07:19,379[yyyy-mm-dd HH-MM-SS] TRACE  Closing session [09892121-9e6c-4b14-bad2-206068a1ea23]
2024-07-11 15:07:19,379[yyyy-mm-dd HH-MM-SS] TRACE  Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@57c47a9e]
2024-07-11 15:07:19,379[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:07:19,379[yyyy-mm-dd HH-MM-SS] TRACE  Closing logical connection
2024-07-11 15:07:19,379[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:07:19,380[yyyy-mm-dd HH-MM-SS] TRACE  Logical connection closed
2024-07-11 15:07:19,382[yyyy-mm-dd HH-MM-SS] DEBUG  HHH000031: Closing
2024-07-11 15:07:19,382[yyyy-mm-dd HH-MM-SS] TRACE  Cleaning QueryPlan Cache
2024-07-11 15:07:19,382[yyyy-mm-dd HH-MM-SS] TRACE  Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5af9926a] for TypeConfiguration
2024-07-11 15:07:19,382[yyyy-mm-dd HH-MM-SS] DEBUG  Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@52d6cd34] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5af9926a]
2024-07-11 15:07:19,384[yyyy-mm-dd HH-MM-SS] DEBUG  Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-07-11 15:07:19,384[yyyy-mm-dd HH-MM-SS] INFO   HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/lpu24]
2024-07-11 15:07:19,387[yyyy-mm-dd HH-MM-SS] DEBUG  Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-07-11 15:08:26,491[yyyy-mm-dd HH-MM-SS] DEBUG  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2024-07-11 15:08:26,494[yyyy-mm-dd HH-MM-SS] TRACE  Starting createEntityManagerFactory for persistenceUnitName libPU
2024-07-11 15:08:26,494[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : libPU
2024-07-11 15:08:26,538[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to parse persistence.xml file : file:/D:/dinesh/Dinesh/javaprogs/LPU2024/libHib2/target/classes/META-INF/persistence.xml
2024-07-11 15:08:26,635[yyyy-mm-dd HH-MM-SS] TRACE  JAR URL from URL Entry: file:/D:/dinesh/Dinesh/javaprogs/LPU2024/libHib2/target/classes/META-INF/persistence.xml >> file:/D:/dinesh/Dinesh/javaprogs/LPU2024/libHib2/target/classes/
2024-07-11 15:08:26,639[yyyy-mm-dd HH-MM-SS] TRACE  Persistence unit name from persistence.xml : libPU
2024-07-11 15:08:26,641[yyyy-mm-dd HH-MM-SS] DEBUG  Located and parsed 1 persistence units; checking each
2024-07-11 15:08:26,641[yyyy-mm-dd HH-MM-SS] DEBUG  Checking persistence-unit [name=libPU, explicit-provider=null] against incoming persistence unit name [libPU]
2024-07-11 15:08:26,642[yyyy-mm-dd HH-MM-SS] DEBUG  No PersistenceProvider explicitly requested, assuming Hibernate
2024-07-11 15:08:26,642[yyyy-mm-dd HH-MM-SS] TRACE  Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
2024-07-11 15:08:26,653[yyyy-mm-dd HH-MM-SS] DEBUG  PersistenceUnitInfo [
	name: libPU
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/dinesh/Dinesh/javaprogs/LPU2024/libHib2/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.model.Book]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: password
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/lpu24
		hibernate.dialect: org.hibernate.dialect.MySQL57Dialect
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2024-07-11 15:08:26,662[yyyy-mm-dd HH-MM-SS] DEBUG  Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2024-07-11 15:08:26,666[yyyy-mm-dd HH-MM-SS] DEBUG  Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2024-07-11 15:08:26,673[yyyy-mm-dd HH-MM-SS] DEBUG  Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-11 15:08:26,744[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
2024-07-11 15:08:26,744[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2024-07-11 15:08:26,744[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
2024-07-11 15:08:26,744[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2024-07-11 15:08:26,745[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2024-07-11 15:08:26,746[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
2024-07-11 15:08:26,748[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
2024-07-11 15:08:26,748[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
2024-07-11 15:08:26,749[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
2024-07-11 15:08:26,749[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
2024-07-11 15:08:26,750[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
2024-07-11 15:08:26,751[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
2024-07-11 15:08:26,751[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
2024-07-11 15:08:26,752[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
2024-07-11 15:08:26,753[yyyy-mm-dd HH-MM-SS] TRACE  Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
2024-07-11 15:08:26,790[yyyy-mm-dd HH-MM-SS] INFO   HHH000412: Hibernate ORM core version 5.6.15.Final
2024-07-11 15:08:26,791[yyyy-mm-dd HH-MM-SS] DEBUG  HHH000206: hibernate.properties not found
2024-07-11 15:08:26,980[yyyy-mm-dd HH-MM-SS] DEBUG  Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2024-07-11 15:08:26,987[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
2024-07-11 15:08:26,992[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.cache.spi.RegionFactory]
2024-07-11 15:08:26,993[yyyy-mm-dd HH-MM-SS] DEBUG  Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-11 15:08:26,994[yyyy-mm-dd HH-MM-SS] DEBUG  Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-07-11 15:08:27,012[yyyy-mm-dd HH-MM-SS] INFO   HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-11 15:08:27,210[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration boolean -> org.hibernate.type.BooleanType@470f1802
2024-07-11 15:08:27,210[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration boolean -> org.hibernate.type.BooleanType@470f1802
2024-07-11 15:08:27,210[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@470f1802
2024-07-11 15:08:27,210[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e92efc3
2024-07-11 15:08:27,211[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e4b8173
2024-07-11 15:08:27,212[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration yes_no -> org.hibernate.type.YesNoType@5bd03f44
2024-07-11 15:08:27,213[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration byte -> org.hibernate.type.ByteType@e056f20
2024-07-11 15:08:27,213[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration byte -> org.hibernate.type.ByteType@e056f20
2024-07-11 15:08:27,215[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e056f20
2024-07-11 15:08:27,216[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration character -> org.hibernate.type.CharacterType@2667f029
2024-07-11 15:08:27,216[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration char -> org.hibernate.type.CharacterType@2667f029
2024-07-11 15:08:27,217[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2667f029
2024-07-11 15:08:27,218[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration short -> org.hibernate.type.ShortType@64cd705f
2024-07-11 15:08:27,218[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration short -> org.hibernate.type.ShortType@64cd705f
2024-07-11 15:08:27,218[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64cd705f
2024-07-11 15:08:27,219[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration integer -> org.hibernate.type.IntegerType@7e0b85f9
2024-07-11 15:08:27,219[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration int -> org.hibernate.type.IntegerType@7e0b85f9
2024-07-11 15:08:27,219[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e0b85f9
2024-07-11 15:08:27,221[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration long -> org.hibernate.type.LongType@1700915
2024-07-11 15:08:27,221[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration long -> org.hibernate.type.LongType@1700915
2024-07-11 15:08:27,221[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Long -> org.hibernate.type.LongType@1700915
2024-07-11 15:08:27,222[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration float -> org.hibernate.type.FloatType@635eaaf1
2024-07-11 15:08:27,222[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration float -> org.hibernate.type.FloatType@635eaaf1
2024-07-11 15:08:27,223[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Float -> org.hibernate.type.FloatType@635eaaf1
2024-07-11 15:08:27,224[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration double -> org.hibernate.type.DoubleType@5e82df6a
2024-07-11 15:08:27,224[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration double -> org.hibernate.type.DoubleType@5e82df6a
2024-07-11 15:08:27,224[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5e82df6a
2024-07-11 15:08:27,226[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6ca8564a
2024-07-11 15:08:27,226[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6ca8564a
2024-07-11 15:08:27,228[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ac3c60d
2024-07-11 15:08:27,228[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ac3c60d
2024-07-11 15:08:27,229[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration string -> org.hibernate.type.StringType@3d74bf60
2024-07-11 15:08:27,229[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.String -> org.hibernate.type.StringType@3d74bf60
2024-07-11 15:08:27,230[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2145b572
2024-07-11 15:08:27,231[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3daa422a
2024-07-11 15:08:27,232[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration url -> org.hibernate.type.UrlType@3d51f06e
2024-07-11 15:08:27,232[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d51f06e
2024-07-11 15:08:27,233[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration Duration -> org.hibernate.type.DurationType@41fbdac4
2024-07-11 15:08:27,233[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.Duration -> org.hibernate.type.DurationType@41fbdac4
2024-07-11 15:08:27,248[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration Instant -> org.hibernate.type.InstantType@6eda5c9
2024-07-11 15:08:27,248[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6eda5c9
2024-07-11 15:08:27,248[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1afd44cb
2024-07-11 15:08:27,248[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1afd44cb
2024-07-11 15:08:27,250[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration LocalDate -> org.hibernate.type.LocalDateType@479d31f3
2024-07-11 15:08:27,250[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@479d31f3
2024-07-11 15:08:27,252[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@795cd85e
2024-07-11 15:08:27,252[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@795cd85e
2024-07-11 15:08:27,253[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@384ad17b
2024-07-11 15:08:27,253[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@384ad17b
2024-07-11 15:08:27,255[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4d9e68d0
2024-07-11 15:08:27,255[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4d9e68d0
2024-07-11 15:08:27,259[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@158da8e
2024-07-11 15:08:27,259[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@158da8e
2024-07-11 15:08:27,261[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration date -> org.hibernate.type.DateType@323b36e0
2024-07-11 15:08:27,261[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.Date -> org.hibernate.type.DateType@323b36e0
2024-07-11 15:08:27,262[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration time -> org.hibernate.type.TimeType@5ffead27
2024-07-11 15:08:27,262[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ffead27
2024-07-11 15:08:27,263[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration timestamp -> org.hibernate.type.TimestampType@4f6ee6e4
2024-07-11 15:08:27,264[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f6ee6e4
2024-07-11 15:08:27,264[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f6ee6e4
2024-07-11 15:08:27,266[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b927fb
2024-07-11 15:08:27,266[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration calendar -> org.hibernate.type.CalendarType@7b9a4292
2024-07-11 15:08:27,266[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b9a4292
2024-07-11 15:08:27,266[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b9a4292
2024-07-11 15:08:27,267[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6379eb
2024-07-11 15:08:27,269[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1aa7ecca
2024-07-11 15:08:27,269[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration locale -> org.hibernate.type.LocaleType@6572421
2024-07-11 15:08:27,270[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6572421
2024-07-11 15:08:27,270[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration currency -> org.hibernate.type.CurrencyType@37afeb11
2024-07-11 15:08:27,270[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@37afeb11
2024-07-11 15:08:27,271[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration timezone -> org.hibernate.type.TimeZoneType@6ae5aa72
2024-07-11 15:08:27,271[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6ae5aa72
2024-07-11 15:08:27,273[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration class -> org.hibernate.type.ClassType@595b007d
2024-07-11 15:08:27,273[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Class -> org.hibernate.type.ClassType@595b007d
2024-07-11 15:08:27,274[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@478190fc
2024-07-11 15:08:27,274[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@478190fc
2024-07-11 15:08:27,275[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35cabb2a
2024-07-11 15:08:27,277[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration binary -> org.hibernate.type.BinaryType@16d04d3d
2024-07-11 15:08:27,277[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration byte[] -> org.hibernate.type.BinaryType@16d04d3d
2024-07-11 15:08:27,277[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration [B -> org.hibernate.type.BinaryType@16d04d3d
2024-07-11 15:08:27,278[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@8f4ea7c
2024-07-11 15:08:27,278[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@8f4ea7c
2024-07-11 15:08:27,278[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@8f4ea7c
2024-07-11 15:08:27,279[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration row_version -> org.hibernate.type.RowVersionType@131774fe
2024-07-11 15:08:27,279[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration image -> org.hibernate.type.ImageType@7f3b84b8
2024-07-11 15:08:27,280[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration characters -> org.hibernate.type.CharArrayType@1623b78d
2024-07-11 15:08:27,280[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration char[] -> org.hibernate.type.CharArrayType@1623b78d
2024-07-11 15:08:27,281[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration [C -> org.hibernate.type.CharArrayType@1623b78d
2024-07-11 15:08:27,283[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@223191a6
2024-07-11 15:08:27,283[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@223191a6
2024-07-11 15:08:27,283[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@223191a6
2024-07-11 15:08:27,284[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration text -> org.hibernate.type.TextType@6069db50
2024-07-11 15:08:27,285[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration ntext -> org.hibernate.type.NTextType@59662a0b
2024-07-11 15:08:27,286[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration blob -> org.hibernate.type.BlobType@747ddf94
2024-07-11 15:08:27,286[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@747ddf94
2024-07-11 15:08:27,287[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@55183b20
2024-07-11 15:08:27,288[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration clob -> org.hibernate.type.ClobType@6aeb35e6
2024-07-11 15:08:27,288[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6aeb35e6
2024-07-11 15:08:27,290[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration nclob -> org.hibernate.type.NClobType@38d8f54a
2024-07-11 15:08:27,290[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@38d8f54a
2024-07-11 15:08:27,290[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2a3b5b47
2024-07-11 15:08:27,291[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@689604d9
2024-07-11 15:08:27,292[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration serializable -> org.hibernate.type.SerializableType@4562e04d
2024-07-11 15:08:27,295[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration object -> org.hibernate.type.ObjectType@4c583ecf
2024-07-11 15:08:27,295[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4c583ecf
2024-07-11 15:08:27,297[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7b2bbc3
2024-07-11 15:08:27,297[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a1153bc
2024-07-11 15:08:27,297[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1aafa419
2024-07-11 15:08:27,297[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@47eaca72
2024-07-11 15:08:27,297[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55141def
2024-07-11 15:08:27,297[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@55182842
2024-07-11 15:08:27,297[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3270d194
2024-07-11 15:08:27,297[yyyy-mm-dd HH-MM-SS] DEBUG  Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@235834f2
2024-07-11 15:08:27,305[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
2024-07-11 15:08:27,307[yyyy-mm-dd HH-MM-SS] DEBUG  Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3c41ed1d] into BootstrapContext; was [null]
2024-07-11 15:08:27,307[yyyy-mm-dd HH-MM-SS] DEBUG  Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@54d9d12d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@38425407]
2024-07-11 15:08:27,374[yyyy-mm-dd HH-MM-SS] DEBUG  Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2024-07-11 15:08:27,374[yyyy-mm-dd HH-MM-SS] DEBUG  ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2024-07-11 15:08:27,382[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
2024-07-11 15:08:27,384[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-11 15:08:27,384[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-11 15:08:27,385[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 15:08:27,385[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 15:08:27,385[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-11 15:08:27,387[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-11 15:08:27,387[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-11 15:08:27,388[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 15:08:27,389[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2024-07-11 15:08:27,389[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-11 15:08:27,389[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-11 15:08:27,390[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2024-07-11 15:08:27,390[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 15:08:27,390[yyyy-mm-dd HH-MM-SS] DEBUG  Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-11 15:08:27,391[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2024-07-11 15:08:27,391[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
2024-07-11 15:08:27,391[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
2024-07-11 15:08:27,394[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2024-07-11 15:08:27,396[yyyy-mm-dd HH-MM-SS] WARN   HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2024-07-11 15:08:27,408[yyyy-mm-dd HH-MM-SS] INFO   HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/lpu24]
2024-07-11 15:08:27,408[yyyy-mm-dd HH-MM-SS] INFO   HHH10001001: Connection properties: {user=root, password=password}
2024-07-11 15:08:27,408[yyyy-mm-dd HH-MM-SS] INFO   HHH10001003: Autocommit mode: false
2024-07-11 15:08:27,412[yyyy-mm-dd HH-MM-SS] DEBUG  Initializing Connection pool with 1 Connections
2024-07-11 15:08:27,412[yyyy-mm-dd HH-MM-SS] INFO   HHH000115: Hibernate connection pool size: 20 (min=1)
2024-07-11 15:08:28,076[yyyy-mm-dd HH-MM-SS] DEBUG  Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2024-07-11 15:08:28,076[yyyy-mm-dd HH-MM-SS] DEBUG  Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.29 (Revision: dd61577595edad45c398af508cf91ad26fc4144f)
      major : 8
      minor : 0
2024-07-11 15:08:28,076[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC version : 4.2
2024-07-11 15:08:28,089[yyyy-mm-dd HH-MM-SS] INFO   HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2024-07-11 15:08:28,102[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-11 15:08:28,103[yyyy-mm-dd HH-MM-SS] DEBUG  IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-11 15:08:28,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [lpu24]
2024-07-11 15:08:28,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,115[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
2024-07-11 15:08:28,117[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
2024-07-11 15:08:28,121[yyyy-mm-dd HH-MM-SS] DEBUG  Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24d09c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54c62d71]
2024-07-11 15:08:28,169[yyyy-mm-dd HH-MM-SS] DEBUG  Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-11 15:08:28,182[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Player
2024-07-11 15:08:28,193[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:08:28,195[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:08:28,198[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Player
2024-07-11 15:08:28,198[yyyy-mm-dd HH-MM-SS] TRACE  Import: Player -> com.model.Player
2024-07-11 15:08:28,198[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Player -> com.model.Player
2024-07-11 15:08:28,199[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Player]
2024-07-11 15:08:28,200[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Player]
2024-07-11 15:08:28,202[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Player on table Player
2024-07-11 15:08:28,220[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Player.playerid
2024-07-11 15:08:28,224[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerid]
2024-07-11 15:08:28,224[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerid]
2024-07-11 15:08:28,224[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=playerid, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,226[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Player] is safe
2024-07-11 15:08:28,228[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Player
2024-07-11 15:08:28,228[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property playerid with lazy=false
2024-07-11 15:08:28,229[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Player:playerid]
2024-07-11 15:08:28,231[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for playerid
2024-07-11 15:08:28,233[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerid]
2024-07-11 15:08:28,233[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerid]
2024-07-11 15:08:28,233[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerid]
2024-07-11 15:08:28,233[yyyy-mm-dd HH-MM-SS] DEBUG  Building property playerid
2024-07-11 15:08:28,238[yyyy-mm-dd HH-MM-SS] TRACE  Cascading playerid with null
2024-07-11 15:08:28,238[yyyy-mm-dd HH-MM-SS] TRACE  Add sequence generator with name: playerseq
2024-07-11 15:08:28,239[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(playerid)]), playerid, org.hibernate.id.enhanced.SequenceStyleGenerator, playerseq, ...)
2024-07-11 15:08:28,240[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on playerid
2024-07-11 15:08:28,241[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Player.kit
2024-07-11 15:08:28,242[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2024-07-11 15:08:28,242[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit]
2024-07-11 15:08:28,242[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit]
2024-07-11 15:08:28,242[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=kit, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,244[yyyy-mm-dd HH-MM-SS] TRACE  Fetching kit with JOIN
2024-07-11 15:08:28,245[yyyy-mm-dd HH-MM-SS] DEBUG  Building property kit
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] TRACE  Cascading kit with none
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Player.name
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Player:name]
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:08:28,246[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Player.team
2024-07-11 15:08:28,247[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:08:28,247[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='teamid', referencedColumn='', mappedBy=''}
2024-07-11 15:08:28,247[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [team]
2024-07-11 15:08:28,247[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [team]
2024-07-11 15:08:28,247[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=team, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,247[yyyy-mm-dd HH-MM-SS] DEBUG  Building property team
2024-07-11 15:08:28,247[yyyy-mm-dd HH-MM-SS] TRACE  Cascading team with none
2024-07-11 15:08:28,255[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Department
2024-07-11 15:08:28,256[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:08:28,256[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:08:28,256[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Department
2024-07-11 15:08:28,256[yyyy-mm-dd HH-MM-SS] TRACE  Import: Department -> com.model.Department
2024-07-11 15:08:28,256[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Department -> com.model.Department
2024-07-11 15:08:28,256[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Department]
2024-07-11 15:08:28,256[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Department]
2024-07-11 15:08:28,256[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Department on table Department
2024-07-11 15:08:28,259[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Department.depid
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=depid, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Department] is safe
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Department
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property depid with lazy=false
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Department:depid]
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for depid
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] DEBUG  Building property depid
2024-07-11 15:08:28,260[yyyy-mm-dd HH-MM-SS] TRACE  Cascading depid with null
2024-07-11 15:08:28,262[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(depid)]), depid, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2024-07-11 15:08:28,262[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on depid
2024-07-11 15:08:28,262[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Department.employees
2024-07-11 15:08:28,262[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
2024-07-11 15:08:28,262[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [employees]
2024-07-11 15:08:28,262[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [employees]
2024-07-11 15:08:28,262[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=employees, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,264[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=null, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,270[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [element]
2024-07-11 15:08:28,270[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [element]
2024-07-11 15:08:28,270[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=element, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,271[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [employees_KEY]
2024-07-11 15:08:28,271[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,271[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [employees_KEY]
2024-07-11 15:08:28,271[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
2024-07-11 15:08:28,271[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
2024-07-11 15:08:28,271[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
2024-07-11 15:08:28,272[yyyy-mm-dd HH-MM-SS] DEBUG  Collection role: com.model.Department.employees
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] DEBUG  Building property employees
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] TRACE  Cascading employees with none
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Department.establishdate
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [establishdate]
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [establishdate]
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=establishdate, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property establishdate with lazy=false
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Department:establishdate]
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for establishdate
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [establishdate]
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [establishdate]
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [establishdate]
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] DEBUG  Building property establishdate
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] TRACE  Cascading establishdate with null
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Department.name
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,273[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,274[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:08:28,274[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Department:name]
2024-07-11 15:08:28,274[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:08:28,274[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,274[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,274[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,274[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:08:28,274[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:08:28,275[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Project
2024-07-11 15:08:28,275[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:08:28,275[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:08:28,275[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Project
2024-07-11 15:08:28,275[yyyy-mm-dd HH-MM-SS] TRACE  Import: Project -> com.model.Project
2024-07-11 15:08:28,275[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Project -> com.model.Project
2024-07-11 15:08:28,275[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Project]
2024-07-11 15:08:28,275[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Project]
2024-07-11 15:08:28,275[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Project on table Project
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Project.projid
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Project), mappingColumn=projid, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Project] is safe
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Project
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property projid with lazy=false
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Project:projid]
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for projid
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] DEBUG  Building property projid
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] TRACE  Cascading projid with null
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(projid)]), projid, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on projid
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Project.amount
2024-07-11 15:08:28,276[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [amount]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [amount]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Project), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property amount with lazy=false
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Project:amount]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for amount
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [amount]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [amount]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [amount]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] DEBUG  Building property amount
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Cascading amount with null
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Project.title
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Project), mappingColumn=title, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property title with lazy=false
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Project:title]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for title
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] DEBUG  Building property title
2024-07-11 15:08:28,277[yyyy-mm-dd HH-MM-SS] TRACE  Cascading title with null
2024-07-11 15:08:28,278[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Book
2024-07-11 15:08:28,278[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:08:28,278[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:08:28,278[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Book
2024-07-11 15:08:28,278[yyyy-mm-dd HH-MM-SS] TRACE  Import: Book -> com.model.Book
2024-07-11 15:08:28,278[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Book -> com.model.Book
2024-07-11 15:08:28,278[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Book]
2024-07-11 15:08:28,278[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Book]
2024-07-11 15:08:28,278[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Book on table Book
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.bid
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [bid]
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [bid]
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=bid, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Book] is safe
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Book
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property bid with lazy=false
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:bid]
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for bid
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [bid]
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [bid]
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [bid]
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] DEBUG  Building property bid
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] TRACE  Cascading bid with null
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(bid)]), bid, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on bid
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.author
2024-07-11 15:08:28,281[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [author]
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [author]
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property author with lazy=false
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:author]
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for author
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [author]
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [author]
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [author]
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] DEBUG  Building property author
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] TRACE  Cascading author with null
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.bookTypeid
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [booktypeid]
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [booktypeid]
2024-07-11 15:08:28,282[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=booktypeid, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property bookTypeid with lazy=false
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:bookTypeid]
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for bookTypeid
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [booktypeid]
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  Building property bookTypeid
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Cascading bookTypeid with null
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.isid
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [isid]
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [isid]
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=isid, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property isid with lazy=false
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:isid]
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for isid
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [isid]
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [isid]
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [isid]
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  Building property isid
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Cascading isid with null
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.publisher
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [publisher]
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [publisher]
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=publisher, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property publisher with lazy=false
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:publisher]
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for publisher
2024-07-11 15:08:28,283[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [publisher]
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [publisher]
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [publisher]
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] DEBUG  Building property publisher
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Cascading publisher with null
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Book.title
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property title with lazy=false
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Book:title]
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for title
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [title]
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] DEBUG  Building property title
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Cascading title with null
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.PlayerKit
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name PlayerKit
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Import: PlayerKit -> com.model.PlayerKit
2024-07-11 15:08:28,284[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.PlayerKit -> com.model.PlayerKit
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerkit]
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerkit]
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.PlayerKit on table playerkit
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.PlayerKit.kitid
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(playerkit), mappingColumn=kitid, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.PlayerKit] is safe
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.PlayerKit
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property kitid with lazy=false
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.PlayerKit:kitid]
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for kitid
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] DEBUG  Building property kitid
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] TRACE  Cascading kitid with null
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(kitid)]), kitid, identity, , ...)
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on kitid
2024-07-11 15:08:28,285[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.PlayerKit.numBats
2024-07-11 15:08:28,287[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numbats]
2024-07-11 15:08:28,287[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numbats]
2024-07-11 15:08:28,287[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(playerkit), mappingColumn=numbats, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,287[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property numBats with lazy=false
2024-07-11 15:08:28,287[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.PlayerKit:numBats]
2024-07-11 15:08:28,287[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for numBats
2024-07-11 15:08:28,287[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numbats]
2024-07-11 15:08:28,287[yyyy-mm-dd HH-MM-SS] DEBUG  Building property numBats
2024-07-11 15:08:28,287[yyyy-mm-dd HH-MM-SS] TRACE  Cascading numBats with null
2024-07-11 15:08:28,287[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Team
2024-07-11 15:08:28,288[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:08:28,288[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:08:28,288[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Team
2024-07-11 15:08:28,288[yyyy-mm-dd HH-MM-SS] TRACE  Import: Team -> com.model.Team
2024-07-11 15:08:28,288[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Team -> com.model.Team
2024-07-11 15:08:28,288[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Team]
2024-07-11 15:08:28,288[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Team]
2024-07-11 15:08:28,288[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Team on table Team
2024-07-11 15:08:28,288[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Team.teamid
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Team), mappingColumn=teamid, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Team] is safe
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Team
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property teamid with lazy=false
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Team:teamid]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for teamid
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  Building property teamid
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Cascading teamid with null
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamid)]), teamid, assigned, , ...)
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on teamid
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Team.name
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Team), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Team:name]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,289[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Parking
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Parking
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] TRACE  Import: Parking -> com.model.Parking
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Parking -> com.model.Parking
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Parking]
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Parking]
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Parking on table Parking
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Parking.parkingId
2024-07-11 15:08:28,290[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Parking), mappingColumn=parkingid, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Parking] is safe
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Parking
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property parkingId with lazy=false
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Parking:parkingId]
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for parkingId
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  Building property parkingId
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Cascading parkingId with null
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(parkingid)]), parkingId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on parkingId
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Parking.floornum
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [floornum]
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [floornum]
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Parking), mappingColumn=floornum, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property floornum with lazy=false
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Parking:floornum]
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for floornum
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [floornum]
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [floornum]
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [floornum]
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  Building property floornum
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Cascading floornum with null
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Customer
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:08:28,291[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Customer
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] TRACE  Import: Customer -> com.model.Customer
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Customer -> com.model.Customer
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Customer]
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Customer]
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Customer on table Customer
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.custid
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [custid]
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [custid]
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=custid, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Customer] is safe
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Customer
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property custid with lazy=false
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:custid]
2024-07-11 15:08:28,292[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for custid
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [custid]
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [custid]
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [custid]
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] DEBUG  Building property custid
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Cascading custid with null
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(custid)]), custid, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on custid
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.address
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [address]
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [address]
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=address, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property address with lazy=false
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:address]
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for address
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [address]
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [address]
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [address]
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] DEBUG  Building property address
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Cascading address with null
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.dob
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:08:28,293[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=dob, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property dob with lazy=false
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:dob]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for dob
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  Building property dob
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Cascading dob with null
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.email
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=email, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property email with lazy=false
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:email]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for email
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  Building property email
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Cascading email with null
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.name
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:name]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:08:28,294[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Customer.phone
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [phone]
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [phone]
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Customer), mappingColumn=phone, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property phone with lazy=false
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Customer:phone]
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for phone
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [phone]
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [phone]
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [phone]
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] DEBUG  Building property phone
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] TRACE  Cascading phone with null
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Student
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Student
2024-07-11 15:08:28,295[yyyy-mm-dd HH-MM-SS] TRACE  Import: Student -> com.model.Student
2024-07-11 15:08:28,296[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Student -> com.model.Student
2024-07-11 15:08:28,296[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Student]
2024-07-11 15:08:28,296[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Student]
2024-07-11 15:08:28,296[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Student on table Student
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.roll
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [roll]
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [roll]
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=roll, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Student] is safe
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Student
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property roll with lazy=false
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:roll]
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for roll
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [roll]
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [roll]
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [roll]
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] DEBUG  Building property roll
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] TRACE  Cascading roll with null
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(roll)]), roll, assigned, , ...)
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on roll
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.branch
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [branch]
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [branch]
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=branch, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property branch with lazy=false
2024-07-11 15:08:28,297[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:branch]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for branch
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [branch]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [branch]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [branch]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  Building property branch
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Cascading branch with null
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.dob
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=dob, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property dob with lazy=false
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:dob]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for dob
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [dob]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  Building property dob
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Cascading dob with null
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.email
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=email, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property email with lazy=false
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:email]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for email
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [email]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  Building property email
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Cascading email with null
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.name
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:name]
2024-07-11 15:08:28,298[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.numBooks
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numBooks]
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numBooks]
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=numBooks, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property numBooks with lazy=false
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:numBooks]
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for numBooks
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numBooks]
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numBooks]
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [numBooks]
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] DEBUG  Building property numBooks
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Cascading numBooks with null
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Student.password
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [password]
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [password]
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=password, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property password with lazy=false
2024-07-11 15:08:28,299[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Student:password]
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for password
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [password]
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [password]
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [password]
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] DEBUG  Building property password
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] TRACE  Cascading password with null
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] DEBUG  Binding entity from annotated class: com.model.Employee
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [DTYPE]
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] DEBUG  Import with entity name Employee
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] TRACE  Import: Employee -> com.model.Employee
2024-07-11 15:08:28,300[yyyy-mm-dd HH-MM-SS] TRACE  Import: com.model.Employee -> com.model.Employee
2024-07-11 15:08:28,301[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee]
2024-07-11 15:08:28,301[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee]
2024-07-11 15:08:28,301[yyyy-mm-dd HH-MM-SS] DEBUG  Bind entity com.model.Employee on table Employee
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Employee.empid
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=empid, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Employee] is safe
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Employee
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property empid with lazy=false
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Employee:empid]
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for empid
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:08:28,303[yyyy-mm-dd HH-MM-SS] DEBUG  Building property empid
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Cascading empid with null
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(empid)]), empid, assigned, , ...)
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Bind @Id on empid
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Employee.department
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='depid', referencedColumn='', mappedBy=''}
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [department]
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [department]
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=department, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  Building property department
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Cascading department with none
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Employee.name
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=name, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  MetadataSourceProcessor property name with lazy=false
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  Attempting to locate auto-apply AttributeConverter for property [com.model.Employee:name]
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  building SimpleValue for name
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [name]
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  Building property name
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Cascading name with null
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Employee.parking
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking]
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking]
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=parking, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Fetching parking with JOIN
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  Building property parking
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Cascading parking with none
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] TRACE  Processing annotations of com.model.Employee.projects
2024-07-11 15:08:28,304[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [element]
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [element]
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_KEY]
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=projects_KEY, insertable=true, updatable=true, unique=false}
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_KEY]
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='projects_KEY', referencedColumn='null', mappedBy='null'}
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] DEBUG  Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] DEBUG  Collection role: com.model.Employee.projects
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] DEBUG  Building property projects
2024-07-11 15:08:28,305[yyyy-mm-dd HH-MM-SS] TRACE  Cascading projects with none
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for playerid
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for depid
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for establishdate
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for projid
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for amount
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for title
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for bid
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for author
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for bookTypeid
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for isid
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for publisher
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for title
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for kitid
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for numBats
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for teamid
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for parkingId
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for floornum
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for custid
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for address
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for dob
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for email
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for phone
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for roll
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for branch
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for dob
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for email
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for numBooks
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for password
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for empid
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] DEBUG  Starting fillSimpleValue for name
2024-07-11 15:08:28,307[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:08:28,308[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerkit]
2024-07-11 15:08:28,308[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:08:28,308[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:08:28,308[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:08:28,308[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kitid]
2024-07-11 15:08:28,308[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:08:28,308[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Parking]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parkingid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:08:28,311[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [playerid] to be non-null as it is part of the primary key for table [player]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [depid] to be non-null as it is part of the primary key for table [department]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [projid] to be non-null as it is part of the primary key for table [project]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [bid] to be non-null as it is part of the primary key for table [book]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [kitid] to be non-null as it is part of the primary key for table [playerkit]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [teamid] to be non-null as it is part of the primary key for table [team]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [parkingid] to be non-null as it is part of the primary key for table [parking]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [custid] to be non-null as it is part of the primary key for table [customer]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [roll] to be non-null as it is part of the primary key for table [student]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Forcing column [empid] to be non-null as it is part of the primary key for table [employee]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Second pass for collection: com.model.Employee.projects
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] DEBUG  Binding as ManyToMany: com.model.Employee.projects
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee]
2024-07-11 15:08:28,312[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_Project]
2024-07-11 15:08:28,315[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_Project]
2024-07-11 15:08:28,315[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_Project]
2024-07-11 15:08:28,315[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [empid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Project]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:08:28,316[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:08:28,317[yyyy-mm-dd HH-MM-SS] DEBUG  Mapped collection key: Employee_empid, element: projects_projid
2024-07-11 15:08:28,318[yyyy-mm-dd HH-MM-SS] DEBUG  Second pass for collection: com.model.Department.employees
2024-07-11 15:08:28,318[yyyy-mm-dd HH-MM-SS] DEBUG  Binding a OneToMany: com.model.Department.employees through a foreign key
2024-07-11 15:08:28,318[yyyy-mm-dd HH-MM-SS] DEBUG  Mapping collection: com.model.Department.employees -> Employee
2024-07-11 15:08:28,318[yyyy-mm-dd HH-MM-SS] DEBUG  Retrieving property com.model.Employee.department
2024-07-11 15:08:28,318[yyyy-mm-dd HH-MM-SS] DEBUG  Mapped collection key: depid, one-to-many: com.model.Employee
2024-07-11 15:08:28,318[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Department
2024-07-11 15:08:28,319[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FKl21kmltdswtwc20m9mswk0277]
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Parking
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FK7xxsqiwpk3gvswne2ot9bqons]
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Project
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FKln3lnuhgjegemxn3f47xn8f81]
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Employee
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FKf1arixt13d4nd7ldbboh84mtm]
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.PlayerKit
2024-07-11 15:08:28,320[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:08:28,321[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FKjibiec3sb0hmpjsskosq70q74]
2024-07-11 15:08:28,321[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Team
2024-07-11 15:08:28,321[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:08:28,321[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [FKo9195nqev57km5n1vt8q51ded]
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Department
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [depid]
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Parking
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [parking_parkingid]
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Project
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [projects_projid]
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Employee
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [Employee_empid]
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.PlayerKit
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [kit_kitid]
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving reference to class: com.model.Team
2024-07-11 15:08:28,322[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [teamid]
2024-07-11 15:08:28,324[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,324[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,324[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [playerseq]
2024-07-11 15:08:28,327[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:08:28,331[yyyy-mm-dd HH-MM-SS] TRACE  Creating pooled optimizer with [incrementSize=50; returnClass=java.lang.Integer]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [hibernate_sequence]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [hibernate_sequence]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [hibernate_sequence]
2024-07-11 15:08:28,334[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:08:28,335[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,335[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,335[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [hibernate_sequence]
2024-07-11 15:08:28,335[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:08:28,335[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,335[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,335[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [hibernate_sequence]
2024-07-11 15:08:28,335[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [next_val]
2024-07-11 15:08:28,337[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
2024-07-11 15:08:28,352[yyyy-mm-dd HH-MM-SS] TRACE  Interpreting BatchFetchStyle from setting : null
2024-07-11 15:08:28,354[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
2024-07-11 15:08:28,360[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
2024-07-11 15:08:28,377[yyyy-mm-dd HH-MM-SS] DEBUG  Building session factory
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  SessionFactory name : null
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Automatic flush during beforeCompletion(): enabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Automatic session close at end of transaction: disabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Statistics: disabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Deleted entity synthetic identifier rollback: disabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Default entity-mode: pojo
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Allow initialization of lazy state outside session : disabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Using BatchFetchStyle : LEGACY
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Default batch fetch size: -1
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Maximum outer join fetch depth: 2
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Default null ordering: NONE
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Order SQL updates by primary key: disabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Order SQL inserts for batching: disabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  multi-tenancy strategy : NONE
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  JTA Track by Thread: enabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Query language substitutions: {}
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Named query checking : enabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Second-level cache: disabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Second-level query cache: disabled
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Second-level query cache factory: null
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Second-level cache region prefix: null
2024-07-11 15:08:28,378[yyyy-mm-dd HH-MM-SS] DEBUG  Optimize second-level cache for minimal puts: disabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  Structured second-level cache entries: disabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  Second-level cache direct-reference entries: disabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  Automatic eviction of collection cache: disabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC batch size: 15
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC batch updates for versioned data: enabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  Scrollable result sets: enabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  Wrap result sets: disabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC3 getGeneratedKeys(): enabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC result set fetch size: null
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  Connection release mode: AFTER_TRANSACTION
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  Generate SQL with comments: disabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  JPA compliance - query : disabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  JPA compliance - closed-handling : disabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  JPA compliance - lists : disabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] DEBUG  JPA compliance - transactions : disabled
2024-07-11 15:08:28,379[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
2024-07-11 15:08:28,428[yyyy-mm-dd HH-MM-SS] DEBUG  EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 15:08:28,429[yyyy-mm-dd HH-MM-SS] DEBUG  EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 15:08:28,429[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:28,430[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
2024-07-11 15:08:28,442[yyyy-mm-dd HH-MM-SS] DEBUG  Session factory constructed with filter configurations : {}
2024-07-11 15:08:28,442[yyyy-mm-dd HH-MM-SS] DEBUG  Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL57Dialect, java.class.path=D:\dinesh\Dinesh\javaprogs\LPU2024\libHib2\target\classes;C:\Users\Dinesh\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\Dinesh\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\Dinesh\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\Dinesh\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Dinesh\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Dinesh\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\Dinesh\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Dinesh\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Dinesh\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Dinesh\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Dinesh\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Dinesh\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Dinesh\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Dinesh\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Dinesh\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Dinesh\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Dinesh\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Dinesh\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Dinesh\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/lpu24, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, jakarta.persistence.jdbc.password=****, user.country=GB, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_301\jre\bin, sun.java.command=libraryHib.Main, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\Dinesh, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_301\jre, file.separator=\, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=libPU, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=Dinesh, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/lpu24, file.encoding=Cp1252, hibernate.ejb.persistenceUnitName=libPU, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Dinesh\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=D:\dinesh\Dinesh\javaprogs\LPU2024\libHib2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/lpu24, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@f31c0c6, java.library.path=C:\Program Files\Java\jdk1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;E:/Softwares/Eclipse/eclipse-jee-2021-09-R-win32-x86_64/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.2.v20210721-1149/jre/bin/server;E:/Softwares/Eclipse/eclipse-jee-2021-09-R-win32-x86_64/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.2.v20210721-1149/jre/bin;C:\Program Files\Java\jdk-11.0.12\bin;C:\Program Files\Java\jdk1.8.0_301\bin;E:\Softwares\Oracle\Oracle21c\app\21c\dbhomeXE\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Windows\System32\cmd.exe;E:\Softwares\Notepad++\npp.8.1.9.portable.x64;E:\Softwares\Maven\apache-maven-3.8.3\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files\PuTTY\;C:\Program Files\MongoDB\Server\5.0\bin;E:\Softwares\NodeJS\node-v20.10.0-win-x64;C:\Program Files\Amazon\AWSCLIV2\;E:\Softwares\Eclipse\eclipse-jee-2021-09-R-win32-x86_64\eclipse\;E:\Softwares\confluent\confluent-community-7.2.0\confluent-7.2.0\bin\windows;F:\Kubernetes\Minikube;C:\Program Files\Docker\cli-plugins;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;E:\Softwares\GIT\PortableGit\bin;C:\WINDOWS\system32\config\systemprofile\.krew\bin;C:\ProgramData\chocolatey\bin;E:\Softwares\intellij\IntelliJ IDEA Community Edition 2022.1.3\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;E:\Softwares\CODE-BLOCKS\installation\MinGW\bin;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Windows\Microsoft.NET\Framework\v4.0.30319;E:\Softwares\VSCode\VSCode-win32-x64-1.79.2;E:\Softwares\Oracle\oracle sqldeveloper\sqldeveloper-22.2.0.173.2018-x64\sqldeveloper;E:\Softwares\Postgres\PostgresHome\bin;F:\Program Files\VisualSVN Server\bin;C:\Windows\System32\cmd.exe;F:\Program Files\TortoiseSVN\bin;C:\Windows\System32\cmd.exe;E:\Softwares\Ant\apache-ant-1.10.14\bin;C:\Program Files\GitHub CLI\;C:\Users\Dinesh\AppData\Local\Microsoft\WindowsApps;C:\Users\Dinesh\AppData\Local\Programs\Git\cmd;C:\Program Files\Google\Chrome\Application\;E:\Softwares\Kafka\kafka_2.12-3.0.0\bin\windows;C:\Users\Dinesh\AppData\Local\GitHubDesktop\bin;;E:\Softwares\Eclipse\eclipse-jee-2019-09-R-win32-x86_64\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0}
2024-07-11 15:08:28,448[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
2024-07-11 15:08:28,455[yyyy-mm-dd HH-MM-SS] DEBUG  Skipping JACC integration as it was not enabled
2024-07-11 15:08:28,458[yyyy-mm-dd HH-MM-SS] DEBUG  Instantiated session factory
2024-07-11 15:08:28,458[yyyy-mm-dd HH-MM-SS] DEBUG  Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24d09c1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6b9267b]
2024-07-11 15:08:28,465[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
2024-07-11 15:08:28,468[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
2024-07-11 15:08:28,502[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
2024-07-11 15:08:28,518[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#kit` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,524[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#kit` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,525[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,525[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,525[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Player] is safe
2024-07-11 15:08:28,525[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Player
2024-07-11 15:08:28,529[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.bytecode.spi.ProxyFactoryFactory]
2024-07-11 15:08:28,729[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#kit` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,729[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,730[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#kit` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,730[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,733[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,733[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.kitid], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.teamid], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit], existing type = [org.hibernate.type.ManyToOneType(com.model.PlayerKit)], incoming type = [org.hibernate.type.ManyToOneType(com.model.PlayerKit)]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.kitid], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [kit.kitid], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(com.model.Team)], incoming type = [org.hibernate.type.ManyToOneType(com.model.Team)]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.teamid], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,734[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [team.teamid], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,740[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Department] is safe
2024-07-11 15:08:28,740[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Department
2024-07-11 15:08:28,757[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [employees], existing type = [org.hibernate.type.BagType(com.model.Department.employees)], incoming type = [org.hibernate.type.BagType(com.model.Department.employees)]
2024-07-11 15:08:28,757[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [establishdate], existing type = [org.hibernate.type.DateType@323b36e0], incoming type = [org.hibernate.type.DateType@323b36e0]
2024-07-11 15:08:28,757[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,758[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Project] is safe
2024-07-11 15:08:28,758[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Project
2024-07-11 15:08:28,773[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [amount], existing type = [org.hibernate.type.DoubleType@5e82df6a], incoming type = [org.hibernate.type.DoubleType@5e82df6a]
2024-07-11 15:08:28,773[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,774[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Book] is safe
2024-07-11 15:08:28,774[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Book
2024-07-11 15:08:28,792[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [author], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,792[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [bookTypeid], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,792[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [isid], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,792[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [publisher], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,792[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,792[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.PlayerKit] is safe
2024-07-11 15:08:28,792[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.PlayerKit
2024-07-11 15:08:28,803[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [numBats], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,803[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Team] is safe
2024-07-11 15:08:28,803[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Team
2024-07-11 15:08:28,811[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,811[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Parking] is safe
2024-07-11 15:08:28,811[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Parking
2024-07-11 15:08:28,824[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [floornum], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,825[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Customer] is safe
2024-07-11 15:08:28,825[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Customer
2024-07-11 15:08:28,831[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [address], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,831[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [dob], existing type = [org.hibernate.type.DateType@323b36e0], incoming type = [org.hibernate.type.DateType@323b36e0]
2024-07-11 15:08:28,831[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,831[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,831[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [phone], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,833[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Student] is safe
2024-07-11 15:08:28,833[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Student
2024-07-11 15:08:28,849[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [branch], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,849[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [dob], existing type = [org.hibernate.type.DateType@323b36e0], incoming type = [org.hibernate.type.DateType@323b36e0]
2024-07-11 15:08:28,849[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,849[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,850[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [numBooks], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,850[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [password], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,850[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,850[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,850[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#parking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,850[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#parking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,850[yyyy-mm-dd HH-MM-SS] DEBUG  Not known whether passed class name [com.model.Employee] is safe
2024-07-11 15:08:28,850[yyyy-mm-dd HH-MM-SS] DEBUG  No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.model.Employee
2024-07-11 15:08:28,864[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,864[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#parking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,864[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] DEBUG  To-one property `com.model.Employee#parking` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.depid], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.parkingId], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department], existing type = [org.hibernate.type.ManyToOneType(com.model.Department)], incoming type = [org.hibernate.type.ManyToOneType(com.model.Department)]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.depid], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [department.depid], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@3d74bf60], incoming type = [org.hibernate.type.StringType@3d74bf60]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking], existing type = [org.hibernate.type.ManyToOneType(com.model.Parking)], incoming type = [org.hibernate.type.ManyToOneType(com.model.Parking)]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.id], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.parkingId], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [parking.parkingId], existing type = [org.hibernate.type.IntegerType@7e0b85f9], incoming type = [org.hibernate.type.IntegerType@7e0b85f9]
2024-07-11 15:08:28,865[yyyy-mm-dd HH-MM-SS] TRACE  Skipping duplicate registration of path [projects], existing type = [org.hibernate.type.BagType(com.model.Employee.projects)], incoming type = [org.hibernate.type.BagType(com.model.Employee.projects)]
2024-07-11 15:08:28,876[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for collection: com.model.Employee.projects
2024-07-11 15:08:28,876[yyyy-mm-dd HH-MM-SS] DEBUG   Row insert: insert into Employee_Project (Employee_empid, projects_projid) values (?, ?)
2024-07-11 15:08:28,876[yyyy-mm-dd HH-MM-SS] DEBUG   Row update: update Employee_Project set projects_projid=? where Employee_empid=? and projects_projid=?
2024-07-11 15:08:28,876[yyyy-mm-dd HH-MM-SS] DEBUG   Row delete: delete from Employee_Project where Employee_empid=? and projects_projid=?
2024-07-11 15:08:28,876[yyyy-mm-dd HH-MM-SS] DEBUG   One-shot delete: delete from Employee_Project where Employee_empid=?
2024-07-11 15:08:28,878[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for collection: com.model.Department.employees
2024-07-11 15:08:28,878[yyyy-mm-dd HH-MM-SS] DEBUG   Row insert: update Employee set depid=? where empid=?
2024-07-11 15:08:28,878[yyyy-mm-dd HH-MM-SS] DEBUG   Row update: update Employee set  where empid=?
2024-07-11 15:08:28,878[yyyy-mm-dd HH-MM-SS] DEBUG   Row delete: update Employee set depid=null where depid=? and empid=?
2024-07-11 15:08:28,878[yyyy-mm-dd HH-MM-SS] DEBUG   One-shot delete: update Employee set depid=null where depid=?
2024-07-11 15:08:28,883[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Player
2024-07-11 15:08:28,883[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select playerid from Player where playerid =?
2024-07-11 15:08:28,883[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select player_.playerid, player_.kit_kitid as kit_kiti3_6_, player_.name as name2_6_, player_.teamid as teamid4_6_ from Player player_ where player_.playerid=?
2024-07-11 15:08:28,883[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Player (kit_kitid, name, teamid, playerid) values (?, ?, ?, ?)
2024-07-11 15:08:28,883[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Player set kit_kitid=?, name=?, teamid=? where playerid=?
2024-07-11 15:08:28,883[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Player where playerid=?
2024-07-11 15:08:28,903[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Player
2024-07-11 15:08:28,907[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e34384c]
2024-07-11 15:08:28,907[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57d0fc89
2024-07-11 15:08:28,907[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Player, columns={playerid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57d0fc89
2024-07-11 15:08:28,908[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Player
2024-07-11 15:08:28,908[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : kit
2024-07-11 15:08:28,909[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=kit, type=com.model.PlayerKit [non-identifier,association])
2024-07-11 15:08:28,912[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29c2c826]
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3b36e000
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  .... Registering AssociationKey : AssociationKey(table=Player, columns={kit_kitid}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3b36e000
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting entity identifier : com.model.PlayerKit
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : kit.numBats
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=numBats, type=integer [non-identifier])
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=numBats, type=integer [non-identifier])
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3b36e000
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=kit, type=com.model.PlayerKit [non-identifier,association])
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : team
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=team, type=com.model.Team [non-identifier,association])
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@333cb916]
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@629ae7e
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  .... Registering AssociationKey : AssociationKey(table=Player, columns={teamid}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@629ae7e
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting entity identifier : com.model.Team
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : team.name
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@629ae7e
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=team, type=com.model.Team [non-identifier,association])
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57d0fc89
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Player
2024-07-11 15:08:28,914[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,934[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,942[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Player)
    - Returns
       - EntityReturnImpl(entity=com.model.Player, querySpaceUid=<gen:0>, path=com.model.Player)
          - EntityAttributeFetchImpl(entity=com.model.PlayerKit, querySpaceUid=<gen:1>, path=com.model.Player.kit)
          - EntityAttributeFetchImpl(entity=com.model.Team, querySpaceUid=<gen:2>, path=com.model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {playerid1_6_0_}
          - JOIN (JoinDefinedByMetadata(kit)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.model.PlayerKit)
                - SQL table alias mapping - playerkit1_
                - alias suffix - 1_
                - suffixed key columns - {kitid1_7_1_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.model.Team)
                - SQL table alias mapping - team2_
                - alias suffix - 2_
                - suffixed key columns - {teamid1_10_2_}

2024-07-11 15:08:28,944[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Player [NONE]: select player0_.playerid as playerid1_6_0_, player0_.kit_kitid as kit_kiti3_6_0_, player0_.name as name2_6_0_, player0_.teamid as teamid4_6_0_, playerkit1_.kitid as kitid1_7_1_, playerkit1_.numbats as numbats2_7_1_, team2_.teamid as teamid1_10_2_, team2_.name as name2_10_2_ from Player player0_ left outer join playerkit playerkit1_ on player0_.kit_kitid=playerkit1_.kitid left outer join Team team2_ on player0_.teamid=team2_.teamid where player0_.playerid=?
2024-07-11 15:08:28,944[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Department
2024-07-11 15:08:28,944[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select depid from Department where depid =?
2024-07-11 15:08:28,944[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select department_.depid, department_.establishdate as establis2_2_, department_.name as name3_2_ from Department department_ where department_.depid=?
2024-07-11 15:08:28,944[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Department (establishdate, name, depid) values (?, ?, ?)
2024-07-11 15:08:28,944[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Department set establishdate=?, name=? where depid=?
2024-07-11 15:08:28,944[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Department where depid=?
2024-07-11 15:08:28,945[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Department
2024-07-11 15:08:28,945[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25b5c5e3]
2024-07-11 15:08:28,945[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5177e388
2024-07-11 15:08:28,945[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Department, columns={depid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5177e388
2024-07-11 15:08:28,945[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Department
2024-07-11 15:08:28,945[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : employees
2024-07-11 15:08:28,945[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=employees, type=java.util.Collection(com.model.Department.employees) [non-identifier,association])
2024-07-11 15:08:28,945[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d37f1c]
2024-07-11 15:08:28,947[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b29d52b]
2024-07-11 15:08:28,947[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=employees, type=java.util.Collection(com.model.Department.employees) [non-identifier,association])
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : establishdate
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=establishdate, type=date [non-identifier])
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=establishdate, type=date [non-identifier])
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5177e388
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Department
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Department)
    - Returns
       - EntityReturnImpl(entity=com.model.Department, querySpaceUid=<gen:0>, path=com.model.Department)
          - CollectionAttributeFetchImpl(collection=com.model.Department.employees, querySpaceUid=<gen:1>, path=com.model.Department.employees)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.model.Employee, querySpaceUid=<gen:2>, path=com.model.Department.employees.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {depid1_2_0_}

2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Department [NONE]: select department0_.depid as depid1_2_0_, department0_.establishdate as establis2_2_0_, department0_.name as name3_2_0_ from Department department0_ where department0_.depid=?
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Project
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select projid from Project where projid =?
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select project_.projid, project_.amount as amount2_8_, project_.title as title3_8_ from Project project_ where project_.projid=?
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Project (amount, title, projid) values (?, ?, ?)
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Project set amount=?, title=? where projid=?
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Project where projid=?
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Project
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7e336b]
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3a2b2322
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Project, columns={projid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3a2b2322
2024-07-11 15:08:28,948[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Project
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : amount
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=amount, type=double [non-identifier])
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=amount, type=double [non-identifier])
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : title
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=title, type=string [non-identifier])
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3a2b2322
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Project
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Project)
    - Returns
       - EntityReturnImpl(entity=com.model.Project, querySpaceUid=<gen:0>, path=com.model.Project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {projid1_8_0_}

2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Project [NONE]: select project0_.projid as projid1_8_0_, project0_.amount as amount2_8_0_, project0_.title as title3_8_0_ from Project project0_ where project0_.projid=?
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Book
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select bid from Book where bid =?
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select book_.bid, book_.author as author2_0_, book_.booktypeid as booktype3_0_, book_.isid as isid4_0_, book_.publisher as publishe5_0_, book_.title as title6_0_ from Book book_ where book_.bid=?
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Book (author, booktypeid, isid, publisher, title, bid) values (?, ?, ?, ?, ?, ?)
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Book set author=?, booktypeid=?, isid=?, publisher=?, title=? where bid=?
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Book where bid=?
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Book
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e1218b4]
2024-07-11 15:08:28,949[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12958360
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Book, columns={bid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12958360
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Book
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : author
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=author, type=string [non-identifier])
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=author, type=string [non-identifier])
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : bookTypeid
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=bookTypeid, type=integer [non-identifier])
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=bookTypeid, type=integer [non-identifier])
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : isid
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=isid, type=integer [non-identifier])
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=isid, type=integer [non-identifier])
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : publisher
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=publisher, type=string [non-identifier])
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=publisher, type=string [non-identifier])
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : title
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=title, type=string [non-identifier])
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12958360
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Book
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Book)
    - Returns
       - EntityReturnImpl(entity=com.model.Book, querySpaceUid=<gen:0>, path=com.model.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {bid1_0_0_}

2024-07-11 15:08:28,950[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Book [NONE]: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=?
2024-07-11 15:08:28,953[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.PlayerKit
2024-07-11 15:08:28,953[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select kitid from playerkit where kitid =?
2024-07-11 15:08:28,953[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select playerkit_.kitid, playerkit_.numbats as numbats2_7_ from playerkit playerkit_ where playerkit_.kitid=?
2024-07-11 15:08:28,953[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into playerkit (numbats, kitid) values (?, ?)
2024-07-11 15:08:28,953[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update playerkit set numbats=? where kitid=?
2024-07-11 15:08:28,953[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from playerkit where kitid=?
2024-07-11 15:08:28,953[yyyy-mm-dd HH-MM-SS] DEBUG   Identity insert: insert into playerkit (numbats) values (?)
2024-07-11 15:08:28,953[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.PlayerKit
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46678e49]
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@748e9b20
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=playerkit, columns={kitid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@748e9b20
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.PlayerKit
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : numBats
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=numBats, type=integer [non-identifier])
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=numBats, type=integer [non-identifier])
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@748e9b20
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.PlayerKit
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.PlayerKit)
    - Returns
       - EntityReturnImpl(entity=com.model.PlayerKit, querySpaceUid=<gen:0>, path=com.model.PlayerKit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.PlayerKit)
          - SQL table alias mapping - playerkit0_
          - alias suffix - 0_
          - suffixed key columns - {kitid1_7_0_}

2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.PlayerKit [NONE]: select playerkit0_.kitid as kitid1_7_0_, playerkit0_.numbats as numbats2_7_0_ from playerkit playerkit0_ where playerkit0_.kitid=?
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Team
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select teamid from Team where teamid =?
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select team_.teamid, team_.name as name2_10_ from Team team_ where team_.teamid=?
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Team (name, teamid) values (?, ?)
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Team set name=? where teamid=?
2024-07-11 15:08:28,954[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Team where teamid=?
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Team
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2063c53e]
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2a9bc08f
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Team, columns={teamid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2a9bc08f
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Team
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2a9bc08f
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Team
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Team)
    - Returns
       - EntityReturnImpl(entity=com.model.Team, querySpaceUid=<gen:0>, path=com.model.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamid1_10_0_}

2024-07-11 15:08:28,955[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Team [NONE]: select team0_.teamid as teamid1_10_0_, team0_.name as name2_10_0_ from Team team0_ where team0_.teamid=?
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Parking
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select parkingid from Parking where parkingid =?
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select parking_.parkingid, parking_.floornum as floornum2_5_ from Parking parking_ where parking_.parkingid=?
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Parking (floornum, parkingid) values (?, ?)
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Parking set floornum=? where parkingid=?
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Parking where parkingid=?
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Parking
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50f40653]
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@50a3d0f6
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Parking, columns={parkingid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@50a3d0f6
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Parking
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : floornum
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@50a3d0f6
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Parking
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Parking)
    - Returns
       - EntityReturnImpl(entity=com.model.Parking, querySpaceUid=<gen:0>, path=com.model.Parking)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Parking)
          - SQL table alias mapping - parking0_
          - alias suffix - 0_
          - suffixed key columns - {parkingi1_5_0_}

2024-07-11 15:08:28,956[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Parking [NONE]: select parking0_.parkingid as parkingi1_5_0_, parking0_.floornum as floornum2_5_0_ from Parking parking0_ where parking0_.parkingid=?
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Customer
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select custid from Customer where custid =?
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select customer_.custid, customer_.address as address2_1_, customer_.dob as dob3_1_, customer_.email as email4_1_, customer_.name as name5_1_, customer_.phone as phone6_1_ from Customer customer_ where customer_.custid=?
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Customer (address, dob, email, name, phone, custid) values (?, ?, ?, ?, ?, ?)
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Customer set address=?, dob=?, email=?, name=?, phone=? where custid=?
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Customer where custid=?
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Customer
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e57b5e9]
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1abc9f14
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Customer, columns={custid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1abc9f14
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Customer
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : address
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=address, type=string [non-identifier])
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : dob
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=dob, type=date [non-identifier])
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=dob, type=date [non-identifier])
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : email
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=email, type=string [non-identifier])
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : phone
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=phone, type=string [non-identifier])
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=phone, type=string [non-identifier])
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1abc9f14
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Customer
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,957[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Customer)
    - Returns
       - EntityReturnImpl(entity=com.model.Customer, querySpaceUid=<gen:0>, path=com.model.Customer)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {custid1_1_0_}

2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Customer [NONE]: select customer0_.custid as custid1_1_0_, customer0_.address as address2_1_0_, customer0_.dob as dob3_1_0_, customer0_.email as email4_1_0_, customer0_.name as name5_1_0_, customer0_.phone as phone6_1_0_ from Customer customer0_ where customer0_.custid=?
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Student
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select roll from Student where roll =?
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select student_.roll, student_.branch as branch2_9_, student_.dob as dob3_9_, student_.email as email4_9_, student_.name as name5_9_, student_.numBooks as numbooks6_9_, student_.password as password7_9_ from Student student_ where student_.roll=?
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Student (branch, dob, email, name, numBooks, password, roll) values (?, ?, ?, ?, ?, ?, ?)
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Student set branch=?, dob=?, email=?, name=?, numBooks=?, password=? where roll=?
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Student where roll=?
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Student
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a0ac48e]
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24e08d59
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Student, columns={roll}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24e08d59
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Student
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : branch
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=branch, type=string [non-identifier])
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=branch, type=string [non-identifier])
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : dob
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=dob, type=date [non-identifier])
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=dob, type=date [non-identifier])
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : email
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=email, type=string [non-identifier])
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,958[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,959[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : numBooks
2024-07-11 15:08:28,959[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=numBooks, type=integer [non-identifier])
2024-07-11 15:08:28,959[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=numBooks, type=integer [non-identifier])
2024-07-11 15:08:28,959[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : password
2024-07-11 15:08:28,959[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=password, type=string [non-identifier])
2024-07-11 15:08:28,959[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
2024-07-11 15:08:28,959[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24e08d59
2024-07-11 15:08:28,959[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Student
2024-07-11 15:08:28,959[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,959[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.model.Student, querySpaceUid=<gen:0>, path=com.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {roll1_9_0_}

2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Student [NONE]: select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=?
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] DEBUG  Static SQL for entity: com.model.Employee
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] DEBUG   Version select: select empid from Employee where empid =?
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] DEBUG   Snapshot select: select employee_.empid, employee_.depid as depid3_3_, employee_.name as name2_3_, employee_.parking_parkingid as parking_4_3_ from Employee employee_ where employee_.empid=?
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] DEBUG   Insert 0: insert into Employee (depid, name, parking_parkingid, empid) values (?, ?, ?, ?)
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] DEBUG   Update 0: update Employee set depid=?, name=?, parking_parkingid=? where empid=?
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] DEBUG   Delete 0: delete from Employee where empid=?
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] TRACE   Starting root entity : com.model.Employee
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77cb9cd1]
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@971e903
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Employee, columns={empid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@971e903
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Employee
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : department
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=department, type=com.model.Department [non-identifier,association])
2024-07-11 15:08:28,960[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35636217]
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1549bba7
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  .... Registering AssociationKey : AssociationKey(table=Employee, columns={depid}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1549bba7
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting entity identifier : com.model.Department
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : department.employees
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Property path deemed to be circular : department.employees
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : department.establishdate
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=establishdate, type=date [non-identifier])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=establishdate, type=date [non-identifier])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : department.name
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1549bba7
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=department, type=com.model.Department [non-identifier,association])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : parking
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=parking, type=com.model.Parking [non-identifier,association])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4f80cb]
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@38704ff0
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  .... Registering AssociationKey : AssociationKey(table=Employee, columns={parking_parkingid}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@38704ff0
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting entity identifier : com.model.Parking
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : parking.floornum
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@38704ff0
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=parking, type=com.model.Parking [non-identifier,association])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : projects
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=projects, type=java.util.Collection(com.model.Employee.projects) [non-identifier,association])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16ade133]
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e61e4c2]
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=projects, type=java.util.Collection(com.model.Employee.projects) [non-identifier,association])
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@971e903
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] TRACE   Finished root entity : com.model.Employee
2024-07-11 15:08:28,961[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,962[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,962[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(entity=com.model.Employee)
    - Returns
       - EntityReturnImpl(entity=com.model.Employee, querySpaceUid=<gen:0>, path=com.model.Employee)
          - EntityAttributeFetchImpl(entity=com.model.Department, querySpaceUid=<gen:1>, path=com.model.Employee.department)
          - EntityAttributeFetchImpl(entity=com.model.Parking, querySpaceUid=<gen:2>, path=com.model.Employee.parking)
          - CollectionAttributeFetchImpl(collection=com.model.Employee.projects, querySpaceUid=<gen:3>, path=com.model.Employee.projects)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.model.Project, querySpaceUid=<gen:4>, path=com.model.Employee.projects.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.model.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {empid1_3_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.model.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {depid1_2_1_}
          - JOIN (JoinDefinedByMetadata(parking)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.model.Parking)
                - SQL table alias mapping - parking2_
                - alias suffix - 2_
                - suffixed key columns - {parkingi1_5_2_}

2024-07-11 15:08:28,962[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for entity com.model.Employee [NONE]: select employee0_.empid as empid1_3_0_, employee0_.depid as depid3_3_0_, employee0_.name as name2_3_0_, employee0_.parking_parkingid as parking_4_3_0_, department1_.depid as depid1_2_1_, department1_.establishdate as establis2_2_1_, department1_.name as name3_2_1_, parking2_.parkingid as parkingi1_5_2_, parking2_.floornum as floornum2_5_2_ from Employee employee0_ left outer join Department department1_ on employee0_.depid=department1_.depid left outer join Parking parking2_ on employee0_.parking_parkingid=parking2_.parkingid where employee0_.empid=?
2024-07-11 15:08:28,966[yyyy-mm-dd HH-MM-SS] TRACE   Starting root collection : com.model.Employee.projects
2024-07-11 15:08:28,967[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2116b68b]
2024-07-11 15:08:28,967[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11de56e6]
2024-07-11 15:08:28,967[yyyy-mm-dd HH-MM-SS] TRACE  Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@616b241a
2024-07-11 15:08:28,967[yyyy-mm-dd HH-MM-SS] TRACE   Registering AssociationKey : AssociationKey(table=Employee_Project, columns={Employee_empid}) -> null
2024-07-11 15:08:28,968[yyyy-mm-dd HH-MM-SS] TRACE   Starting collection element graph : com.model.Employee.projects
2024-07-11 15:08:28,968[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3e1624c7
2024-07-11 15:08:28,968[yyyy-mm-dd HH-MM-SS] TRACE  .. Registering AssociationKey : AssociationKey(table=Employee_Project, columns={projects_projid}) -> org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3e1624c7
2024-07-11 15:08:28,968[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Project
2024-07-11 15:08:28,968[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : amount
2024-07-11 15:08:28,968[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=amount, type=double [non-identifier])
2024-07-11 15:08:28,968[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=amount, type=double [non-identifier])
2024-07-11 15:08:28,968[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : title
2024-07-11 15:08:28,968[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=title, type=string [non-identifier])
2024-07-11 15:08:28,968[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
2024-07-11 15:08:28,968[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3e1624c7
2024-07-11 15:08:28,969[yyyy-mm-dd HH-MM-SS] TRACE   Finished collection element graph : com.model.Employee.projects
2024-07-11 15:08:28,969[yyyy-mm-dd HH-MM-SS] TRACE  Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@616b241a
2024-07-11 15:08:28,969[yyyy-mm-dd HH-MM-SS] TRACE   Finished root collection : com.model.Employee.projects
2024-07-11 15:08:28,969[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,974[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,974[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(collection=com.model.Employee.projects)
    - Returns
       - CollectionReturnImpl(collection=com.model.Employee.projects, querySpaceUid=<gen:0>, path=[com.model.Employee.projects])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.model.Project, querySpaceUid=<gen:1>, path=[com.model.Employee.projects].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.model.Employee.projects)
          - SQL table alias mapping - projects0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - projid1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.model.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {projid1_8_1_}

2024-07-11 15:08:28,975[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for collection com.model.Employee.projects: select projects0_.Employee_empid as employee1_4_0_, projects0_.projects_projid as projects2_4_0_, project1_.projid as projid1_8_1_, project1_.amount as amount2_8_1_, project1_.title as title3_8_1_ from Employee_Project projects0_ inner join Project project1_ on projects0_.projects_projid=project1_.projid where projects0_.Employee_empid=?
2024-07-11 15:08:28,975[yyyy-mm-dd HH-MM-SS] TRACE   Starting root collection : com.model.Department.employees
2024-07-11 15:08:28,975[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16073fa8]
2024-07-11 15:08:28,975[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cc9cfb2]
2024-07-11 15:08:28,975[yyyy-mm-dd HH-MM-SS] TRACE  Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@cfbc8e8
2024-07-11 15:08:28,975[yyyy-mm-dd HH-MM-SS] TRACE   Registering AssociationKey : AssociationKey(table=Employee, columns={depid}) -> null
2024-07-11 15:08:28,975[yyyy-mm-dd HH-MM-SS] TRACE   Starting collection element graph : com.model.Department.employees
2024-07-11 15:08:28,975[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3bead518
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting entity identifier : com.model.Employee
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : department
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] DEBUG  Property path deemed to be circular : department
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : name
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : parking
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=parking, type=com.model.Parking [non-identifier,association])
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14bf57b2]
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@46d9aec8
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  .... Registering AssociationKey : AssociationKey(table=Employee, columns={parking_parkingid}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@46d9aec8
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting entity identifier : com.model.Parking
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : parking.floornum
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  >>>> Starting attribute Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  <<<< Finishing up attribute : Attribute(name=floornum, type=integer [non-identifier])
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@46d9aec8
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=parking, type=com.model.Parking [non-identifier,association])
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] DEBUG  Visiting attribute path : projects
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  >> Starting attribute Attribute(name=projects, type=java.util.Collection(com.model.Employee.projects) [non-identifier,association])
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14379273]
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] DEBUG  Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7918c7f8]
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  << Finishing up attribute : Attribute(name=projects, type=java.util.Collection(com.model.Employee.projects) [non-identifier,association])
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3bead518
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE   Finished collection element graph : com.model.Department.employees
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE  Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@cfbc8e8
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] TRACE   Finished root collection : com.model.Department.employees
2024-07-11 15:08:28,976[yyyy-mm-dd HH-MM-SS] DEBUG  Building LoadPlan...
2024-07-11 15:08:28,977[yyyy-mm-dd HH-MM-SS] DEBUG  processing queryspace <gen:0>
2024-07-11 15:08:28,977[yyyy-mm-dd HH-MM-SS] DEBUG  LoadPlan(collection=com.model.Department.employees)
    - Returns
       - CollectionReturnImpl(collection=com.model.Department.employees, querySpaceUid=<gen:0>, path=[com.model.Department.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.model.Employee, querySpaceUid=<gen:1>, path=[com.model.Department.employees].<elements>)
             - EntityAttributeFetchImpl(entity=com.model.Parking, querySpaceUid=<gen:2>, path=[com.model.Department.employees].<elements>.parking)
             - CollectionAttributeFetchImpl(collection=com.model.Employee.projects, querySpaceUid=<gen:3>, path=[com.model.Department.employees].<elements>.projects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.model.Project, querySpaceUid=<gen:4>, path=[com.model.Department.employees].<elements>.projects.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.model.Department.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {depid3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - empid1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.model.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {empid1_3_1_}
                - JOIN (JoinDefinedByMetadata(parking)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.model.Parking)
                      - SQL table alias mapping - parking1_
                      - alias suffix - 2_
                      - suffixed key columns - {parkingi1_5_2_}

2024-07-11 15:08:28,978[yyyy-mm-dd HH-MM-SS] DEBUG  Static select for collection com.model.Department.employees: select employees0_.depid as depid3_3_0_, employees0_.empid as empid1_3_0_, employees0_.empid as empid1_3_1_, employees0_.depid as depid3_3_1_, employees0_.name as name2_3_1_, employees0_.parking_parkingid as parking_4_3_1_, parking1_.parkingid as parkingi1_5_2_, parking1_.floornum as floornum2_5_2_ from Employee employees0_ left outer join Parking parking1_ on employees0_.parking_parkingid=parking1_.parkingid where employees0_.depid=?
2024-07-11 15:08:28,993[yyyy-mm-dd HH-MM-SS] TRACE  Wrapping up metadata context...
2024-07-11 15:08:28,993[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Player]
2024-07-11 15:08:28,993[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Player.playerid]
2024-07-11 15:08:28,994[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [playerid]
2024-07-11 15:08:28,995[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Player.playerid]
2024-07-11 15:08:28,995[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,000[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Player.kit]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [kit]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [com.model.PlayerKit com.model.Player.kit]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=com.model.PlayerKit, class=org.hibernate.type.ManyToOneType]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Player.name]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Player.name]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Player.team]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [team]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [com.model.Team com.model.Player.team]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=com.model.Team, class=org.hibernate.type.ManyToOneType]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Player]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Department]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Department.depid]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [depid]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Department.depid]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Department.employees]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [employees]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.util.List com.model.Department.employees]
2024-07-11 15:08:29,001[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=java.util.Collection(com.model.Department.employees), class=org.hibernate.type.BagType]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Department.establishdate]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [establishdate]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.sql.Date com.model.Department.establishdate]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=date, class=org.hibernate.type.DateType]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Department.name]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Department.name]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Department]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Project]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Project.projid]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [projid]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Project.projid]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Project.amount]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [amount]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.Double com.model.Project.amount]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=double, class=org.hibernate.type.DoubleType]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Project.title]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [title]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Project.title]
2024-07-11 15:08:29,007[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Project]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Book]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Book.bid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [bid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Book.bid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Book.author]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [author]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Book.author]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Book.bookTypeid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [bookTypeid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Book.bookTypeid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Book.isid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [isid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Book.isid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Book.publisher]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [publisher]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Book.publisher]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Book.title]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [title]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Book.title]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Book]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.PlayerKit]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [PlayerKit.kitid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [kitid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.PlayerKit.kitid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [PlayerKit.numBats]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [numBats]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.Integer com.model.PlayerKit.numBats]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.PlayerKit]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Team]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Team.teamid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [teamid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Team.teamid]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Team.name]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.String com.model.Team.name]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Team]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Parking]
2024-07-11 15:08:29,008[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Parking.parkingId]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [parkingId]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Parking.parkingId]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Parking.floornum]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [floornum]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Parking.floornum]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Parking]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Customer]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Customer.custid]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [custid]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [int com.model.Customer.custid]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Customer.address]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [address]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.String com.model.Customer.address]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Customer.dob]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [dob]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.sql.Date com.model.Customer.dob]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=date, class=org.hibernate.type.DateType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Customer.email]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [email]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.String com.model.Customer.email]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Customer.name]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.String com.model.Customer.name]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Customer.phone]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [phone]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.lang.String com.model.Customer.phone]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Customer]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Student]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Student.roll]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [roll]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Student.roll]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.branch]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [branch]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Student.branch]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.dob]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [dob]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.sql.Date com.model.Student.dob]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=date, class=org.hibernate.type.DateType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.email]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [email]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Student.email]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.name]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Student.name]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.numBooks]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [numBooks]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Student.numBooks]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Student.password]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [password]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Student.password]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Student]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting entity [com.model.Employee]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building identifier attribute [Employee.empid]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [empid]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private int com.model.Employee.empid]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=integer, class=org.hibernate.type.IntegerType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Employee.department]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [department]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [com.model.Department com.model.Employee.department]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=com.model.Department, class=org.hibernate.type.ManyToOneType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Employee.name]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [name]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [private java.lang.String com.model.Employee.name]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=string, class=org.hibernate.type.StringType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Employee.parking]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [parking]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [com.model.Parking com.model.Employee.parking]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=com.model.Parking, class=org.hibernate.type.ManyToOneType]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Building attribute [Employee.projects]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE  Starting attribute metadata determination [projects]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined member [java.util.List com.model.Employee.projects]
2024-07-11 15:08:29,009[yyyy-mm-dd HH-MM-SS] TRACE      Determined type [name=java.util.Collection(com.model.Employee.projects), class=org.hibernate.type.BagType]
2024-07-11 15:08:29,010[yyyy-mm-dd HH-MM-SS] TRACE  Completed entity [com.model.Employee]
2024-07-11 15:08:29,017[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
2024-07-11 15:08:29,027[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting [null]
2024-07-11 15:08:29,043[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:08:29,044[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [lpu24] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,047[yyyy-mm-dd HH-MM-SS] INFO   HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5c9ac4cc] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Book]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Book] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [bid]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [bid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [author]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [author] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [booktypeid]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [booktypeid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [isid]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [isid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [publisher]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [publisher] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [title]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [title] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Book
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Customer]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Customer] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [custid]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [custid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [address]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [dob]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [dob] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [email]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [email] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [phone]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [phone] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Customer
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Department]
2024-07-11 15:08:29,109[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Department] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [depid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [depid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [establishdate]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [establishdate] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Department
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [empid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [empid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [depid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [depid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [parking_parkingid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [parking_parkingid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Employee
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee_Project]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee_Project] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee_empid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee_empid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [projects_projid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [projects_projid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Employee_Project
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [hibernate_sequence]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [hibernate_sequence] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [next_val]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [next_val] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : hibernate_sequence
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Parking]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Parking] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [parkingid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [parkingid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [floornum]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [floornum] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Parking
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Player]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Player] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [kit_kitid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [kit_kitid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [teamid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [teamid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Player
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerkit]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerkit] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [kitid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [kitid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [numbats]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [numbats] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : playerkit
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerseq]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerseq] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [next_val]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [next_val] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : playerseq
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Project]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Project] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [projid]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [projid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [amount]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [amount] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [title]
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [title] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Project
2024-07-11 15:08:29,110[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Student]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Student] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [roll]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [roll] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [branch]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [branch] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [dob]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [dob] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [email]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [email] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [numBooks]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [numBooks] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [password]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [password] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Student
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Team]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Team] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [teamid]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [teamid] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [name]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] DEBUG  No alter strings for table : Team
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Book]
2024-07-11 15:08:29,111[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Book] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Interpreting UniqueConstraintSchemaUpdateStrategy from setting : null
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Customer]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Customer] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Department]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Department] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee_Project]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee_Project] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [hibernate_sequence]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [hibernate_sequence] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Parking]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Parking] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Player]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Player] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerkit]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerkit] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerseq]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerseq] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Project]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Project] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Student]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Student] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Team]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Team] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Book]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Book] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Customer]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Customer] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Department]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Department] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee]
2024-07-11 15:08:29,112[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,125[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:08:29,125[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [department]
2024-07-11 15:08:29,135[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [depid]
2024-07-11 15:08:29,135[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [depid]
2024-07-11 15:08:29,135[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:08:29,135[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [parking]
2024-07-11 15:08:29,140[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [parking_parkingid]
2024-07-11 15:08:29,140[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [parkingid]
2024-07-11 15:08:29,142[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee_Project]
2024-07-11 15:08:29,142[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Employee_Project] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,152[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:08:29,152[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [employee]
2024-07-11 15:08:29,157[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Employee_empid]
2024-07-11 15:08:29,157[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [empid]
2024-07-11 15:08:29,157[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:08:29,157[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [project]
2024-07-11 15:08:29,161[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [projects_projid]
2024-07-11 15:08:29,162[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [projid]
2024-07-11 15:08:29,162[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [hibernate_sequence]
2024-07-11 15:08:29,162[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [hibernate_sequence] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,162[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Parking]
2024-07-11 15:08:29,162[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Parking] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,162[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Player]
2024-07-11 15:08:29,162[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Player] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,168[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:08:29,168[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerkit]
2024-07-11 15:08:29,171[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [kit_kitid]
2024-07-11 15:08:29,171[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [kitid]
2024-07-11 15:08:29,171[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [lpu24]
2024-07-11 15:08:29,172[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [team]
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [teamid]
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [teamid]
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerkit]
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerkit] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [playerseq]
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [playerseq] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Project]
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Project] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Student]
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Student] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Normalizing identifier quoting for object name [Team]
2024-07-11 15:08:29,175[yyyy-mm-dd HH-MM-SS] TRACE  Rendering unquoted identifier [Team] in lower case for use in DatabaseMetaData
2024-07-11 15:08:29,177[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
2024-07-11 15:08:29,177[yyyy-mm-dd HH-MM-SS] DEBUG  No JtaPlatform was specified, checking resolver
2024-07-11 15:08:29,177[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
2024-07-11 15:08:29,177[yyyy-mm-dd HH-MM-SS] DEBUG  No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2024-07-11 15:08:29,181[yyyy-mm-dd HH-MM-SS] DEBUG  Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-11 15:08:29,181[yyyy-mm-dd HH-MM-SS] INFO   HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-11 15:08:29,184[yyyy-mm-dd HH-MM-SS] DEBUG  EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 15:08:29,186[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.hql.spi.QueryTranslatorFactory]
2024-07-11 15:08:29,186[yyyy-mm-dd HH-MM-SS] DEBUG  QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5f780a86
2024-07-11 15:08:29,193[yyyy-mm-dd HH-MM-SS] DEBUG  Checking 0 named HQL queries
2024-07-11 15:08:29,193[yyyy-mm-dd HH-MM-SS] DEBUG  Checking 0 named SQL queries
2024-07-11 15:08:29,193[yyyy-mm-dd HH-MM-SS] TRACE  Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6b9267b] for TypeConfiguration
2024-07-11 15:08:29,195[yyyy-mm-dd HH-MM-SS] DEBUG  Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1816e24a
2024-07-11 15:08:29,195[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
2024-07-11 15:08:29,197[yyyy-mm-dd HH-MM-SS] DEBUG  Registering SessionFactory: 15438c13-b267-470e-a665-807876ed402d (<unnamed>)
2024-07-11 15:08:29,197[yyyy-mm-dd HH-MM-SS] DEBUG  Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-11 15:08:29,197[yyyy-mm-dd HH-MM-SS] TRACE  Opening Hibernate Session.  tenant=null
2024-07-11 15:08:29,267[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
2024-07-11 15:08:29,274[yyyy-mm-dd HH-MM-SS] DEBUG  Statistics initialized [enabled=false]
2024-07-11 15:08:29,278[yyyy-mm-dd HH-MM-SS] TRACE  Initializing service [role=org.hibernate.jmx.spi.JmxService]
2024-07-11 15:08:29,280[yyyy-mm-dd HH-MM-SS] TRACE  Opened Session [b7208b73-735d-46b2-b391-a58bae983592] at timestamp: 1720690709234
2024-07-11 15:08:29,289[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Book#101]
2024-07-11 15:08:29,289[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Book#101]
2024-07-11 15:08:29,290[yyyy-mm-dd HH-MM-SS] TRACE  Object not resolved in any cache: [com.model.Book#101]
2024-07-11 15:08:29,290[yyyy-mm-dd HH-MM-SS] TRACE  Fetching entity: [com.model.Book#101]
2024-07-11 15:08:29,294[yyyy-mm-dd HH-MM-SS] DEBUG  select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=?
2024-07-11 15:08:29,295[yyyy-mm-dd HH-MM-SS] TRACE  Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:08:29,295[yyyy-mm-dd HH-MM-SS] TRACE  Registering last query statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:08:29,297[yyyy-mm-dd HH-MM-SS] TRACE  binding parameter [1] as [INTEGER] - [101]
2024-07-11 15:08:29,297[yyyy-mm-dd HH-MM-SS] TRACE  Bound [2] parameters total
2024-07-11 15:08:29,301[yyyy-mm-dd HH-MM-SS] TRACE  Registering result set [com.mysql.cj.jdbc.result.ResultSetImpl@46d63dbb]
2024-07-11 15:08:29,302[yyyy-mm-dd HH-MM-SS] TRACE  Processing result set
2024-07-11 15:08:29,302[yyyy-mm-dd HH-MM-SS] TRACE  Starting ResultSet row #0
2024-07-11 15:08:29,303[yyyy-mm-dd HH-MM-SS] DEBUG  On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-07-11 15:08:29,304[yyyy-mm-dd HH-MM-SS] TRACE  hydrating entity state
2024-07-11 15:08:29,304[yyyy-mm-dd HH-MM-SS] TRACE  Initializing object from ResultSet: [com.model.Book#101]
2024-07-11 15:08:29,309[yyyy-mm-dd HH-MM-SS] TRACE  Hydrating entity: [com.model.Book#101]
2024-07-11 15:08:29,310[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([author2_0_0_] : [VARCHAR]) - [Ritchie]
2024-07-11 15:08:29,310[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([booktype3_0_0_] : [INTEGER]) - [1]
2024-07-11 15:08:29,310[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([isid4_0_0_] : [INTEGER]) - [0]
2024-07-11 15:08:29,310[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([publishe5_0_0_] : [VARCHAR]) - [Pearson]
2024-07-11 15:08:29,310[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([title6_0_0_] : [VARCHAR]) - [C]
2024-07-11 15:08:29,311[yyyy-mm-dd HH-MM-SS] TRACE  Done processing result set (1 rows)
2024-07-11 15:08:29,312[yyyy-mm-dd HH-MM-SS] TRACE  Total objects hydrated: 1
2024-07-11 15:08:29,313[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving attributes for [com.model.Book#101]
2024-07-11 15:08:29,314[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `author` : value = Ritchie
2024-07-11 15:08:29,314[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`author`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,314[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `bookTypeid` : value = 1
2024-07-11 15:08:29,314[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`bookTypeid`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,314[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `isid` : value = 0
2024-07-11 15:08:29,314[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`isid`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,314[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `publisher` : value = Pearson
2024-07-11 15:08:29,314[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`publisher`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,314[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `title` : value = C
2024-07-11 15:08:29,314[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`title`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,316[yyyy-mm-dd HH-MM-SS] DEBUG  Done materializing entity [com.model.Book#101]
2024-07-11 15:08:29,317[yyyy-mm-dd HH-MM-SS] TRACE  Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
2024-07-11 15:08:29,317[yyyy-mm-dd HH-MM-SS] TRACE  Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=101]
2024-07-11 15:08:29,317[yyyy-mm-dd HH-MM-SS] TRACE  Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@46d63dbb]
2024-07-11 15:08:29,318[yyyy-mm-dd HH-MM-SS] TRACE  Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=101]
2024-07-11 15:08:29,318[yyyy-mm-dd HH-MM-SS] TRACE  Starting after statement execution processing [AFTER_TRANSACTION]
2024-07-11 15:08:29,318[yyyy-mm-dd HH-MM-SS] TRACE  Initializing non-lazy collections
2024-07-11 15:08:29,318[yyyy-mm-dd HH-MM-SS] DEBUG  Done entity load : com.model.Book#101
2024-07-11 15:08:29,318[yyyy-mm-dd HH-MM-SS] TRACE  LogicalConnection#afterTransaction
2024-07-11 15:08:29,318[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:08:29,318[yyyy-mm-dd HH-MM-SS] DEBUG  Initiating JDBC connection release from afterTransaction
2024-07-11 15:08:29,318[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:08:29,367[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Book#102]
2024-07-11 15:08:29,367[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Book#102]
2024-07-11 15:08:29,367[yyyy-mm-dd HH-MM-SS] TRACE  Object not resolved in any cache: [com.model.Book#102]
2024-07-11 15:08:29,367[yyyy-mm-dd HH-MM-SS] TRACE  Fetching entity: [com.model.Book#102]
2024-07-11 15:08:29,368[yyyy-mm-dd HH-MM-SS] DEBUG  select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=?
2024-07-11 15:08:29,368[yyyy-mm-dd HH-MM-SS] TRACE  Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:08:29,368[yyyy-mm-dd HH-MM-SS] TRACE  Registering last query statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:08:29,368[yyyy-mm-dd HH-MM-SS] TRACE  binding parameter [1] as [INTEGER] - [102]
2024-07-11 15:08:29,368[yyyy-mm-dd HH-MM-SS] TRACE  Bound [2] parameters total
2024-07-11 15:08:29,369[yyyy-mm-dd HH-MM-SS] TRACE  Registering result set [com.mysql.cj.jdbc.result.ResultSetImpl@38af1bf6]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Processing result set
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Starting ResultSet row #0
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  hydrating entity state
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Initializing object from ResultSet: [com.model.Book#102]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Hydrating entity: [com.model.Book#102]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([author2_0_0_] : [VARCHAR]) - [Ritchie]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([booktype3_0_0_] : [INTEGER]) - [1]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([isid4_0_0_] : [INTEGER]) - [0]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([publishe5_0_0_] : [VARCHAR]) - [Pearson]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([title6_0_0_] : [VARCHAR]) - [C]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Done processing result set (1 rows)
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Total objects hydrated: 1
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving attributes for [com.model.Book#102]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `author` : value = Ritchie
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`author`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `bookTypeid` : value = 1
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`bookTypeid`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `isid` : value = 0
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`isid`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `publisher` : value = Pearson
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`publisher`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `title` : value = C
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`title`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Done materializing entity [com.model.Book#102]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=102]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@38af1bf6]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=102]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Starting after statement execution processing [AFTER_TRANSACTION]
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Initializing non-lazy collections
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Done entity load : com.model.Book#102
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  LogicalConnection#afterTransaction
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] DEBUG  Initiating JDBC connection release from afterTransaction
2024-07-11 15:08:29,370[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:08:29,371[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Book#103]
2024-07-11 15:08:29,371[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Book#103]
2024-07-11 15:08:29,371[yyyy-mm-dd HH-MM-SS] TRACE  Object not resolved in any cache: [com.model.Book#103]
2024-07-11 15:08:29,371[yyyy-mm-dd HH-MM-SS] TRACE  Fetching entity: [com.model.Book#103]
2024-07-11 15:08:29,371[yyyy-mm-dd HH-MM-SS] DEBUG  select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=?
2024-07-11 15:08:29,372[yyyy-mm-dd HH-MM-SS] TRACE  Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:08:29,372[yyyy-mm-dd HH-MM-SS] TRACE  Registering last query statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:08:29,372[yyyy-mm-dd HH-MM-SS] TRACE  binding parameter [1] as [INTEGER] - [103]
2024-07-11 15:08:29,372[yyyy-mm-dd HH-MM-SS] TRACE  Bound [2] parameters total
2024-07-11 15:08:29,373[yyyy-mm-dd HH-MM-SS] TRACE  Registering result set [com.mysql.cj.jdbc.result.ResultSetImpl@3abfe845]
2024-07-11 15:08:29,373[yyyy-mm-dd HH-MM-SS] TRACE  Processing result set
2024-07-11 15:08:29,373[yyyy-mm-dd HH-MM-SS] TRACE  Starting ResultSet row #0
2024-07-11 15:08:29,373[yyyy-mm-dd HH-MM-SS] DEBUG  On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-07-11 15:08:29,373[yyyy-mm-dd HH-MM-SS] TRACE  hydrating entity state
2024-07-11 15:08:29,373[yyyy-mm-dd HH-MM-SS] TRACE  Initializing object from ResultSet: [com.model.Book#103]
2024-07-11 15:08:29,373[yyyy-mm-dd HH-MM-SS] TRACE  Hydrating entity: [com.model.Book#103]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([author2_0_0_] : [VARCHAR]) - [Herbert]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([booktype3_0_0_] : [INTEGER]) - [2]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([isid4_0_0_] : [INTEGER]) - [0]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([publishe5_0_0_] : [VARCHAR]) - [McGraw Hill]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([title6_0_0_] : [VARCHAR]) - [Java Complete Ref]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  Done processing result set (1 rows)
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  Total objects hydrated: 1
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving attributes for [com.model.Book#103]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `author` : value = Herbert
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`author`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `bookTypeid` : value = 2
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`bookTypeid`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `isid` : value = 0
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`isid`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `publisher` : value = McGraw Hill
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`publisher`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `title` : value = Java Complete Ref
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`title`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Done materializing entity [com.model.Book#103]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=103]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@3abfe845]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=103]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  Starting after statement execution processing [AFTER_TRANSACTION]
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  Initializing non-lazy collections
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Done entity load : com.model.Book#103
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  LogicalConnection#afterTransaction
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] DEBUG  Initiating JDBC connection release from afterTransaction
2024-07-11 15:08:29,374[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:08:29,375[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Book#101]
2024-07-11 15:08:29,375[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Book#101]
2024-07-11 15:08:29,375[yyyy-mm-dd HH-MM-SS] TRACE  LogicalConnection#afterTransaction
2024-07-11 15:08:29,375[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:08:29,375[yyyy-mm-dd HH-MM-SS] DEBUG  Initiating JDBC connection release from afterTransaction
2024-07-11 15:08:29,375[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Student#2401]
2024-07-11 15:08:29,375[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Student#2401]
2024-07-11 15:08:29,375[yyyy-mm-dd HH-MM-SS] TRACE  Object not resolved in any cache: [com.model.Student#2401]
2024-07-11 15:08:29,375[yyyy-mm-dd HH-MM-SS] TRACE  Fetching entity: [com.model.Student#2401]
2024-07-11 15:08:29,375[yyyy-mm-dd HH-MM-SS] DEBUG  select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=?
2024-07-11 15:08:29,375[yyyy-mm-dd HH-MM-SS] TRACE  Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=** NOT SPECIFIED **]
2024-07-11 15:08:29,377[yyyy-mm-dd HH-MM-SS] TRACE  Registering last query statement [com.mysql.cj.jdbc.ClientPreparedStatement: select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=** NOT SPECIFIED **]
2024-07-11 15:08:29,377[yyyy-mm-dd HH-MM-SS] TRACE  binding parameter [1] as [INTEGER] - [2401]
2024-07-11 15:08:29,377[yyyy-mm-dd HH-MM-SS] TRACE  Bound [2] parameters total
2024-07-11 15:08:29,378[yyyy-mm-dd HH-MM-SS] TRACE  Registering result set [com.mysql.cj.jdbc.result.ResultSetImpl@4248b963]
2024-07-11 15:08:29,378[yyyy-mm-dd HH-MM-SS] TRACE  Processing result set
2024-07-11 15:08:29,378[yyyy-mm-dd HH-MM-SS] TRACE  Starting ResultSet row #0
2024-07-11 15:08:29,378[yyyy-mm-dd HH-MM-SS] DEBUG  On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2024-07-11 15:08:29,379[yyyy-mm-dd HH-MM-SS] TRACE  hydrating entity state
2024-07-11 15:08:29,379[yyyy-mm-dd HH-MM-SS] TRACE  Initializing object from ResultSet: [com.model.Student#2401]
2024-07-11 15:08:29,379[yyyy-mm-dd HH-MM-SS] TRACE  Hydrating entity: [com.model.Student#2401]
2024-07-11 15:08:29,379[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([branch2_9_0_] : [VARCHAR]) - [cse]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([dob3_9_0_] : [DATE]) - [2014-01-01]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([email4_9_0_] : [VARCHAR]) - [akash@gmail.com]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([name5_9_0_] : [VARCHAR]) - [Akash Missing]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([numbooks6_9_0_] : [INTEGER]) - [0]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  extracted value ([password7_9_0_] : [VARCHAR]) - [mypass]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  Done processing result set (1 rows)
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  Total objects hydrated: 1
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Resolving attributes for [com.model.Student#2401]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `branch` : value = cse
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`branch`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `dob` : value = 2014-01-01
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`dob`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `email` : value = akash@gmail.com
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`email`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `name` : value = Akash Missing
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`name`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `numBooks` : value = 0
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`numBooks`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Processing attribute `password` : value = mypass
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Attribute (`password`)  - enhanced for lazy-loading? - false
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Done materializing entity [com.model.Student#2401]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=2401]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4248b963]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: select student0_.roll as roll1_9_0_, student0_.branch as branch2_9_0_, student0_.dob as dob3_9_0_, student0_.email as email4_9_0_, student0_.name as name5_9_0_, student0_.numBooks as numbooks6_9_0_, student0_.password as password7_9_0_ from Student student0_ where student0_.roll=2401]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  Starting after statement execution processing [AFTER_TRANSACTION]
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  Initializing non-lazy collections
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Done entity load : com.model.Student#2401
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  LogicalConnection#afterTransaction
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] DEBUG  Initiating JDBC connection release from afterTransaction
2024-07-11 15:08:29,380[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] DEBUG  On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] DEBUG  begin
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] TRACE  Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] TRACE  Transaction begun via JDBC Connection.setAutoCommit(false)
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] TRACE  ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] TRACE  Loading entity: [com.model.Book#114]
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] TRACE  Attempting to resolve: [com.model.Book#114]
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] TRACE  Object not resolved in any cache: [com.model.Book#114]
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] TRACE  Fetching entity: [com.model.Book#114]
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] DEBUG  select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=?
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] TRACE  Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:08:29,383[yyyy-mm-dd HH-MM-SS] TRACE  Registering last query statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=** NOT SPECIFIED **]
2024-07-11 15:08:29,384[yyyy-mm-dd HH-MM-SS] TRACE  binding parameter [1] as [INTEGER] - [114]
2024-07-11 15:08:29,384[yyyy-mm-dd HH-MM-SS] TRACE  Bound [2] parameters total
2024-07-11 15:08:29,385[yyyy-mm-dd HH-MM-SS] TRACE  Registering result set [com.mysql.cj.jdbc.result.ResultSetImpl@2aa6311a]
2024-07-11 15:08:29,385[yyyy-mm-dd HH-MM-SS] TRACE  Processing result set
2024-07-11 15:08:29,385[yyyy-mm-dd HH-MM-SS] TRACE  Done processing result set (0 rows)
2024-07-11 15:08:29,385[yyyy-mm-dd HH-MM-SS] TRACE  Total objects hydrated: 0
2024-07-11 15:08:29,385[yyyy-mm-dd HH-MM-SS] TRACE  Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
2024-07-11 15:08:29,385[yyyy-mm-dd HH-MM-SS] TRACE  Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=114]
2024-07-11 15:08:29,385[yyyy-mm-dd HH-MM-SS] TRACE  Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@2aa6311a]
2024-07-11 15:08:29,385[yyyy-mm-dd HH-MM-SS] TRACE  Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: select book0_.bid as bid1_0_0_, book0_.author as author2_0_0_, book0_.booktypeid as booktype3_0_0_, book0_.isid as isid4_0_0_, book0_.publisher as publishe5_0_0_, book0_.title as title6_0_0_ from Book book0_ where book0_.bid=114]
2024-07-11 15:08:29,385[yyyy-mm-dd HH-MM-SS] TRACE  Starting after statement execution processing [AFTER_TRANSACTION]
2024-07-11 15:08:29,385[yyyy-mm-dd HH-MM-SS] TRACE  Initializing non-lazy collections
2024-07-11 15:08:29,385[yyyy-mm-dd HH-MM-SS] DEBUG  Done entity load : com.model.Book#114
2024-07-11 15:08:29,387[yyyy-mm-dd HH-MM-SS] DEBUG  JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:428)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.SessionImpl.remove(SessionImpl.java:3369)
	at libraryHib.Main.main(Main.java:38)
2024-07-11 15:08:29,390[yyyy-mm-dd HH-MM-SS] TRACE  Closing session [b7208b73-735d-46b2-b391-a58bae983592]
2024-07-11 15:08:29,390[yyyy-mm-dd HH-MM-SS] TRACE  Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2b59501e]
2024-07-11 15:08:29,390[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:08:29,390[yyyy-mm-dd HH-MM-SS] TRACE  Closing logical connection
2024-07-11 15:08:29,390[yyyy-mm-dd HH-MM-SS] TRACE  Releasing JDBC resources
2024-07-11 15:08:29,391[yyyy-mm-dd HH-MM-SS] TRACE  Logical connection closed
2024-07-11 15:08:29,392[yyyy-mm-dd HH-MM-SS] DEBUG  HHH000031: Closing
2024-07-11 15:08:29,392[yyyy-mm-dd HH-MM-SS] TRACE  Cleaning QueryPlan Cache
2024-07-11 15:08:29,392[yyyy-mm-dd HH-MM-SS] TRACE  Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6b9267b] for TypeConfiguration
2024-07-11 15:08:29,392[yyyy-mm-dd HH-MM-SS] DEBUG  Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@153cd6bb] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6b9267b]
2024-07-11 15:08:29,393[yyyy-mm-dd HH-MM-SS] DEBUG  Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-07-11 15:08:29,393[yyyy-mm-dd HH-MM-SS] INFO   HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/lpu24]
2024-07-11 15:08:29,395[yyyy-mm-dd HH-MM-SS] DEBUG  Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
